spring.profiles.active=local-docker
#spring.profiles.active=local
#spring.profiles.active=local-dev-data
#spring.profiles.active=dev
giga.url=https://gigety.com

################ GIGA SPECIFICA ######################################
giga.imgdir=/usr/share/tomcat8/data/
giga.file.size.max=10000000

################# LOGGING ############################################
#logging.level.org.springframework.web=DEBUG
logging.level.com.spazomatic.jobyjob=DEBUG
#server.context-path=/jobyjob

################# MONGO ##############################################
spring.data.mongodb.database=anispot
#spring.data.mongodb.uri=mongodb://mongo/anispot

################### MAIL CONFIG ######################################
smtp.host=smtp.gmail.com
smtp.port=587
smtp.protocol=smtp
smtp.username=dumdumdesigns@gmail.com	
smtp.password=qfdgirmjjpsdzxtp
support.email=dumdumdesigns@gmail.com

############ MultipartConfigElement - File Upoad Prop's ##############
multipart.maxFileSize: 10MB
#multipart.maxRequestSize: 128KB


##################### Geo Coding #####################################

#google.geocode.api.key=AIzaSyCC8gwbO-U2QwEIM-8cs0DFiGBuj_c4QwY
google.geocode.api.key=AIzaSyA8DqfXvbhTZNfZw4sJ6njOJSdNrKlSp7g


################## Maxmind database ##################################
giga.maxmind.db.geolit2.city=/usr/local/share/GeoIP/GeoLite2-City.mmdb
giga.maxmind.db.geolit2.country=/usr/local/share/GeoIP/GeoLite2-Country.mmdb

################## Elastic Search ####################################
#spring.data.elasticsearch.cluster-name=316922790688:jobyjob
#spring.data.
#spring.social.facebook.appId=1094965390515040
#spring.social.facebook.appSecret=33d4199de7bc034a06cb8d058d0fc77e

################## Spring Social ####################################
####### Facebook Dev #######
facebook.appKey=1094965390515040
facebook.appSecret=33d4199de7bc034a06cb8d058d0fc77e
facebook.appNamespace=jobyjob


######## Github Dev ########
github.appKey=82f1cf30999fda33f6ff
github.appSecret=ae8e52ca6ab7b6acd4dab32805e50ce59efd7c2d


### Linkedin Local & Dev ### 
linkedin.appKey=77em116kppyjpd
linkedin.appSecret=chDnP7EuJMvR3yuS

###### Google Dev Only   ###
#google.appKey=945110809452-qurj3g9d8s7no8kbibvsqqam5l94sfuo.apps.googleusercontent.com
#google.appSecret=QFfEhY2aT2zHCavlqmRkrCJ4
google.appKey=945110809452-pcb9lm3oik8idbanoh4a0d435nunmruu.apps.googleusercontent.com
google.appSecret=EVXe4LaYNwAgrE-tHJL4XRgc

########## Amazon Dev #######
amazon.appKey=amzn1.application-oa2-client.1adbf0f7bf184731aa76058613e6bfce
amazon.appSecret=88bc040128b5cc2504dd193a12aecce9986d345d4186444d78fc26154475db09


#################### Thymeleaf Configuration ##########################
spring.thymeleaf.cache=false


################### DataSource Configuration ##########################

### AWS Dev
#jdbc.driverClassName=com.mysql.jdbc.Driver
#jdbc.url=jdbc:mysql://aa10x0u4wesc41c.czmvfn7h9r8j.us-east-1.rds.amazonaws.com:3306/gigajob
#jdbc.username=sam
#jdbc.password=rootAloot

### Localhost
jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/gigalot
jdbc.username=root
jdbc.password=rootAloot
 
#init-db=false

################### Hibernate Configuration ##########################

hibernate.dialect=org.hibernate.dialect.MySQLDialect
hibernate.show_sql=true
hibernate.hbm2ddl.auto=update
# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
### AWS Dev
#spring.datasource.url = jdbc:mysql://aa10x0u4wesc41c.czmvfn7h9r8j.us-east-1.rds.amazonaws.com:3306/gigajob
#spring.datasource.username = sam
#spring.datasource.password = rootAloot

### loalhost
spring.datasource.url = jdbc:mysql://localhost:3306/gigalot
spring.datasource.username = root
spring.datasource.password = rootAloot
spring.datasource.continueOnError=true
spring.datasource.connection-init-sql=false
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect