{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/MessageInput/MessageInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport { StompClientContext } from 'contexts/StompClientContext';\nimport { useDispatch } from 'react-redux';\nimport { updateChatMessages } from 'redux/actions/messagesAction';\n\nconst MessageInput = ({\n  stompClient,\n  activeContact,\n  giguser\n}) => {\n  _s();\n\n  console.log('ACCCTIVE CC :: ', activeContact);\n  console.log('GIG UUUUUUUUUSER : ', giguser);\n  const [text, setText] = useState('');\n  const dispatch = useDispatch(); //const { sendChatMessage } = useContext(StompClientContext);\n\n  const sendChatMessage = message => {\n    console.log(`sending Message ${message.body}`, message);\n    stompClient.send('/msg/chat', {}, JSON.stringify(message));\n    console.log('SSSSENNNNT');\n    dispatch(updateChatMessages(message));\n  };\n\n  const sendTheMessage = msg => {\n    if (msg.trim() !== '') {\n      const message = {\n        senderId: giguser.id,\n        recipientId: activeContact.contactId,\n        senderName: giguser.name,\n        recipientName: activeContact.contactName,\n        content: msg,\n        timestamp: new Date()\n      };\n      console.log('sending msg: ', msg);\n      sendChatMessage(message);\n      console.log('msg sent', message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Input, {\n    placeholder: \"Enter Message\",\n    action: true,\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        sendTheMessage(text);\n        setText('');\n      },\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MessageInput, \"Bq1vLXv4zQXPT4H4pz97m9pI+fU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MessageInput;\nMessageInput.propTypes = {};\nexport default MessageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/MessageInput/MessageInput.js"],"names":["React","useContext","useState","Button","Input","StompClientContext","useDispatch","updateChatMessages","MessageInput","stompClient","activeContact","giguser","console","log","text","setText","dispatch","sendChatMessage","message","body","send","JSON","stringify","sendTheMessage","msg","trim","senderId","id","recipientId","contactId","senderName","name","recipientName","contactName","content","timestamp","Date","e","target","value","propTypes"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,kBAAT,QAAmC,8BAAnC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,aAAf;AAA8BC,EAAAA;AAA9B,CAAD,KAA6C;AAAA;;AACjEC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,aAA/B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,OAAnC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMc,QAAQ,GAAGV,WAAW,EAA5B,CAJiE,CAKjE;;AACA,QAAMW,eAAe,GAAIC,OAAD,IAAa;AACpCN,IAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBK,OAAO,CAACC,IAAK,EAA5C,EAA+CD,OAA/C;AACAT,IAAAA,WAAW,CAACW,IAAZ,CAAiB,WAAjB,EAA8B,EAA9B,EAAkCC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAlC;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAG,IAAAA,QAAQ,CAACT,kBAAkB,CAACW,OAAD,CAAnB,CAAR;AACA,GALD;;AAMA,QAAMK,cAAc,GAAIC,GAAD,IAAS;AAC/B,QAAIA,GAAG,CAACC,IAAJ,OAAe,EAAnB,EAAuB;AACtB,YAAMP,OAAO,GAAG;AACfQ,QAAAA,QAAQ,EAAEf,OAAO,CAACgB,EADH;AAEfC,QAAAA,WAAW,EAAElB,aAAa,CAACmB,SAFZ;AAGfC,QAAAA,UAAU,EAAEnB,OAAO,CAACoB,IAHL;AAIfC,QAAAA,aAAa,EAAEtB,aAAa,CAACuB,WAJd;AAKfC,QAAAA,OAAO,EAAEV,GALM;AAMfW,QAAAA,SAAS,EAAE,IAAIC,IAAJ;AANI,OAAhB;AAQAxB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BW,GAA7B;AACAP,MAAAA,eAAe,CAACC,OAAD,CAAf;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,OAAxB;AACA;AACD,GAdD;;AAeA,sBACC,QAAC,KAAD;AAAO,IAAA,WAAW,EAAC,eAAnB;AAAmC,IAAA,MAAM,MAAzC;AAA0C,IAAA,KAAK,MAA/C;AAAA,4BACC;AAAO,MAAA,KAAK,EAAEJ,IAAd;AAAoB,MAAA,QAAQ,EAAGuB,CAAD,IAAOtB,OAAO,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,MAAD;AACC,MAAA,OAAO,EAAE,MAAM;AACdhB,QAAAA,cAAc,CAACT,IAAD,CAAd;AACAC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACA,OAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAaA,CAxCD;;GAAMP,Y;UAIYF,W;;;KAJZE,Y;AA0CNA,YAAY,CAACgC,SAAb,GAAyB,EAAzB;AAEA,eAAehC,YAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport { StompClientContext } from 'contexts/StompClientContext';\nimport { useDispatch } from 'react-redux';\nimport { updateChatMessages } from 'redux/actions/messagesAction';\n\nconst MessageInput = ({ stompClient, activeContact, giguser }) => {\n\tconsole.log('ACCCTIVE CC :: ', activeContact);\n\tconsole.log('GIG UUUUUUUUUSER : ', giguser);\n\tconst [text, setText] = useState('');\n\tconst dispatch = useDispatch();\n\t//const { sendChatMessage } = useContext(StompClientContext);\n\tconst sendChatMessage = (message) => {\n\t\tconsole.log(`sending Message ${message.body}`, message);\n\t\tstompClient.send('/msg/chat', {}, JSON.stringify(message));\n\t\tconsole.log('SSSSENNNNT');\n\t\tdispatch(updateChatMessages(message));\n\t};\n\tconst sendTheMessage = (msg) => {\n\t\tif (msg.trim() !== '') {\n\t\t\tconst message = {\n\t\t\t\tsenderId: giguser.id,\n\t\t\t\trecipientId: activeContact.contactId,\n\t\t\t\tsenderName: giguser.name,\n\t\t\t\trecipientName: activeContact.contactName,\n\t\t\t\tcontent: msg,\n\t\t\t\ttimestamp: new Date(),\n\t\t\t};\n\t\t\tconsole.log('sending msg: ', msg);\n\t\t\tsendChatMessage(message);\n\t\t\tconsole.log('msg sent', message);\n\t\t}\n\t};\n\treturn (\n\t\t<Input placeholder=\"Enter Message\" action fluid>\n\t\t\t<input value={text} onChange={(e) => setText(e.target.value)} />\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsendTheMessage(text);\n\t\t\t\t\tsetText('');\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tSend Message\n\t\t\t</Button>\n\t\t</Input>\n\t);\n};\n\nMessageInput.propTypes = {};\n\nexport default MessageInput;\n"]},"metadata":{},"sourceType":"module"}