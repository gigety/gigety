{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/contexts/StompClientContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { GIGETY_MESSENGER_URL } from '../constants';\nimport { updateChatMessages } from '../redux/actions/messagesAction';\nconst StompClientContext = /*#__PURE__*/createContext(null);\nexport { StompClientContext };\n\nconst MessageContext = ({\n  children\n}) => {\n  _s();\n\n  let stompClient = null;\n  let wrappedStompClient = null;\n\n  const onConnected = () => {\n    console.log('SockJS iiiiiiissssss COnnected to STOMP protocol');\n    console.log('may be a good place to subscribe to user specific messages so they can be notified'); //stompClient.subscribe(`/user/${profile.id}/queue/messages`, onMessageRecieved);\n    //stompClient.subscribe(`/messenger/user`, onMessageRecieved);\n  };\n\n  const onError = error => {\n    console.error('GIGETY ERROR in STompCLientContext');\n    console.error(error);\n  }; //Connect stompClient to gigety-ws-service\n\n\n  const stomp = require('stompjs');\n\n  let SockJS = require('sockjs-client');\n\n  SockJS = new SockJS(GIGETY_MESSENGER_URL + '/ws'); //SockJS = new SockJS('http://localhost:7070/messenger/ws', null, {});\n\n  stompClient = stomp.over(SockJS);\n  stompClient.connect({}, onConnected, onError);\n  const dispatch = useDispatch();\n\n  const sendChatMessage = message => {\n    console.log(`sending Message ${message}`);\n    stompClient.send('/msg/chat', {}, JSON.stringify(message));\n    dispatch(updateChatMessages(message));\n  };\n\n  wrappedStompClient = {\n    stompClient,\n    sendChatMessage\n  };\n  console.log(`CONFIGURATION:::: wrappedStompClient = ${wrappedStompClient}`);\n  return /*#__PURE__*/_jsxDEV(StompClientContext.Provider, {\n    value: wrappedStompClient,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MessageContext, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MessageContext;\nexport default MessageContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageContext\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/contexts/StompClientContext.js"],"names":["React","createContext","useDispatch","GIGETY_MESSENGER_URL","updateChatMessages","StompClientContext","MessageContext","children","stompClient","wrappedStompClient","onConnected","console","log","onError","error","stomp","require","SockJS","over","connect","dispatch","sendChatMessage","message","send","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,oBAAT,QAAqC,cAArC;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AAEA,MAAMC,kBAAkB,gBAAGJ,aAAa,CAAC,IAAD,CAAxC;AACA,SAASI,kBAAT;;AACA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACxC,MAAIC,WAAW,GAAG,IAAlB;AACA,MAAIC,kBAAkB,GAAG,IAAzB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,oFAAZ,EAFyB,CAGzB;AACA;AACA,GALD;;AAOA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AAC1BH,IAAAA,OAAO,CAACG,KAAR,CAAc,oCAAd;AACAH,IAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACA,GAHD,CAXwC,CAgBxC;;;AACA,QAAMC,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,MAAIC,MAAM,GAAGD,OAAO,CAAC,eAAD,CAApB;;AACAC,EAAAA,MAAM,GAAG,IAAIA,MAAJ,CAAWd,oBAAoB,GAAG,KAAlC,CAAT,CAnBwC,CAoBxC;;AACAK,EAAAA,WAAW,GAAGO,KAAK,CAACG,IAAN,CAAWD,MAAX,CAAd;AACAT,EAAAA,WAAW,CAACW,OAAZ,CAAoB,EAApB,EAAwBT,WAAxB,EAAqCG,OAArC;AAEA,QAAMO,QAAQ,GAAGlB,WAAW,EAA5B;;AAEA,QAAMmB,eAAe,GAAIC,OAAD,IAAa;AACpCX,IAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBU,OAAQ,EAAvC;AAEAd,IAAAA,WAAW,CAACe,IAAZ,CAAiB,WAAjB,EAA8B,EAA9B,EAAkCC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAlC;AACAF,IAAAA,QAAQ,CAAChB,kBAAkB,CAACkB,OAAD,CAAnB,CAAR;AACA,GALD;;AAMAb,EAAAA,kBAAkB,GAAG;AACpBD,IAAAA,WADoB;AAEpBa,IAAAA;AAFoB,GAArB;AAKAV,EAAAA,OAAO,CAACC,GAAR,CAAa,0CAAyCH,kBAAmB,EAAzE;AACA,sBAAO,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEA,kBAApC;AAAA,cAAyDF;AAAzD;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAvCD;;GAAMD,c;UAwBYJ,W;;;KAxBZI,c;AAyCN,eAAeA,cAAf","sourcesContent":["import React, { createContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { GIGETY_MESSENGER_URL } from '../constants';\nimport { updateChatMessages } from '../redux/actions/messagesAction';\n\nconst StompClientContext = createContext(null);\nexport { StompClientContext };\nconst MessageContext = ({ children }) => {\n\tlet stompClient = null;\n\tlet wrappedStompClient = null;\n\n\tconst onConnected = () => {\n\t\tconsole.log('SockJS iiiiiiissssss COnnected to STOMP protocol');\n\t\tconsole.log('may be a good place to subscribe to user specific messages so they can be notified');\n\t\t//stompClient.subscribe(`/user/${profile.id}/queue/messages`, onMessageRecieved);\n\t\t//stompClient.subscribe(`/messenger/user`, onMessageRecieved);\n\t};\n\n\tconst onError = (error) => {\n\t\tconsole.error('GIGETY ERROR in STompCLientContext');\n\t\tconsole.error(error);\n\t};\n\n\t//Connect stompClient to gigety-ws-service\n\tconst stomp = require('stompjs');\n\tlet SockJS = require('sockjs-client');\n\tSockJS = new SockJS(GIGETY_MESSENGER_URL + '/ws');\n\t//SockJS = new SockJS('http://localhost:7070/messenger/ws', null, {});\n\tstompClient = stomp.over(SockJS);\n\tstompClient.connect({}, onConnected, onError);\n\n\tconst dispatch = useDispatch();\n\n\tconst sendChatMessage = (message) => {\n\t\tconsole.log(`sending Message ${message}`);\n\n\t\tstompClient.send('/msg/chat', {}, JSON.stringify(message));\n\t\tdispatch(updateChatMessages(message));\n\t};\n\twrappedStompClient = {\n\t\tstompClient,\n\t\tsendChatMessage,\n\t};\n\n\tconsole.log(`CONFIGURATION:::: wrappedStompClient = ${wrappedStompClient}`);\n\treturn <StompClientContext.Provider value={wrappedStompClient}>{children}</StompClientContext.Provider>;\n};\n\nexport default MessageContext;\n"]},"metadata":{},"sourceType":"module"}