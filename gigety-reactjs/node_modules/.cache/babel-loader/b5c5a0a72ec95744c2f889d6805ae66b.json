{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/MessengerPage/MessengerPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useAllNewUserMessages } from 'redux/hooks/useMessages';\nimport { Container, Grid } from 'semantic-ui-react';\nimport ChatMessenger from '../ChatMessenger/ChatMessenger';\nimport ContactList from '../ContactList/ContactList';\n\nconst MessengerPage = () => {\n  _s();\n\n  const {\n    giguser\n  } = useSelector(state => state.giguser);\n  const messages = useAllNewUserMessages(giguser.id);\n  const dispatch = useDispatch();\n  const {\n    stompClient,\n    sendChatMessage\n  } = useContext(StompClientContext);\n  useEffect(() => {\n    const onMessageRecieved = msg => {\n      const notification = JSON.parse(msg.body);\n      dispatch(findMessagesFor121Chat(notification.senderId, profile.id));\n    };\n\n    const id = stompClient.subscribe(`/user/${profile.id}/queue/messages`, onMessageRecieved); //const id = stompClient.subscribe(`/queue/messages/${profile.id}`, onMessageRecieved);\n\n    console.log(id);\n    return () => {\n      console.log(`here we unsubscibe to id ${id}, you best check this is proper way to unsubscribe`);\n      stompClient.unsubscribe(id);\n    };\n  }, [profile, stompClient, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      celled: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 4,\n          children: /*#__PURE__*/_jsxDEV(ContactList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 6,\n          children: /*#__PURE__*/_jsxDEV(ChatMessenger, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MessengerPage, \"YiO+t/vGTYfbhcNTa7fMWfbf48w=\", true, function () {\n  return [useSelector, useAllNewUserMessages];\n});\n\n_c = MessengerPage;\nexport default MessengerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessengerPage\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/MessengerPage/MessengerPage.js"],"names":["React","useEffect","useSelector","useAllNewUserMessages","Container","Grid","ChatMessenger","ContactList","MessengerPage","giguser","state","messages","id","dispatch","useDispatch","stompClient","sendChatMessage","useContext","StompClientContext","onMessageRecieved","msg","notification","JSON","parse","body","findMessagesFor121Chat","senderId","profile","subscribe","console","log","unsubscribe"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAcP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA/B;AACA,QAAME,QAAQ,GAAGR,qBAAqB,CAACM,OAAO,CAACG,EAAT,CAAtC;AACA,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAmCC,UAAU,CAACC,kBAAD,CAAnD;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMkB,iBAAiB,GAAIC,GAAD,IAAS;AAClC,YAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,IAAf,CAArB;AACAX,MAAAA,QAAQ,CAACY,sBAAsB,CAACJ,YAAY,CAACK,QAAd,EAAwBC,OAAO,CAACf,EAAhC,CAAvB,CAAR;AACA,KAHD;;AAIA,UAAMA,EAAE,GAAGG,WAAW,CAACa,SAAZ,CAAuB,SAAQD,OAAO,CAACf,EAAG,iBAA1C,EAA4DO,iBAA5D,CAAX,CALe,CAMf;;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYlB,EAAZ;AAEA,WAAO,MAAM;AACZiB,MAAAA,OAAO,CAACC,GAAR,CAAa,4BAA2BlB,EAAG,oDAA3C;AACAG,MAAAA,WAAW,CAACgB,WAAZ,CAAwBnB,EAAxB;AACA,KAHD;AAIA,GAbQ,EAaN,CAACe,OAAD,EAAUZ,WAAV,EAAuBF,QAAvB,CAbM,CAAT;AAcA,sBACC,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,2BACC,QAAC,IAAD;AAAM,MAAA,MAAM,MAAZ;AAAA,6BACC,QAAC,IAAD,CAAM,GAAN;AAAA,gCACC,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,KAAK,EAAE,CAApB;AAAA,iCACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,KAAK,EAAE,CAApB;AAAA,iCACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAcA,CAjCD;;GAAML,a;UACeN,W,EACHC,qB;;;KAFZK,a;AAmCN,eAAeA,aAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useAllNewUserMessages } from 'redux/hooks/useMessages';\nimport { Container, Grid } from 'semantic-ui-react';\nimport ChatMessenger from '../ChatMessenger/ChatMessenger';\nimport ContactList from '../ContactList/ContactList';\n\nconst MessengerPage = () => {\n\tconst { giguser } = useSelector((state) => state.giguser);\n\tconst messages = useAllNewUserMessages(giguser.id);\n\tconst dispatch = useDispatch();\n\tconst { stompClient, sendChatMessage } = useContext(StompClientContext);\n\tuseEffect(() => {\n\t\tconst onMessageRecieved = (msg) => {\n\t\t\tconst notification = JSON.parse(msg.body);\n\t\t\tdispatch(findMessagesFor121Chat(notification.senderId, profile.id));\n\t\t};\n\t\tconst id = stompClient.subscribe(`/user/${profile.id}/queue/messages`, onMessageRecieved);\n\t\t//const id = stompClient.subscribe(`/queue/messages/${profile.id}`, onMessageRecieved);\n\t\tconsole.log(id);\n\n\t\treturn () => {\n\t\t\tconsole.log(`here we unsubscibe to id ${id}, you best check this is proper way to unsubscribe`);\n\t\t\tstompClient.unsubscribe(id);\n\t\t};\n\t}, [profile, stompClient, dispatch]);\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Grid celled>\n\t\t\t\t<Grid.Row>\n\t\t\t\t\t<Grid.Column width={4}>\n\t\t\t\t\t\t<ContactList></ContactList>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column width={6}>\n\t\t\t\t\t\t<ChatMessenger></ChatMessenger>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid.Row>\n\t\t\t</Grid>\n\t\t</Container>\n\t);\n};\n\nexport default MessengerPage;\n"]},"metadata":{},"sourceType":"module"}