{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/NotificationsScrollable/NotificationsScrollable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport _ from 'lodash';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { List, ListItem } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { findMessagesFor121Chat } from 'redux/actions/messagesAction';\nimport { updateActiveContact } from 'redux/actions/contactsAction';\nimport { useAllNewUserMessages } from 'redux/hooks/useMessages';\n\nconst NotificationsScrollable = ({\n  giguser\n}) => {\n  _s();\n\n  const allNewUserMessages = useAllNewUserMessages(giguser.id); //const messages = useAllNewUserMessages(giguser.id);\n\n  const messageNotifications = _.uniqBy(allNewUserMessages, message => 'senderName');\n\n  const dispatch = useDispatch();\n\n  const getConversationMessages = ({\n    senderName,\n    senderId\n  }, event) => {\n    event.preventDefault(); //TODO: refactor Message to have a contact rather than senderId, senderName\n\n    dispatch(findMessagesFor121Chat(giguser.id, senderId));\n    const contact = {\n      userId: giguser.id.toString(),\n      contactId: senderId,\n      contactName: senderName\n    };\n    dispatch(updateActiveContact(JSON.stringify(contact)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: messageNotifications ? messageNotifications.map(message => /*#__PURE__*/_jsxDEV(ListItem, {\n          as: Link,\n          to: '/',\n          onClick: e => getConversationMessages(message, e),\n          children: /*#__PURE__*/_jsxDEV(List.Content, {\n            children: [/*#__PURE__*/_jsxDEV(List.Header, {\n              children: message.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 10\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(NotificationsScrollable, \"mXeYGctjm0b84+EJjpmBVLNuj+w=\", false, function () {\n  return [useAllNewUserMessages, useDispatch];\n});\n\n_c = NotificationsScrollable;\nexport default NotificationsScrollable;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationsScrollable\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/NotificationsScrollable/NotificationsScrollable.js"],"names":["React","_","ScrollToBottom","List","ListItem","Link","useDispatch","findMessagesFor121Chat","updateActiveContact","useAllNewUserMessages","NotificationsScrollable","giguser","allNewUserMessages","id","messageNotifications","uniqBy","message","dispatch","getConversationMessages","senderName","senderId","event","preventDefault","contact","userId","toString","contactId","contactName","JSON","stringify","map","e","content"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,mBAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,sBAAT,QAAuC,8BAAvC;AACA,SAASC,mBAAT,QAAoC,8BAApC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;;AACA,MAAMC,uBAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAChD,QAAMC,kBAAkB,GAAGH,qBAAqB,CAACE,OAAO,CAACE,EAAT,CAAhD,CADgD,CAEhD;;AACA,QAAMC,oBAAoB,GAAGb,CAAC,CAACc,MAAF,CAASH,kBAAT,EAA8BI,OAAD,IAAa,YAA1C,CAA7B;;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AACA,QAAMY,uBAAuB,GAAG,CAAC;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAD,EAA2BC,KAA3B,KAAqC;AACpEA,IAAAA,KAAK,CAACC,cAAN,GADoE,CAEpE;;AAEAL,IAAAA,QAAQ,CAACV,sBAAsB,CAACI,OAAO,CAACE,EAAT,EAAaO,QAAb,CAAvB,CAAR;AACA,UAAMG,OAAO,GAAG;AAAEC,MAAAA,MAAM,EAAEb,OAAO,CAACE,EAAR,CAAWY,QAAX,EAAV;AAAiCC,MAAAA,SAAS,EAAEN,QAA5C;AAAsDO,MAAAA,WAAW,EAAER;AAAnE,KAAhB;AACAF,IAAAA,QAAQ,CAACT,mBAAmB,CAACoB,IAAI,CAACC,SAAL,CAAeN,OAAf,CAAD,CAApB,CAAR;AACA,GAPD;;AAQA,sBACC;AAAA,2BACC,QAAC,cAAD;AAAA,6BACC,QAAC,IAAD;AAAA,kBACET,oBAAoB,GAClBA,oBAAoB,CAACgB,GAArB,CAA0Bd,OAAD,iBACzB,QAAC,QAAD;AAEC,UAAA,EAAE,EAAEX,IAFL;AAGC,UAAA,EAAE,EAAE,GAHL;AAIC,UAAA,OAAO,EAAG0B,CAAD,IAAOb,uBAAuB,CAACF,OAAD,EAAUe,CAAV,CAJxC;AAAA,iCAMC,QAAC,IAAD,CAAM,OAAN;AAAA,oCACC,QAAC,IAAD,CAAM,MAAN;AAAA,wBAAcf,OAAO,CAACG;AAAtB;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC,QAAC,IAAD,CAAM,WAAN;AAAA,wBAAmBH,OAAO,CAACgB;AAA3B;AAAA;AAAA;AAAA;AAAA,oBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAND,WACMhB,OAAO,CAACH,EADd;AAAA;AAAA;AAAA;AAAA,gBADA,CADkB,GAclB;AAfJ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAuBA,CApCD;;GAAMH,uB;UACsBD,qB,EAGVH,W;;;KAJZI,uB;AAsCN,eAAeA,uBAAf","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { List, ListItem } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { findMessagesFor121Chat } from 'redux/actions/messagesAction';\nimport { updateActiveContact } from 'redux/actions/contactsAction';\nimport { useAllNewUserMessages } from 'redux/hooks/useMessages';\nconst NotificationsScrollable = ({ giguser }) => {\n\tconst allNewUserMessages = useAllNewUserMessages(giguser.id);\n\t//const messages = useAllNewUserMessages(giguser.id);\n\tconst messageNotifications = _.uniqBy(allNewUserMessages, (message) => 'senderName');\n\tconst dispatch = useDispatch();\n\tconst getConversationMessages = ({ senderName, senderId }, event) => {\n\t\tevent.preventDefault();\n\t\t//TODO: refactor Message to have a contact rather than senderId, senderName\n\n\t\tdispatch(findMessagesFor121Chat(giguser.id, senderId));\n\t\tconst contact = { userId: giguser.id.toString(), contactId: senderId, contactName: senderName };\n\t\tdispatch(updateActiveContact(JSON.stringify(contact)));\n\t};\n\treturn (\n\t\t<>\n\t\t\t<ScrollToBottom>\n\t\t\t\t<List>\n\t\t\t\t\t{messageNotifications\n\t\t\t\t\t\t? messageNotifications.map((message) => (\n\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\tkey={message.id}\n\t\t\t\t\t\t\t\t\tas={Link}\n\t\t\t\t\t\t\t\t\tto={'/'}\n\t\t\t\t\t\t\t\t\tonClick={(e) => getConversationMessages(message, e)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t\t\t\t<List.Header>{message.senderName}</List.Header>\n\t\t\t\t\t\t\t\t\t\t<List.Description>{message.content}</List.Description>\n\t\t\t\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t  ))\n\t\t\t\t\t\t: ''}\n\t\t\t\t</List>\n\t\t\t</ScrollToBottom>\n\t\t</>\n\t);\n};\n\nexport default NotificationsScrollable;\n"]},"metadata":{},"sourceType":"module"}