{"ast":null,"code":"import axios from 'axios';\nexport const setJwtTokenHeader = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\nexport const getUrlParameter = (name, uri) => {\n  name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n  const regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n  const results = regex.exec(uri);\n  return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n};","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/utils/jwtUtil.js"],"names":["axios","setJwtTokenHeader","token","defaults","headers","common","getUrlParameter","name","uri","replace","regex","RegExp","results","exec","decodeURIComponent"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAC3C,MAAIA,KAAJ,EAAW;AACVF,IAAAA,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,YAAYH,KAA7D;AACA,GAFD,MAEO;AACN,WAAOF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACA;AACD,CANM;AAOP,OAAO,MAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC7CD,EAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,KAAb,EAAoB,KAApB,EAA2BA,OAA3B,CAAmC,MAAnC,EAA2C,KAA3C,CAAP;AACA,QAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAW,WAAWJ,IAAX,GAAkB,WAA7B,CAAd;AACA,QAAMK,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAWL,GAAX,CAAhB;AACA,SAAOI,OAAO,KAAK,IAAZ,GAAmB,EAAnB,GAAwBE,kBAAkB,CAACF,OAAO,CAAC,CAAD,CAAP,CAAWH,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAAD,CAAjD;AACA,CALM","sourcesContent":["import axios from 'axios';\n\nexport const setJwtTokenHeader = (token) => {\n\tif (token) {\n\t\taxios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n\t} else {\n\t\tdelete axios.defaults.headers.common['Authorization'];\n\t}\n};\nexport const getUrlParameter = (name, uri) => {\n\tname = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n\tconst regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n\tconst results = regex.exec(uri);\n\treturn results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n};\n"]},"metadata":{},"sourceType":"module"}