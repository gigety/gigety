{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/utils/SecuredRoute.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst SecuredRoute = ({\n  component: Component,\n  authentication,\n  ...otherProps\n}) => /*#__PURE__*/_jsxDEV(Route, { ...otherProps,\n  render: props => authentication.validToken === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 60\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 87\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 2\n}, this);\n\n_c = SecuredRoute;\nSecuredRoute.propTypes = {\n  authentication: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"SecuredRoute\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/utils/SecuredRoute.js"],"names":["React","connect","PropTypes","Route","Redirect","SecuredRoute","component","Component","authentication","otherProps","props","validToken","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,cAAxB;AAAwC,KAAGC;AAA3C,CAAD,kBACpB,QAAC,KAAD,OACKA,UADL;AAEC,EAAA,MAAM,EAAGC,KAAD,IAAYF,cAAc,CAACG,UAAf,KAA8B,IAA9B,gBAAqC,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,UAArC,gBAAgE,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAFrF;AAAA;AAAA;AAAA;AAAA,QADD;;KAAML,Y;AAMNA,YAAY,CAACO,SAAb,GAAyB;AACxBJ,EAAAA,cAAc,EAAEN,SAAS,CAACW,MAAV,CAAiBC;AADT,CAAzB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AACnCR,EAAAA,cAAc,EAAEQ,KAAK,CAACR;AADa,CAAZ,CAAxB;;AAGA,eAAeP,OAAO,CAACc,eAAD,CAAP,CAAyBV,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nconst SecuredRoute = ({ component: Component, authentication, ...otherProps }) => (\n\t<Route\n\t\t{...otherProps}\n\t\trender={(props) => (authentication.validToken === true ? <Component {...props} /> : <Redirect to=\"/\" />)}\n\t/>\n);\nSecuredRoute.propTypes = {\n\tauthentication: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\tauthentication: state.authentication,\n});\nexport default connect(mapStateToProps)(SecuredRoute);\n"]},"metadata":{},"sourceType":"module"}