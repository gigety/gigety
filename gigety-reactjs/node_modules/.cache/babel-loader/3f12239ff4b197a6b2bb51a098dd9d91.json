{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/MessengerPage/MessengerPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useGigUser } from 'redux/hooks/useGigUser';\nimport { useAllNewUserMessages } from 'redux/hooks/useMessages';\nimport { Container, Divider, Grid, GridColumn } from 'semantic-ui-react';\nimport ChatMessenger from '../ChatMessenger/ChatMessenger';\nimport ContactList from '../ContactList/ContactList';\nimport MessageInput from '../MessageInput/MessageInput';\nimport NotificationsScrollable from '../NotificationsScrollable/NotificationsScrollable';\nimport { StompClientContext } from 'contexts/StompClientContext';\nimport { useActiveContact, useContacts } from 'redux/hooks/useContacts';\nimport SplitPane from 'react-split-pane';\n\nconst MessengerPage = () => {\n  _s();\n\n  //const { giguser } = useSelector((state) => state.giguser);\n  const giguser = useGigUser();\n  console.log(giguser);\n  const [text, setText] = useState('');\n  const contacts = useContacts(giguser.id);\n  const activeContact = useActiveContact();\n  const {\n    stompClient,\n    sendChatMessage\n  } = useContext(StompClientContext);\n\n  const sendTheMessage = msg => {\n    if (msg.trim() !== '') {\n      const message = {\n        senderId: giguser.id,\n        recipientId: activeContact.userId,\n        senderName: giguser.name,\n        recipientName: activeContact.userName,\n        content: msg,\n        timestamp: new Date()\n      };\n      console.log('sending msg: ', msg);\n      sendChatMessage(message);\n      console.log('msg sent', message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SplitPane, {\n    split: \"vertical\",\n    children: [\"d\", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), \"d\", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), \"d\", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }, this), \"d\", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MessengerPage, \"/aET1qyda3JB9iAtuOIjqu7Fy4o=\", false, function () {\n  return [useGigUser, useContacts, useActiveContact];\n});\n\n_c = MessengerPage;\nexport default MessengerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessengerPage\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/MessengerPage/MessengerPage.js"],"names":["React","useState","useContext","useEffect","useDispatch","useSelector","useGigUser","useAllNewUserMessages","Container","Divider","Grid","GridColumn","ChatMessenger","ContactList","MessageInput","NotificationsScrollable","StompClientContext","useActiveContact","useContacts","SplitPane","MessengerPage","giguser","console","log","text","setText","contacts","id","activeContact","stompClient","sendChatMessage","sendTheMessage","msg","trim","message","senderId","recipientId","userId","senderName","name","recipientName","userName","content","timestamp","Date"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,UAAnC,QAAqD,mBAArD;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,uBAAP,MAAoC,oDAApC;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,yBAA9C;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AACA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC3B;AACA,QAAMC,OAAO,GAAGf,UAAU,EAA1B;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMyB,QAAQ,GAAGR,WAAW,CAACG,OAAO,CAACM,EAAT,CAA5B;AACA,QAAMC,aAAa,GAAGX,gBAAgB,EAAtC;AACA,QAAM;AAAEY,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAmC5B,UAAU,CAACc,kBAAD,CAAnD;;AAEA,QAAMe,cAAc,GAAIC,GAAD,IAAS;AAC/B,QAAIA,GAAG,CAACC,IAAJ,OAAe,EAAnB,EAAuB;AACtB,YAAMC,OAAO,GAAG;AACfC,QAAAA,QAAQ,EAAEd,OAAO,CAACM,EADH;AAEfS,QAAAA,WAAW,EAAER,aAAa,CAACS,MAFZ;AAGfC,QAAAA,UAAU,EAAEjB,OAAO,CAACkB,IAHL;AAIfC,QAAAA,aAAa,EAAEZ,aAAa,CAACa,QAJd;AAKfC,QAAAA,OAAO,EAAEV,GALM;AAMfW,QAAAA,SAAS,EAAE,IAAIC,IAAJ;AANI,OAAhB;AAQAtB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BS,GAA7B;AACAF,MAAAA,eAAe,CAACI,OAAD,CAAf;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBW,OAAxB;AACA;AACD,GAdD;;AAeA,sBACC,QAAC,SAAD;AAAW,IAAA,KAAK,EAAC,UAAjB;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA,YADF,oBACc;AAAA;AAAA;AAAA;AAAA,YADd,oBAC0B;AAAA;AAAA;AAAA;AAAA,YAD1B,oBACsC;AAAA;AAAA;AAAA;AAAA,YADtC;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA7BD;;GAAMd,a;UAEWd,U,EAGCY,W,EACKD,gB;;;KANjBG,a;AA+BN,eAAeA,aAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useGigUser } from 'redux/hooks/useGigUser';\nimport { useAllNewUserMessages } from 'redux/hooks/useMessages';\nimport { Container, Divider, Grid, GridColumn } from 'semantic-ui-react';\nimport ChatMessenger from '../ChatMessenger/ChatMessenger';\nimport ContactList from '../ContactList/ContactList';\nimport MessageInput from '../MessageInput/MessageInput';\nimport NotificationsScrollable from '../NotificationsScrollable/NotificationsScrollable';\nimport { StompClientContext } from 'contexts/StompClientContext';\nimport { useActiveContact, useContacts } from 'redux/hooks/useContacts';\nimport SplitPane from 'react-split-pane';\nconst MessengerPage = () => {\n\t//const { giguser } = useSelector((state) => state.giguser);\n\tconst giguser = useGigUser();\n\tconsole.log(giguser);\n\tconst [text, setText] = useState('');\n\tconst contacts = useContacts(giguser.id);\n\tconst activeContact = useActiveContact();\n\tconst { stompClient, sendChatMessage } = useContext(StompClientContext);\n\n\tconst sendTheMessage = (msg) => {\n\t\tif (msg.trim() !== '') {\n\t\t\tconst message = {\n\t\t\t\tsenderId: giguser.id,\n\t\t\t\trecipientId: activeContact.userId,\n\t\t\t\tsenderName: giguser.name,\n\t\t\t\trecipientName: activeContact.userName,\n\t\t\t\tcontent: msg,\n\t\t\t\ttimestamp: new Date(),\n\t\t\t};\n\t\t\tconsole.log('sending msg: ', msg);\n\t\t\tsendChatMessage(message);\n\t\t\tconsole.log('msg sent', message);\n\t\t}\n\t};\n\treturn (\n\t\t<SplitPane split=\"vertical\">\n\t\t\td<div></div>d<div></div>d<div></div>d<div></div>\n\t\t</SplitPane>\n\t);\n};\n\nexport default MessengerPage;\n"]},"metadata":{},"sourceType":"module"}