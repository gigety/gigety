{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/DisplayGig.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container, Grid, GridRow, GridColumn, Segment, SegmentGroup, Icon } from 'semantic-ui-react';\nimport { useHistory } from 'react-router-dom';\nimport GigMap from '../Maps/GigMap';\nimport UserLabel from '../User/UserLabel';\nimport { useGig } from '../../redux/hooks/useGigGig';\nimport GigCard from './GigCard';\n\nconst DisplayGig = props => {\n  _s();\n\n  const {\n    id\n  } = props.match.params;\n  const gig = useGig(id);\n  const history = useHistory();\n\n  const onClickBack = e => {\n    history.goBack();\n  };\n\n  const displayGig = gig ? /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(SegmentGroup, {\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(GridRow, {\n            children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n              width: \"5\",\n              children: [/*#__PURE__*/_jsxDEV(Icon.Group, {\n                size: \"large\",\n                as: \"Button\",\n                onClick: onClickBack,\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"long arrow alternate left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 10\n                }, this), \"Back to results\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(GigCard, {\n                gig: gig\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(UserLabel, {\n                userImageUrl: gig.userImageUrl,\n                email: gig.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              width: \"11\",\n              children: [/*#__PURE__*/_jsxDEV(Segment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"title-large\",\n                  children: gig.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(GigMap, {\n                gigLocations: gig.gigLocations\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Searching for gig \", id]\n  }, void 0, true);\n  return displayGig;\n};\n\n_s(DisplayGig, \"ot2WzX+mlJE2fcr6m8WLLJDidOM=\", false, function () {\n  return [useGig, useHistory];\n});\n\n_c = DisplayGig;\nDisplayGig.propTypes = {};\nexport default DisplayGig;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayGig\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/DisplayGig.js"],"names":["React","Container","Grid","GridRow","GridColumn","Segment","SegmentGroup","Icon","useHistory","GigMap","UserLabel","useGig","GigCard","DisplayGig","props","id","match","params","gig","history","onClickBack","e","goBack","displayGig","userImageUrl","email","description","gigLocations","propTypes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,UAAnC,EAA+CC,OAA/C,EAAwDC,YAAxD,EAAsEC,IAAtE,QAAkF,mBAAlF;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAASD,KAAK,CAACE,KAAN,CAAYC,MAA3B;AACA,QAAMC,GAAG,GAAGP,MAAM,CAACI,EAAD,CAAlB;AACA,QAAMI,OAAO,GAAGX,UAAU,EAA1B;;AACA,QAAMY,WAAW,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,OAAO,CAACG,MAAR;AACA,GAFD;;AAGA,QAAMC,UAAU,GAAGL,GAAG,gBACrB,QAAC,SAAD;AAAA,2BACC,QAAC,YAAD;AAAA,6BACC,QAAC,OAAD;AAAA,+BACC,QAAC,IAAD;AAAA,iCACC,QAAC,OAAD;AAAA,oCACC,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,GAAlB;AAAA,sCACC,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,IAAI,EAAC,OAAjB;AAAyB,gBAAA,EAAE,EAAC,QAA5B;AAAqC,gBAAA,OAAO,EAAEE,WAA9C;AAAA,wCACC,QAAC,IAAD;AAAM,kBAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,wBADD;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAKC,QAAC,OAAD;AAAS,gBAAA,GAAG,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,sBALD,eAMC,QAAC,SAAD;AAAW,gBAAA,YAAY,EAAEA,GAAG,CAACM,YAA7B;AAA2C,gBAAA,KAAK,EAAEN,GAAG,CAACO;AAAtD;AAAA;AAAA;AAAA;AAAA,sBAND;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eASC,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,IAAlB;AAAA,sCACC,QAAC,OAAD;AAAA,uCACC;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,4BAA8BP,GAAG,CAACQ;AAAlC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,sBADD,eAIC,QAAC,MAAD;AAAQ,gBAAA,YAAY,EAAER,GAAG,CAACS;AAA1B;AAAA;AAAA;AAAA;AAAA,sBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,oBATD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADqB,gBA0BrB;AAAA,qCAAqBZ,EAArB;AAAA,kBA1BD;AA4BA,SAAOQ,UAAP;AACA,CApCD;;GAAMV,U;UAEOF,M,EACIH,U;;;KAHXK,U;AAsCNA,UAAU,CAACe,SAAX,GAAuB,EAAvB;AAEA,eAAef,UAAf","sourcesContent":["import React from 'react';\nimport { Container, Grid, GridRow, GridColumn, Segment, SegmentGroup, Icon } from 'semantic-ui-react';\nimport { useHistory } from 'react-router-dom';\nimport GigMap from '../Maps/GigMap';\nimport UserLabel from '../User/UserLabel';\nimport { useGig } from '../../redux/hooks/useGigGig';\nimport GigCard from './GigCard';\nconst DisplayGig = (props) => {\n\tconst { id } = props.match.params;\n\tconst gig = useGig(id);\n\tconst history = useHistory();\n\tconst onClickBack = (e) => {\n\t\thistory.goBack();\n\t};\n\tconst displayGig = gig ? (\n\t\t<Container>\n\t\t\t<SegmentGroup>\n\t\t\t\t<Segment>\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<GridRow>\n\t\t\t\t\t\t\t<GridColumn width=\"5\">\n\t\t\t\t\t\t\t\t<Icon.Group size=\"large\" as=\"Button\" onClick={onClickBack}>\n\t\t\t\t\t\t\t\t\t<Icon name=\"long arrow alternate left\" />\n\t\t\t\t\t\t\t\t\tBack to results\n\t\t\t\t\t\t\t\t</Icon.Group>\n\t\t\t\t\t\t\t\t<GigCard gig={gig} />\n\t\t\t\t\t\t\t\t<UserLabel userImageUrl={gig.userImageUrl} email={gig.email} />\n\t\t\t\t\t\t\t</GridColumn>\n\t\t\t\t\t\t\t<GridColumn width=\"11\">\n\t\t\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t\t\t<div className=\"title-large\">{gig.description}</div>\n\t\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t\t\t<GigMap gigLocations={gig.gigLocations} />\n\t\t\t\t\t\t\t</GridColumn>\n\t\t\t\t\t\t</GridRow>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Segment>\n\t\t\t</SegmentGroup>\n\t\t</Container>\n\t) : (\n\t\t<>Searching for gig {id}</>\n\t);\n\treturn displayGig;\n};\n\nDisplayGig.propTypes = {};\n\nexport default DisplayGig;\n"]},"metadata":{},"sourceType":"module"}