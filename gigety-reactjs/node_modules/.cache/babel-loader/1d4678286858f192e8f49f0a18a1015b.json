{"ast":null,"code":"import gigety from 'apis/gigety';\nimport { updateUserMessageNotifications } from './messagesAction';\nimport { GET_ERRORS, UPDATE_ACTIVE_CONTACT, UPDATE_CONTACT_LIST } from './types';\nexport const findUserContacts = userId => async dispatch => {\n  try {\n    const response = await gigety.get(`/contacts/${userId}`);\n    dispatch({\n      type: UPDATE_CONTACT_LIST,\n      payload: response.data\n    });\n  } catch (error) {\n    console.error('ERROR :: ', error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error\n    });\n  }\n};\nexport const findActiveContact = userId => {};\nexport const updateActiveContact = (giguser, contact) => async (dispatch, getState) => {\n  try {\n    const {\n      giguserAccount\n    } = getState().giguserAccount;\n    console.log('found active contact :: ', contact);\n\n    if (!contact || contact.length === 0) {\n      try {\n        const response = await gigety.post('/userAccount/', contact);\n        contact = response.data;\n      } catch (error) {\n        console.warn(error);\n      }\n    }\n\n    dispatch({\n      type: UPDATE_ACTIVE_CONTACT,\n      payload: contact\n    });\n    dispatch(updateUserMessageNotifications());\n  } catch (error) {\n    console.error('ERROR :: ', error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/contactsAction.js"],"names":["gigety","updateUserMessageNotifications","GET_ERRORS","UPDATE_ACTIVE_CONTACT","UPDATE_CONTACT_LIST","findUserContacts","userId","dispatch","response","get","type","payload","data","error","console","findActiveContact","updateActiveContact","giguser","contact","getState","giguserAccount","log","length","post","warn"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,8BAAT,QAA+C,kBAA/C;AACA,SAASC,UAAT,EAAqBC,qBAArB,EAA4CC,mBAA5C,QAAuE,SAAvE;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC/D,MAAI;AACH,UAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACS,GAAP,CAAY,aAAYH,MAAO,EAA/B,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEN,mBADE;AAERO,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFV,KAAD,CAAR;AAIA,GAND,CAME,OAAOC,KAAP,EAAc;AACfC,IAAAA,OAAO,CAACD,KAAR,CAAc,WAAd,EAA2BA,KAA3B;AACAN,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAER,UADE;AAERS,MAAAA,OAAO,EAAEE;AAFD,KAAD,CAAR;AAIA;AACD,CAdM;AAgBP,OAAO,MAAME,iBAAiB,GAAIT,MAAD,IAAY,CAAE,CAAxC;AACP,OAAO,MAAMU,mBAAmB,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB,OAAOX,QAAP,EAAiBY,QAAjB,KAA8B;AACtF,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAqBD,QAAQ,GAAGC,cAAtC;AAEAN,IAAAA,OAAO,CAACO,GAAR,CAAY,0BAAZ,EAAwCH,OAAxC;;AACA,QAAI,CAACA,OAAD,IAAYA,OAAO,CAACI,MAAR,KAAmB,CAAnC,EAAsC;AACrC,UAAI;AACH,cAAMd,QAAQ,GAAG,MAAMR,MAAM,CAACuB,IAAP,CAAY,eAAZ,EAA6BL,OAA7B,CAAvB;AACAA,QAAAA,OAAO,GAAGV,QAAQ,CAACI,IAAnB;AACA,OAHD,CAGE,OAAOC,KAAP,EAAc;AACfC,QAAAA,OAAO,CAACU,IAAR,CAAaX,KAAb;AACA;AACD;;AACDN,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEP,qBADE;AAERQ,MAAAA,OAAO,EAAEO;AAFD,KAAD,CAAR;AAIAX,IAAAA,QAAQ,CAACN,8BAA8B,EAA/B,CAAR;AACA,GAjBD,CAiBE,OAAOY,KAAP,EAAc;AACfC,IAAAA,OAAO,CAACD,KAAR,CAAc,WAAd,EAA2BA,KAA3B;AACAN,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAER,UADE;AAERS,MAAAA,OAAO,EAAEE;AAFD,KAAD,CAAR;AAIA;AACD,CAzBM","sourcesContent":["import gigety from 'apis/gigety';\nimport { updateUserMessageNotifications } from './messagesAction';\nimport { GET_ERRORS, UPDATE_ACTIVE_CONTACT, UPDATE_CONTACT_LIST } from './types';\n\nexport const findUserContacts = (userId) => async (dispatch) => {\n\ttry {\n\t\tconst response = await gigety.get(`/contacts/${userId}`);\n\t\tdispatch({\n\t\t\ttype: UPDATE_CONTACT_LIST,\n\t\t\tpayload: response.data,\n\t\t});\n\t} catch (error) {\n\t\tconsole.error('ERROR :: ', error);\n\t\tdispatch({\n\t\t\ttype: GET_ERRORS,\n\t\t\tpayload: error,\n\t\t});\n\t}\n};\n\nexport const findActiveContact = (userId) => {};\nexport const updateActiveContact = (giguser, contact) => async (dispatch, getState) => {\n\ttry {\n\t\tconst { giguserAccount } = getState().giguserAccount;\n\n\t\tconsole.log('found active contact :: ', contact);\n\t\tif (!contact || contact.length === 0) {\n\t\t\ttry {\n\t\t\t\tconst response = await gigety.post('/userAccount/', contact);\n\t\t\t\tcontact = response.data;\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn(error);\n\t\t\t}\n\t\t}\n\t\tdispatch({\n\t\t\ttype: UPDATE_ACTIVE_CONTACT,\n\t\t\tpayload: contact,\n\t\t});\n\t\tdispatch(updateUserMessageNotifications());\n\t} catch (error) {\n\t\tconsole.error('ERROR :: ', error);\n\t\tdispatch({\n\t\t\ttype: GET_ERRORS,\n\t\t\tpayload: error,\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}