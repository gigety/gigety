{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/src/components/Maps/LocationMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, memo, useState, useCallback } from 'react';\nimport { GoogleMap, LoadScript, DrawingManager } from '@react-google-maps/api';\nimport PropTypes from 'prop-types';\nimport Locate from './Locate';\nimport mapStyles from '../Styles/mapStyles';\nimport '../Styles/MapHeaderStyle.css';\nimport Logo from '../Logos/Logo';\nimport { GOOGLE_GEOCODE_API_KEY, GOOGLE_MAP_LIBRARIES, METERS_PER_MILE } from '../../constants';\nimport { Segment, Loader, Dimmer } from 'semantic-ui-react';\nimport { useCurrentLocation } from '../../hooks/useCurrentLocation';\nimport AddressRadiusSelector from './AddressRadiusSelector';\n/**\n * Location Map - A Map with options for configuration an extra features\n * @param {children} components to include in the map such as markers or\n * controllers.\n * @param {addSearch} -boolean to include a search component or not\n * @param {addLocator} - boolean to include a locator\n * @param {logo} - A logo to include in top left corner of map\n * @param {options} - google map api options\n * @param {containerStyle} - style for maps container\n * @param {googleAPIKey} - google maps api key\n * @param {zoom} - zoom level\n */\n\nfunction LocationMap({\n  children,\n  addSearch,\n  addLocator,\n  logo,\n  options,\n  containerStyle,\n  googleAPIKey,\n  zoom,\n  customComponents,\n  onAddLocation,\n  markers,\n  setMarkers,\n  circles,\n  setCircles\n}) {\n  _s();\n\n  const mapRef = useRef();\n  const {\n    location,\n    error\n  } = useCurrentLocation(null);\n  const [selectedLocation, setSelectedLocation] = useState(location);\n  const onSearchLocationSelected = useCallback(location => {\n    setSelectedLocation(location);\n  }, []);\n\n  const addMarker = (circles, markers) => (loc, miles, ref_id) => {\n    const coords = {\n      lat: loc.geometry.location.lat(),\n      lng: loc.geometry.location.lng()\n    };\n    const marker = new window.google.maps.Marker({\n      ref_id,\n      position: coords,\n      map: mapRef.current\n    });\n    const infoWindow = new window.google.maps.InfoWindow({\n      content: '<div><Input type=\"button\"/></div>'\n    });\n    window.google.maps.event.addListener(marker, 'click', function () {\n      infoWindow.open(mapRef.current, marker);\n    });\n    const milesRadius = new window.google.maps.Circle({\n      ref_id,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: '#FF0000',\n      fillOpacity: 0.35,\n      map: mapRef.current,\n      center: coords,\n      radius: METERS_PER_MILE * miles\n    });\n    setCircles([...circles, milesRadius]);\n    setMarkers([...markers, marker]);\n    return marker;\n  };\n\n  const onMapLoad = map => {\n    mapRef.current = map;\n  };\n\n  const panTo = ({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error Finding Current Location: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 10\n    }, this);\n  }\n\n  return location ? /*#__PURE__*/_jsxDEV(Segment.Group, {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: googleAPIKey,\n      libraries: GOOGLE_MAP_LIBRARIES,\n      children: [addSearch || addLocator ? /*#__PURE__*/_jsxDEV(Segment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [addSearch ? /*#__PURE__*/_jsxDEV(AddressRadiusSelector, {\n            panTo: panTo,\n            location: location,\n            onSearchLocationSelected: onSearchLocationSelected,\n            onAddLocation: (location, miles) => {\n              const loc = onAddLocation(selectedLocation, miles);\n\n              if (loc) {\n                addMarker(circles, markers)(selectedLocation, miles, loc.ref_id);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this) : '', addLocator ? /*#__PURE__*/_jsxDEV(Locate, {\n            panTo: panTo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 22\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        children: [logo, customComponents.map(component => component), /*#__PURE__*/_jsxDEV(GoogleMap, {\n          className: \"MapHeadStyle\",\n          mapContainerStyle: containerStyle,\n          center: location,\n          zoom: zoom,\n          options: options,\n          onLoad: onMapLoad,\n          children: /*#__PURE__*/_jsxDEV(DrawingManager, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    style: defaultContainerStyle,\n    children: /*#__PURE__*/_jsxDEV(Dimmer, {\n      active: true,\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        size: \"large\",\n        inline: \"centered\",\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 3\n  }, this);\n}\n\n_s(LocationMap, \"TLA+YTFnexBR57TZupc0TqaX/gk=\", false, function () {\n  return [useCurrentLocation];\n});\n\n_c = LocationMap;\nconst defaultContainerStyle = {\n  position: 'relative',\n  width: '100%',\n  height: '400px'\n};\nconst defaultOptions = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  //disable the controls\n  zoomControl: true //ad only controls we wanbt\n\n};\nconst center = {\n  lat: 28,\n  lng: -81\n};\nLocationMap.defaultProps = {\n  zoom: 10,\n  options: defaultOptions,\n  center: center,\n  containerStyle: defaultContainerStyle,\n  googleAPIKey: GOOGLE_GEOCODE_API_KEY,\n  logo: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n  customComponents: [],\n  customMarker: 'BasicMarker',\n  infoWindowContent: `\n\t\t<div>\n\t\t\t<div>Default InfoWindow</div>\n\t\t</div>\n\t`,\n  libraries: ['places', 'drawing']\n};\nLocationMap.propTypes = {\n  addSearch: PropTypes.bool,\n  addLocator: PropTypes.bool,\n  logo: PropTypes.objectOf(Logo),\n  options: PropTypes.object,\n  containerStyle: PropTypes.object,\n  googleAPIKey: PropTypes.string,\n  zoom: PropTypes.number,\n  center: PropTypes.object,\n  customComponents: PropTypes.any,\n  customMarker: PropTypes.string,\n  libraries: PropTypes.array\n};\nexport default _c2 = /*#__PURE__*/memo(LocationMap);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LocationMap\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/src/components/Maps/LocationMap.js"],"names":["React","useRef","memo","useState","useCallback","GoogleMap","LoadScript","DrawingManager","PropTypes","Locate","mapStyles","Logo","GOOGLE_GEOCODE_API_KEY","GOOGLE_MAP_LIBRARIES","METERS_PER_MILE","Segment","Loader","Dimmer","useCurrentLocation","AddressRadiusSelector","LocationMap","children","addSearch","addLocator","logo","options","containerStyle","googleAPIKey","zoom","customComponents","onAddLocation","markers","setMarkers","circles","setCircles","mapRef","location","error","selectedLocation","setSelectedLocation","onSearchLocationSelected","addMarker","loc","miles","ref_id","coords","lat","geometry","lng","marker","window","google","maps","Marker","position","map","current","infoWindow","InfoWindow","content","event","addListener","open","milesRadius","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","center","radius","onMapLoad","panTo","component","defaultContainerStyle","width","height","defaultOptions","styles","disableDefaultUI","zoomControl","defaultProps","customMarker","infoWindowContent","libraries","propTypes","bool","objectOf","object","string","number","any","array"],"mappings":"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","sourcesContent":["import React, { useRef, memo, useState, useCallback } from 'react';\nimport { GoogleMap, LoadScript, DrawingManager } from '@react-google-maps/api';\nimport PropTypes from 'prop-types';\nimport Locate from './Locate';\nimport mapStyles from '../Styles/mapStyles';\nimport '../Styles/MapHeaderStyle.css';\nimport Logo from '../Logos/Logo';\nimport { GOOGLE_GEOCODE_API_KEY, GOOGLE_MAP_LIBRARIES, METERS_PER_MILE } from '../../constants';\nimport { Segment, Loader, Dimmer } from 'semantic-ui-react';\nimport { useCurrentLocation } from '../../hooks/useCurrentLocation';\nimport AddressRadiusSelector from './AddressRadiusSelector';\n/**\n * Location Map - A Map with options for configuration an extra features\n * @param {children} components to include in the map such as markers or\n * controllers.\n * @param {addSearch} -boolean to include a search component or not\n * @param {addLocator} - boolean to include a locator\n * @param {logo} - A logo to include in top left corner of map\n * @param {options} - google map api options\n * @param {containerStyle} - style for maps container\n * @param {googleAPIKey} - google maps api key\n * @param {zoom} - zoom level\n */\nfunction LocationMap({\n\tchildren,\n\taddSearch,\n\taddLocator,\n\tlogo,\n\toptions,\n\tcontainerStyle,\n\tgoogleAPIKey,\n\tzoom,\n\tcustomComponents,\n\tonAddLocation,\n\tmarkers,\n\tsetMarkers,\n\tcircles,\n\tsetCircles,\n}) {\n\tconst mapRef = useRef();\n\n\tconst { location, error } = useCurrentLocation(null);\n\tconst [selectedLocation, setSelectedLocation] = useState(location);\n\n\tconst onSearchLocationSelected = useCallback((location) => {\n\t\tsetSelectedLocation(location);\n\t}, []);\n\tconst addMarker = (circles, markers) => (loc, miles, ref_id) => {\n\t\tconst coords = { lat: loc.geometry.location.lat(), lng: loc.geometry.location.lng() };\n\t\tconst marker = new window.google.maps.Marker({\n\t\t\tref_id,\n\t\t\tposition: coords,\n\t\t\tmap: mapRef.current,\n\t\t});\n\t\tconst infoWindow = new window.google.maps.InfoWindow({\n\t\t\tcontent: '<div><Input type=\"button\"/></div>',\n\t\t});\n\n\t\twindow.google.maps.event.addListener(marker, 'click', function () {\n\t\t\tinfoWindow.open(mapRef.current, marker);\n\t\t});\n\t\tconst milesRadius = new window.google.maps.Circle({\n\t\t\tref_id,\n\t\t\tstrokeColor: '#FF0000',\n\t\t\tstrokeOpacity: 0.8,\n\t\t\tstrokeWeight: 2,\n\t\t\tfillColor: '#FF0000',\n\t\t\tfillOpacity: 0.35,\n\t\t\tmap: mapRef.current,\n\t\t\tcenter: coords,\n\t\t\tradius: METERS_PER_MILE * miles,\n\t\t});\n\t\tsetCircles([...circles, milesRadius]);\n\t\tsetMarkers([...markers, marker]);\n\t\treturn marker;\n\t};\n\tconst onMapLoad = (map) => {\n\t\tmapRef.current = map;\n\t};\n\n\tconst panTo = ({ lat, lng }) => {\n\t\tmapRef.current.panTo({ lat, lng });\n\t};\n\tif (error) {\n\t\treturn <div>Error Finding Current Location: {error}</div>;\n\t}\n\treturn location ? (\n\t\t<Segment.Group>\n\t\t\t<LoadScript googleMapsApiKey={googleAPIKey} libraries={GOOGLE_MAP_LIBRARIES}>\n\t\t\t\t{addSearch || addLocator ? (\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{addSearch ? (\n\t\t\t\t\t\t\t\t<AddressRadiusSelector\n\t\t\t\t\t\t\t\t\tpanTo={panTo}\n\t\t\t\t\t\t\t\t\tlocation={location}\n\t\t\t\t\t\t\t\t\tonSearchLocationSelected={onSearchLocationSelected}\n\t\t\t\t\t\t\t\t\tonAddLocation={(location, miles) => {\n\t\t\t\t\t\t\t\t\t\tconst loc = onAddLocation(selectedLocation, miles);\n\t\t\t\t\t\t\t\t\t\tif (loc) {\n\t\t\t\t\t\t\t\t\t\t\taddMarker(circles, markers)(selectedLocation, miles, loc.ref_id);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{addLocator ? <Locate panTo={panTo} /> : ''}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Segment>\n\t\t\t\t) : (\n\t\t\t\t\t<div></div>\n\t\t\t\t)}\n\t\t\t\t<Segment>\n\t\t\t\t\t{logo}\n\n\t\t\t\t\t{customComponents.map((component) => component)}\n\n\t\t\t\t\t<GoogleMap\n\t\t\t\t\t\tclassName=\"MapHeadStyle\"\n\t\t\t\t\t\tmapContainerStyle={containerStyle}\n\t\t\t\t\t\tcenter={location}\n\t\t\t\t\t\tzoom={zoom}\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tonLoad={onMapLoad}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* Child components, such as markers, info windows, etc. */}\n\t\t\t\t\t\t<DrawingManager />\n\t\t\t\t\t</GoogleMap>\n\t\t\t\t</Segment>\n\t\t\t</LoadScript>\n\t\t</Segment.Group>\n\t) : (\n\t\t<div style={defaultContainerStyle}>\n\t\t\t<Dimmer active>\n\t\t\t\t<Loader size=\"large\" inline=\"centered\">\n\t\t\t\t\tLoading\n\t\t\t\t</Loader>\n\t\t\t</Dimmer>\n\t\t</div>\n\t);\n}\n\nconst defaultContainerStyle = {\n\tposition: 'relative',\n\twidth: '100%',\n\theight: '400px',\n};\nconst defaultOptions = {\n\tstyles: mapStyles,\n\tdisableDefaultUI: true, //disable the controls\n\tzoomControl: true, //ad only controls we wanbt\n};\nconst center = {\n\tlat: 28,\n\tlng: -81,\n};\n\nLocationMap.defaultProps = {\n\tzoom: 10,\n\toptions: defaultOptions,\n\tcenter: center,\n\tcontainerStyle: defaultContainerStyle,\n\tgoogleAPIKey: GOOGLE_GEOCODE_API_KEY,\n\tlogo: <></>,\n\tcustomComponents: [],\n\tcustomMarker: 'BasicMarker',\n\tinfoWindowContent: `\n\t\t<div>\n\t\t\t<div>Default InfoWindow</div>\n\t\t</div>\n\t`,\n\tlibraries: ['places', 'drawing'],\n};\n\nLocationMap.propTypes = {\n\taddSearch: PropTypes.bool,\n\taddLocator: PropTypes.bool,\n\tlogo: PropTypes.objectOf(Logo),\n\toptions: PropTypes.object,\n\tcontainerStyle: PropTypes.object,\n\tgoogleAPIKey: PropTypes.string,\n\tzoom: PropTypes.number,\n\tcenter: PropTypes.object,\n\tcustomComponents: PropTypes.any,\n\tcustomMarker: PropTypes.string,\n\tlibraries: PropTypes.array,\n};\nexport default memo(LocationMap);\n"]},"metadata":{},"sourceType":"module"}