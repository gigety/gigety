{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ChatModal/ChatModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Popup from 'reactjs-popup';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { Button, List } from 'semantic-ui-react';\nimport 'reactjs-popup/dist/index.css';\nimport UserLabel from '../../User/UserLabel';\nimport ProfileUserImage from '../../Profile/ProfileUserImage';\nimport './ChatModal.css';\nimport { StompClientContext } from 'contexts/StompClientContext';\nimport { use121ChatMessages } from 'redux/hooks/useMessages';\nimport { mapProfileToContact } from 'utils/objectMapper';\nimport { findMessagesFor121Chat } from 'redux/actions/messagesAction';\nimport MessageInput from '../MessageInput/MessageInput';\nimport { GIGETY_MESSENGER_URL } from '../../../constants/index';\n\nconst ChatModal = ({\n  profile\n}) => {\n  _s();\n\n  const {\n    giguser\n  } = useSelector(state => state.giguser);\n  const messages = use121ChatMessages(giguser.id, profile.userId);\n  const contact = mapProfileToContact(profile, giguser); //useMessenger(giguser, contact);\n  //const { stomp, SockJS } = useContext(StompClientContext);\n\n  const dispatch = useDispatch();\n  let subId = '';\n  useEffect(() => {\n    const stomp = require('stompjs');\n\n    let SockJS = require('sockjs-client');\n\n    SockJS = new SockJS(GIGETY_MESSENGER_URL + '/ws');\n    const stompClient = stomp.over(SockJS);\n\n    const onError = error => {\n      console.log('ERRRRRRRRRRRRRRR : ', error);\n    };\n\n    const onConnected = () => {\n      const onMessageRecieved = msg => {\n        console.log('RECEIVED MESSAGE +++++++++++++++++++', contact);\n        const notification = JSON.parse(msg.body);\n\n        if (contact.contactId === notification.senderId) {\n          console.log('WE FOUND A MATCH');\n          dispatch(findMessagesFor121Chat(giguser.id, notification.senderId));\n        }\n      };\n\n      const {\n        id\n      } = stompClient.subscribe(`/user/${giguser.id}/queue/messages`, onMessageRecieved);\n      subId = id;\n      console.log('IIIISSSS COOONN NNEEECCCCTTTTED v:: ', stompClient.connected);\n    };\n\n    stompClient.connect({}, onConnected, onError);\n    return () => {\n      console.log(`here we unsubscibe to id ${subId}, you best check this is proper way to unsubscribe`); //stompClient.unsubscribe(subId);\n    };\n  }, [giguser, contact, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    trigger: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(UserLabel, {\n        userImageUrl: profile.userImageUrl,\n        email: profile.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this),\n    modal: true,\n    nested: true,\n    children: close => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [\"Send Direct Message to \", profile.email, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(ScrollToBottom, {\n          className: \"messages\",\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: messages ? messages.map(msg => /*#__PURE__*/_jsxDEV(List.Item, {\n              children: [/*#__PURE__*/_jsxDEV(ProfileUserImage, {\n                size: \"mini\",\n                profile: profile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                children: [/*#__PURE__*/_jsxDEV(List.Header, {\n                  as: \"a\",\n                  children: profile.profileName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 14\n                }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n                  children: msg.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 14\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 12\n            }, this)) : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          activeContact: contact,\n          giguser: giguser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"button\",\n          children: \" Go to Messages \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button\",\n          onClick: () => {\n            console.log('modal closed ');\n            close();\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ChatModal, \"Uj2fb0jXdINaVGVLXeJ3TyLOynA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ChatModal;\nexport default ChatModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatModal\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ChatModal/ChatModal.js"],"names":["React","useContext","useEffect","useDispatch","useSelector","Popup","ScrollToBottom","Button","List","UserLabel","ProfileUserImage","StompClientContext","use121ChatMessages","mapProfileToContact","findMessagesFor121Chat","MessageInput","GIGETY_MESSENGER_URL","ChatModal","profile","giguser","state","messages","id","userId","contact","dispatch","subId","stomp","require","SockJS","stompClient","over","onError","error","console","log","onConnected","onMessageRecieved","msg","notification","JSON","parse","body","contactId","senderId","subscribe","connected","connect","userImageUrl","email","close","map","profileName","content"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Popup from 'reactjs-popup';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { Button, List } from 'semantic-ui-react';\nimport 'reactjs-popup/dist/index.css';\nimport UserLabel from '../../User/UserLabel';\nimport ProfileUserImage from '../../Profile/ProfileUserImage';\nimport './ChatModal.css';\nimport { StompClientContext } from 'contexts/StompClientContext';\nimport { use121ChatMessages } from 'redux/hooks/useMessages';\nimport { mapProfileToContact } from 'utils/objectMapper';\nimport { findMessagesFor121Chat } from 'redux/actions/messagesAction';\nimport MessageInput from '../MessageInput/MessageInput';\nimport { GIGETY_MESSENGER_URL } from '../../../constants/index';\n\nconst ChatModal = ({ profile }) => {\n\tconst { giguser } = useSelector((state) => state.giguser);\n\tconst messages = use121ChatMessages(giguser.id, profile.userId);\n\tconst contact = mapProfileToContact(profile, giguser);\n\t//useMessenger(giguser, contact);\n\t//const { stomp, SockJS } = useContext(StompClientContext);\n\tconst dispatch = useDispatch();\n\tlet subId = '';\n\tuseEffect(() => {\n\t\tconst stomp = require('stompjs');\n\t\tlet SockJS = require('sockjs-client');\n\t\tSockJS = new SockJS(GIGETY_MESSENGER_URL + '/ws');\n\t\tconst stompClient = stomp.over(SockJS);\n\t\tconst onError = (error) => {\n\t\t\tconsole.log('ERRRRRRRRRRRRRRR : ', error);\n\t\t};\n\t\tconst onConnected = () => {\n\t\t\tconst onMessageRecieved = (msg) => {\n\t\t\t\tconsole.log('RECEIVED MESSAGE +++++++++++++++++++', contact);\n\t\t\t\tconst notification = JSON.parse(msg.body);\n\t\t\t\tif (contact.contactId === notification.senderId) {\n\t\t\t\t\tconsole.log('WE FOUND A MATCH');\n\t\t\t\t\tdispatch(findMessagesFor121Chat(giguser.id, notification.senderId));\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst { id } = stompClient.subscribe(`/user/${giguser.id}/queue/messages`, onMessageRecieved);\n\t\t\tsubId = id;\n\t\t\tconsole.log('IIIISSSS COOONN NNEEECCCCTTTTED v:: ', stompClient.connected);\n\t\t};\n\t\tstompClient.connect({}, onConnected, onError);\n\n\t\treturn () => {\n\t\t\tconsole.log(`here we unsubscibe to id ${subId}, you best check this is proper way to unsubscribe`);\n\t\t\t//stompClient.unsubscribe(subId);\n\t\t};\n\t}, [giguser, contact, dispatch]);\n\n\treturn (\n\t\t<Popup\n\t\t\ttrigger={\n\t\t\t\t<div>\n\t\t\t\t\t<UserLabel userImageUrl={profile.userImageUrl} email={profile.email} />\n\t\t\t\t</div>\n\t\t\t}\n\t\t\tmodal\n\t\t\tnested\n\t\t>\n\t\t\t{(close) => (\n\t\t\t\t<div className=\"modal\">\n\t\t\t\t\t<div className=\"header\">Send Direct Message to {profile.email} </div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<ScrollToBottom className=\"messages\">\n\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t{messages\n\t\t\t\t\t\t\t\t\t? messages.map((msg) => (\n\t\t\t\t\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<ProfileUserImage size=\"mini\" profile={profile} />\n\t\t\t\t\t\t\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<List.Header as=\"a\">{profile.profileName}</List.Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<List.Description>{msg.content}</List.Description>\n\t\t\t\t\t\t\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</ScrollToBottom>\n\t\t\t\t\t\t<MessageInput activeContact={contact} giguser={giguser}></MessageInput>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"actions\">\n\t\t\t\t\t\t<Button className=\"button\"> Go to Messages </Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tconsole.log('modal closed ');\n\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Popup>\n\t);\n};\n\nexport default ChatModal;\n"]},"metadata":{},"sourceType":"module"}