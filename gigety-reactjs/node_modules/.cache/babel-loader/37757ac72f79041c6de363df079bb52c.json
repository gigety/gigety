{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ChatMessenger/ChatMessenger.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { use121ChatMessages } from 'redux/hooks/useMessages';\n\nconst ChatMessenger = ({\n  activeContact\n}) => {\n  _s();\n\n  const {\n    giguser\n  } = useSelector(state => state.giguser);\n  activeContact = activeContact ? activeContact : {};\n  const messages = use121ChatMessages(giguser.id, activeContact.contactId);\n  console.log('OHHHHHH MESSSSSSSSS ', messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatMessenger, \"ATIPnGs+qLpBIM8eKvEunbGpsas=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChatMessenger;\nChatMessenger.propTypes = {\n  activeContact: {\n    contactId: PropTypes.string\n  }\n};\nChatMessenger.defaultProps = {\n  activeContact: {\n    contactId: '0'\n  }\n};\nexport default ChatMessenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessenger\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ChatMessenger/ChatMessenger.js"],"names":["React","PropTypes","useSelector","use121ChatMessages","ChatMessenger","activeContact","giguser","state","messages","id","contactId","console","log","propTypes","string","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA;;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA/B;AACAD,EAAAA,aAAa,GAAGA,aAAa,GAAGA,aAAH,GAAmB,EAAhD;AACA,QAAMG,QAAQ,GAAGL,kBAAkB,CAACG,OAAO,CAACG,EAAT,EAAaJ,aAAa,CAACK,SAA3B,CAAnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,QAApC;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAND;;GAAMJ,a;UACeF,W;;;KADfE,a;AAQNA,aAAa,CAACS,SAAd,GAA0B;AACzBR,EAAAA,aAAa,EAAE;AACdK,IAAAA,SAAS,EAAET,SAAS,CAACa;AADP;AADU,CAA1B;AAKAV,aAAa,CAACW,YAAd,GAA6B;AAC5BV,EAAAA,aAAa,EAAE;AAAEK,IAAAA,SAAS,EAAE;AAAb;AADa,CAA7B;AAGA,eAAeN,aAAf","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { use121ChatMessages } from 'redux/hooks/useMessages';\n\nconst ChatMessenger = ({ activeContact }) => {\n\tconst { giguser } = useSelector((state) => state.giguser);\n\tactiveContact = activeContact ? activeContact : {};\n\tconst messages = use121ChatMessages(giguser.id, activeContact.contactId);\n\tconsole.log('OHHHHHH MESSSSSSSSS ', messages);\n\treturn <div></div>;\n};\n\nChatMessenger.propTypes = {\n\tactiveContact: {\n\t\tcontactId: PropTypes.string,\n\t},\n};\nChatMessenger.defaultProps = {\n\tactiveContact: { contactId: '0' },\n};\nexport default ChatMessenger;\n"]},"metadata":{},"sourceType":"module"}