{"ast":null,"code":"import { GET_ERRORS, UPDATE_CHAT_MESSAGES } from './types';\nimport gigetyMessenger from 'apis/gigetyMessenger';\nexport const updateChatMessages = message => (dispatch, getState) => {\n  let messages = getState().messages.messages;\n  console.log('sTATE MMMMMMMMMMMEEEESGAE: ', messages);\n  messages.push(messages);\n  console.log('sTATE MMMMMMMMMMMEEEESGAE: ', messages);\n  dispatch({\n    type: UPDATE_CHAT_MESSAGES,\n    payload: messages\n  });\n};\nexport function sendMessage(msg_id, msg) {\n  //use stompclient to send message\n  return {};\n}\nexport const findMessagesFor121Chat = (currentUserId, profileId) => async dispatch => {\n  try {\n    console.log('OFFFFF TO FIND SOME MESSAGES');\n    const response = await gigetyMessenger.get(`/messages/${currentUserId}/${profileId}`);\n    console.log('FOUND MESSSAGES ::');\n    console.log(response.data);\n    dispatch({\n      type: UPDATE_CHAT_MESSAGES,\n      payload: response.data\n    });\n  } catch (error) {\n    console.error('ERROR :: ', error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/messagesAction.js"],"names":["GET_ERRORS","UPDATE_CHAT_MESSAGES","gigetyMessenger","updateChatMessages","message","dispatch","getState","messages","console","log","push","type","payload","sendMessage","msg_id","msg","findMessagesFor121Chat","currentUserId","profileId","response","get","data","error"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,oBAArB,QAAiD,SAAjD;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,OAAD,IAAa,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACtE,MAAIC,QAAQ,GAAGD,QAAQ,GAAGC,QAAX,CAAoBA,QAAnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,QAA3C;AACAA,EAAAA,QAAQ,CAACG,IAAT,CAAcH,QAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,QAA3C;AACAF,EAAAA,QAAQ,CAAC;AACRM,IAAAA,IAAI,EAAEV,oBADE;AAERW,IAAAA,OAAO,EAAEL;AAFD,GAAD,CAAR;AAIA,CATM;AAWP,OAAO,SAASM,WAAT,CAAqBC,MAArB,EAA6BC,GAA7B,EAAkC;AACxC;AACA,SAAO,EAAP;AACA;AAED,OAAO,MAAMC,sBAAsB,GAAG,CAACC,aAAD,EAAgBC,SAAhB,KAA8B,MAAOb,QAAP,IAAoB;AACvF,MAAI;AACHG,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,UAAMU,QAAQ,GAAG,MAAMjB,eAAe,CAACkB,GAAhB,CAAqB,aAAYH,aAAc,IAAGC,SAAU,EAA5D,CAAvB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYU,QAAQ,CAACE,IAArB;AACAhB,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEV,oBADE;AAERW,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAFV,KAAD,CAAR;AAIA,GATD,CASE,OAAOC,KAAP,EAAc;AACfd,IAAAA,OAAO,CAACc,KAAR,CAAc,WAAd,EAA2BA,KAA3B;AACAjB,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAEX,UADE;AAERY,MAAAA,OAAO,EAAEU;AAFD,KAAD,CAAR;AAIA;AACD,CAjBM","sourcesContent":["import { GET_ERRORS, UPDATE_CHAT_MESSAGES } from './types';\nimport gigetyMessenger from 'apis/gigetyMessenger';\n\nexport const updateChatMessages = (message) => (dispatch, getState) => {\n\tlet messages = getState().messages.messages;\n\tconsole.log('sTATE MMMMMMMMMMMEEEESGAE: ', messages);\n\tmessages.push(messages);\n\tconsole.log('sTATE MMMMMMMMMMMEEEESGAE: ', messages);\n\tdispatch({\n\t\ttype: UPDATE_CHAT_MESSAGES,\n\t\tpayload: messages,\n\t});\n};\n\nexport function sendMessage(msg_id, msg) {\n\t//use stompclient to send message\n\treturn {};\n}\n\nexport const findMessagesFor121Chat = (currentUserId, profileId) => async (dispatch) => {\n\ttry {\n\t\tconsole.log('OFFFFF TO FIND SOME MESSAGES');\n\t\tconst response = await gigetyMessenger.get(`/messages/${currentUserId}/${profileId}`);\n\t\tconsole.log('FOUND MESSSAGES ::');\n\t\tconsole.log(response.data);\n\t\tdispatch({\n\t\t\ttype: UPDATE_CHAT_MESSAGES,\n\t\t\tpayload: response.data,\n\t\t});\n\t} catch (error) {\n\t\tconsole.error('ERROR :: ', error);\n\t\tdispatch({\n\t\t\ttype: GET_ERRORS,\n\t\t\tpayload: error,\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}