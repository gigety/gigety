{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/MessageInput/MessageInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Input } from 'semantic-ui-react';\n\nconst MessageInput = ({\n  activeContact,\n  giguser,\n  sendChatMessage\n}) => {\n  _s();\n\n  const [text, setText] = useState('');\n\n  const sendTheMessage = msg => {\n    if (msg.trim() !== '') {\n      const message = {\n        senderId: giguser.id,\n        recipientId: activeContact.contactId,\n        senderName: giguser.name,\n        recipientName: activeContact.contactName,\n        content: msg,\n        timestamp: new Date()\n      };\n      console.log('sending msg: ', msg);\n      sendChatMessage(message);\n      console.log('msg sent', message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Input, {\n    placeholder: \"Enter Message\",\n    action: true,\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      onKeyPress: e => {\n        console.log(e.code);\n\n        if (e.code === 'Enter') {\n          sendTheMessage(text);\n          setText('');\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        sendTheMessage(text);\n        setText('');\n      },\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MessageInput, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = MessageInput;\nMessageInput.propTypes = {};\nexport default MessageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/MessageInput/MessageInput.js"],"names":["React","useState","Button","Input","MessageInput","activeContact","giguser","sendChatMessage","text","setText","sendTheMessage","msg","trim","message","senderId","id","recipientId","contactId","senderName","name","recipientName","contactName","content","timestamp","Date","console","log","e","target","value","code","propTypes"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA;AAA1B,CAAD,KAAiD;AAAA;;AACrE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMS,cAAc,GAAIC,GAAD,IAAS;AAC/B,QAAIA,GAAG,CAACC,IAAJ,OAAe,EAAnB,EAAuB;AACtB,YAAMC,OAAO,GAAG;AACfC,QAAAA,QAAQ,EAAER,OAAO,CAACS,EADH;AAEfC,QAAAA,WAAW,EAAEX,aAAa,CAACY,SAFZ;AAGfC,QAAAA,UAAU,EAAEZ,OAAO,CAACa,IAHL;AAIfC,QAAAA,aAAa,EAAEf,aAAa,CAACgB,WAJd;AAKfC,QAAAA,OAAO,EAAEX,GALM;AAMfY,QAAAA,SAAS,EAAE,IAAIC,IAAJ;AANI,OAAhB;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bf,GAA7B;AACAJ,MAAAA,eAAe,CAACM,OAAD,CAAf;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBb,OAAxB;AACA;AACD,GAdD;;AAeA,sBACC,QAAC,KAAD;AAAO,IAAA,WAAW,EAAC,eAAnB;AAAmC,IAAA,MAAM,MAAzC;AAA0C,IAAA,KAAK,MAA/C;AAAA,4BACC;AACC,MAAA,KAAK,EAAEL,IADR;AAEC,MAAA,QAAQ,EAAGmB,CAAD,IAAOlB,OAAO,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAFzB;AAGC,MAAA,UAAU,EAAGF,CAAD,IAAO;AAClBF,QAAAA,OAAO,CAACC,GAAR,CAAYC,CAAC,CAACG,IAAd;;AACA,YAAIH,CAAC,CAACG,IAAF,KAAW,OAAf,EAAwB;AACvBpB,UAAAA,cAAc,CAACF,IAAD,CAAd;AACAC,UAAAA,OAAO,CAAC,EAAD,CAAP;AACA;AACD;AATF;AAAA;AAAA;AAAA;AAAA,YADD,eAYC,QAAC,MAAD;AACC,MAAA,OAAO,EAAE,MAAM;AACdC,QAAAA,cAAc,CAACF,IAAD,CAAd;AACAC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACA,OAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAuBA,CAxCD;;GAAML,Y;;KAAAA,Y;AA0CNA,YAAY,CAAC2B,SAAb,GAAyB,EAAzB;AAEA,eAAe3B,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Input } from 'semantic-ui-react';\n\nconst MessageInput = ({ activeContact, giguser, sendChatMessage }) => {\n\tconst [text, setText] = useState('');\n\tconst sendTheMessage = (msg) => {\n\t\tif (msg.trim() !== '') {\n\t\t\tconst message = {\n\t\t\t\tsenderId: giguser.id,\n\t\t\t\trecipientId: activeContact.contactId,\n\t\t\t\tsenderName: giguser.name,\n\t\t\t\trecipientName: activeContact.contactName,\n\t\t\t\tcontent: msg,\n\t\t\t\ttimestamp: new Date(),\n\t\t\t};\n\t\t\tconsole.log('sending msg: ', msg);\n\t\t\tsendChatMessage(message);\n\t\t\tconsole.log('msg sent', message);\n\t\t}\n\t};\n\treturn (\n\t\t<Input placeholder=\"Enter Message\" action fluid>\n\t\t\t<input\n\t\t\t\tvalue={text}\n\t\t\t\tonChange={(e) => setText(e.target.value)}\n\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\tconsole.log(e.code);\n\t\t\t\t\tif (e.code === 'Enter') {\n\t\t\t\t\t\tsendTheMessage(text);\n\t\t\t\t\t\tsetText('');\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsendTheMessage(text);\n\t\t\t\t\tsetText('');\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tSend Message\n\t\t\t</Button>\n\t\t</Input>\n\t);\n};\n\nMessageInput.propTypes = {};\n\nexport default MessageInput;\n"]},"metadata":{},"sourceType":"module"}