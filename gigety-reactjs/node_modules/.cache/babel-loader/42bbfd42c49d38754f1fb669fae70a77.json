{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/src/components/Auth/ProfileDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Dropdown, Image, Icon } from 'semantic-ui-react';\nimport { logout } from '../../redux/actions/auth';\nimport { useGigUser } from 'redux/hooks/useGigUser';\nimport { Link } from 'react-router-dom';\n\nconst ProfileDropdown = props => {\n  _s();\n\n  const giguser = useGigUser();\n  let profileMenu;\n\n  if (giguser) {\n    const imageIcon = giguser.imageUrl ? /*#__PURE__*/_jsxDEV(Image, {\n      avatar: true,\n      src: giguser.imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n      color: \"blue\",\n      name: \"user circle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this);\n    profileMenu = /*#__PURE__*/_jsxDEV(Dropdown, {\n      item: true,\n      simple: true,\n      trigger: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [imageIcon, \" \", giguser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 6\n      }, this),\n      direction: \"right\",\n      icon: null,\n      children: /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          as: Link,\n          to: {\n            pathname: '/user/account'\n          },\n          text: \"Account\",\n          icon: \"user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          as: Link,\n          to: \"/user/Settings/UserSettings\",\n          text: \"Settings\",\n          icon: \"settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          text: \"Logout\",\n          icon: \"sign out\",\n          onClick: props.logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this);\n  } else {\n    profileMenu = /*#__PURE__*/_jsxDEV(Dropdown, {\n      item: true,\n      simple: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this);\n  }\n\n  return profileMenu;\n};\n\n_s(ProfileDropdown, \"66cnjMvQsayEyYsXV7UZtOCzlvI=\", false, function () {\n  return [useGigUser];\n});\n\n_c = ProfileDropdown;\nexport default connect(null, {\n  logout\n})(ProfileDropdown);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileDropdown\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/src/components/Auth/ProfileDropdown.js"],"names":["React","connect","Dropdown","Image","Icon","logout","useGigUser","Link","ProfileDropdown","props","giguser","profileMenu","imageIcon","imageUrl","email","pathname"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,IAA1B,QAAsC,mBAAtC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,MAAIK,WAAJ;;AACA,MAAID,OAAJ,EAAa;AACZ,UAAME,SAAS,GAAGF,OAAO,CAACG,QAAR,gBACjB,QAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAc,MAAA,GAAG,EAAEH,OAAO,CAACG;AAA3B;AAAA;AAAA;AAAA;AAAA,YADiB,gBAGjB,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHD;AAKAF,IAAAA,WAAW,gBACV,QAAC,QAAD;AACC,MAAA,IAAI,MADL;AAEC,MAAA,MAAM,MAFP;AAGC,MAAA,OAAO,eACN;AAAA,mBACEC,SADF,OACcF,OAAO,CAACI,KADtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAQC,MAAA,SAAS,EAAC,OARX;AASC,MAAA,IAAI,EAAE,IATP;AAAA,6BAWC,QAAC,QAAD,CAAU,IAAV;AAAA,gCACC,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,EAAE,EAAEP,IAAnB;AAAyB,UAAA,EAAE,EAAE;AAAEQ,YAAAA,QAAQ,EAAE;AAAZ,WAA7B;AAA4D,UAAA,IAAI,EAAC,SAAjE;AAA2E,UAAA,IAAI,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,EAAE,EAAER,IAAnB;AAAyB,UAAA,EAAE,EAAC,6BAA5B;AAA0D,UAAA,IAAI,EAAC,UAA/D;AAA0E,UAAA,IAAI,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,IAAI,EAAC,QAApB;AAA6B,UAAA,IAAI,EAAC,UAAlC;AAA6C,UAAA,OAAO,EAAEE,KAAK,CAACJ;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAXD;AAAA;AAAA;AAAA;AAAA,YADD;AAmBA,GAzBD,MAyBO;AACNM,IAAAA,WAAW,gBAAG,QAAC,QAAD;AAAU,MAAA,IAAI,MAAd;AAAe,MAAA,MAAM;AAArB;AAAA;AAAA;AAAA;AAAA,YAAd;AACA;;AAED,SAAOA,WAAP;AACA,CAjCD;;GAAMH,e;UACWF,U;;;KADXE,e;AAmCN,eAAeP,OAAO,CAAC,IAAD,EAAO;AAAEI,EAAAA;AAAF,CAAP,CAAP,CAA0BG,eAA1B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dropdown, Image, Icon } from 'semantic-ui-react';\nimport { logout } from '../../redux/actions/auth';\nimport { useGigUser } from 'redux/hooks/useGigUser';\nimport { Link } from 'react-router-dom';\n\nconst ProfileDropdown = (props) => {\n\tconst giguser = useGigUser();\n\tlet profileMenu;\n\tif (giguser) {\n\t\tconst imageIcon = giguser.imageUrl ? (\n\t\t\t<Image avatar src={giguser.imageUrl} />\n\t\t) : (\n\t\t\t<Icon color=\"blue\" name=\"user circle\" />\n\t\t);\n\t\tprofileMenu = (\n\t\t\t<Dropdown\n\t\t\t\titem\n\t\t\t\tsimple\n\t\t\t\ttrigger={\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{imageIcon} {giguser.email}\n\t\t\t\t\t</span>\n\t\t\t\t}\n\t\t\t\tdirection=\"right\"\n\t\t\t\ticon={null}\n\t\t\t>\n\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t<Dropdown.Item as={Link} to={{ pathname: '/user/account' }} text=\"Account\" icon=\"user\" />\n\t\t\t\t\t<Dropdown.Item as={Link} to=\"/user/Settings/UserSettings\" text=\"Settings\" icon=\"settings\" />\n\t\t\t\t\t<Dropdown.Item text=\"Logout\" icon=\"sign out\" onClick={props.logout} />\n\t\t\t\t</Dropdown.Menu>\n\t\t\t</Dropdown>\n\t\t);\n\t} else {\n\t\tprofileMenu = <Dropdown item simple />;\n\t}\n\n\treturn profileMenu;\n};\n\nexport default connect(null, { logout })(ProfileDropdown);\n"]},"metadata":{},"sourceType":"module"}