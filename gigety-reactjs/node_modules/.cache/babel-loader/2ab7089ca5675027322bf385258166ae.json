{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/NotificationsScrollable/NotificationsScrollable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useGigUser } from 'redux/hooks/useGigUser';\nimport _ from 'lodash';\nimport { useAllNewUserMessages, useAllUserMessageNotifications } from 'redux/hooks/useMessages';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { List, ListItem, Input, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { findMessagesFor121Chat } from 'redux/actions/messagesAction';\n\nconst NotificationsScrollable = props => {\n  _s();\n\n  const giguser = useGigUser();\n  const allMessages = useAllNewUserMessages(giguser.id);\n  console.log('ALL Messages ', allMessages);\n\n  const messageNotifications = _.uniqBy(allMessages, message => 'senderName');\n\n  console.log(' Message Notifications ', messageNotifications);\n  const dispatch = useDispatch();\n\n  const getConversationMessages = senderId => {\n    dispatch(findMessagesFor121Chat(giguser.id, senderId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: messageNotifications ? messageNotifications.map(message => /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => getConversationMessages(message.senderId),\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(List.Content, {\n              children: [/*#__PURE__*/_jsxDEV(List.Header, {\n                children: message.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(NotificationsScrollable, \"u1qVa+KJd7vnfSFyenhOaCTx5r8=\", false, function () {\n  return [useGigUser, useAllNewUserMessages, useDispatch];\n});\n\n_c = NotificationsScrollable;\nexport default NotificationsScrollable;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationsScrollable\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/NotificationsScrollable/NotificationsScrollable.js"],"names":["React","useState","useGigUser","_","useAllNewUserMessages","useAllUserMessageNotifications","ScrollToBottom","List","ListItem","Input","Button","Link","useDispatch","findMessagesFor121Chat","NotificationsScrollable","props","giguser","allMessages","id","console","log","messageNotifications","uniqBy","message","dispatch","getConversationMessages","senderId","map","senderName","content"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,qBAAT,EAAgCC,8BAAhC,QAAsE,yBAAtE;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,KAAzB,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,sBAAT,QAAuC,8BAAvC;;AACA,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAMC,OAAO,GAAGd,UAAU,EAA1B;AACA,QAAMe,WAAW,GAAGb,qBAAqB,CAACY,OAAO,CAACE,EAAT,CAAzC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,WAA7B;;AACA,QAAMI,oBAAoB,GAAGlB,CAAC,CAACmB,MAAF,CAASL,WAAT,EAAuBM,OAAD,IAAa,YAAnC,CAA7B;;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCC,oBAAvC;AACA,QAAMG,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,QAAMa,uBAAuB,GAAIC,QAAD,IAAc;AAC7CF,IAAAA,QAAQ,CAACX,sBAAsB,CAACG,OAAO,CAACE,EAAT,EAAaQ,QAAb,CAAvB,CAAR;AACA,GAFD;;AAGA,sBACC;AAAA,2BACC,QAAC,cAAD;AAAA,6BACC,QAAC,IAAD;AAAA,kBACEL,oBAAoB,GAClBA,oBAAoB,CAACM,GAArB,CAA0BJ,OAAD,iBACzB,QAAC,IAAD;AAAM,UAAA,OAAO,EAAE,MAAME,uBAAuB,CAACF,OAAO,CAACG,QAAT,CAA5C;AAAA,iCACC,QAAC,QAAD;AAAA,mCACC,QAAC,IAAD,CAAM,OAAN;AAAA,sCACC,QAAC,IAAD,CAAM,MAAN;AAAA,0BAAcH,OAAO,CAACK;AAAtB;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC,QAAC,IAAD,CAAM,WAAN;AAAA,0BAAmBL,OAAO,CAACM;AAA3B;AAAA;AAAA;AAAA;AAAA,sBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADA,CADkB,GAWlB;AAZJ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAoBA,CA9BD;;GAAMf,uB;UACWZ,U,EACIE,qB,EAIHQ,W;;;KANZE,uB;AAgCN,eAAeA,uBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useGigUser } from 'redux/hooks/useGigUser';\nimport _ from 'lodash';\nimport { useAllNewUserMessages, useAllUserMessageNotifications } from 'redux/hooks/useMessages';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { List, ListItem, Input, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { findMessagesFor121Chat } from 'redux/actions/messagesAction';\nconst NotificationsScrollable = (props) => {\n\tconst giguser = useGigUser();\n\tconst allMessages = useAllNewUserMessages(giguser.id);\n\tconsole.log('ALL Messages ', allMessages);\n\tconst messageNotifications = _.uniqBy(allMessages, (message) => 'senderName');\n\tconsole.log(' Message Notifications ', messageNotifications);\n\tconst dispatch = useDispatch();\n\tconst getConversationMessages = (senderId) => {\n\t\tdispatch(findMessagesFor121Chat(giguser.id, senderId));\n\t};\n\treturn (\n\t\t<>\n\t\t\t<ScrollToBottom>\n\t\t\t\t<List>\n\t\t\t\t\t{messageNotifications\n\t\t\t\t\t\t? messageNotifications.map((message) => (\n\t\t\t\t\t\t\t\t<Link onClick={() => getConversationMessages(message.senderId)}>\n\t\t\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t\t\t\t\t<List.Header>{message.senderName}</List.Header>\n\t\t\t\t\t\t\t\t\t\t\t<List.Description>{message.content}</List.Description>\n\t\t\t\t\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t  ))\n\t\t\t\t\t\t: ''}\n\t\t\t\t</List>\n\t\t\t</ScrollToBottom>\n\t\t</>\n\t);\n};\n\nexport default NotificationsScrollable;\n"]},"metadata":{},"sourceType":"module"}