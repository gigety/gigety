{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/src/components/Messenger/UserAvatar/UserAvatar.js\";\nimport React from 'react';\nimport { Image, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst UserAvatar = ({\n  user,\n  size\n}) => {\n  console.log(user);\n  const imageIcon = user && user.imageUrl ? /*#__PURE__*/_jsxDEV(Image, {\n    avatar: true,\n    src: user.imageUrl,\n    rounded: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 4\n  }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n    color: \"blue\",\n    name: \"user circle\",\n    size: size\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 4\n  }, this);\n  const userImage = user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: imageIcon\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 46\n  }, this);\n  return userImage;\n};\n\n_c = UserAvatar;\nUserAvatar.defaultProps = {\n  contact: {\n    contactImageUrl: ''\n  },\n  size: 'medium'\n};\nUserAvatar.propTypes = {\n  contact: PropTypes.object,\n  size: PropTypes.string\n};\nexport default UserAvatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAvatar\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/src/components/Messenger/UserAvatar/UserAvatar.js"],"names":["React","Image","Icon","PropTypes","UserAvatar","user","size","console","log","imageIcon","imageUrl","userImage","defaultProps","contact","contactImageUrl","propTypes","object","string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAMI,SAAS,GACdJ,IAAI,IAAIA,IAAI,CAACK,QAAb,gBACC,QAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAc,IAAA,GAAG,EAAEL,IAAI,CAACK,QAAxB;AAAkC,IAAA,OAAO;AAAzC;AAAA;AAAA;AAAA;AAAA,UADD,gBAGC,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,aAAxB;AAAsC,IAAA,IAAI,EAAEJ;AAA5C;AAAA;AAAA;AAAA;AAAA,UAJF;AAMA,QAAMK,SAAS,GAAGN,IAAI,gBAAG;AAAA,cAAGI;AAAH,mBAAH,gBAAsB;AAAA;AAAA;AAAA;AAAA,UAA5C;AACA,SAAOE,SAAP;AACA,CAVD;;KAAMP,U;AAWNA,UAAU,CAACQ,YAAX,GAA0B;AACzBC,EAAAA,OAAO,EAAE;AACRC,IAAAA,eAAe,EAAE;AADT,GADgB;AAIzBR,EAAAA,IAAI,EAAE;AAJmB,CAA1B;AAMAF,UAAU,CAACW,SAAX,GAAuB;AACtBF,EAAAA,OAAO,EAAEV,SAAS,CAACa,MADG;AAEtBV,EAAAA,IAAI,EAAEH,SAAS,CAACc;AAFM,CAAvB;AAIA,eAAeb,UAAf","sourcesContent":["import React from 'react';\nimport { Image, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst UserAvatar = ({ user, size }) => {\n\tconsole.log(user);\n\tconst imageIcon =\n\t\tuser && user.imageUrl ? (\n\t\t\t<Image avatar src={user.imageUrl} rounded />\n\t\t) : (\n\t\t\t<Icon color=\"blue\" name=\"user circle\" size={size} />\n\t\t);\n\tconst userImage = user ? <>{imageIcon}</> : <div></div>;\n\treturn userImage;\n};\nUserAvatar.defaultProps = {\n\tcontact: {\n\t\tcontactImageUrl: '',\n\t},\n\tsize: 'medium',\n};\nUserAvatar.propTypes = {\n\tcontact: PropTypes.object,\n\tsize: PropTypes.string,\n};\nexport default UserAvatar;\n"]},"metadata":{},"sourceType":"module"}