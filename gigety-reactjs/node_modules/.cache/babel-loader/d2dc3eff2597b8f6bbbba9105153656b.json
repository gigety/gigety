{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findMessagesFor121Chat, findNewUserMessages, findUserMessageNotifications } from '../actions/messagesAction';\nexport const use121ChatMessages = (senderId, recipientId) => {\n  _s();\n\n  const content = useSelector(state => state.messages);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(findMessagesFor121Chat(senderId, recipientId));\n  }, [dispatch, senderId, recipientId]);\n  return content.messages;\n};\n\n_s(use121ChatMessages, \"C7Gsg2cuNtyu1IT4jiHEh9hf2uY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport const useAllUserMessageNotifications = userId => {\n  _s2();\n\n  const content = useSelector(state => state.messageNotifications);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(findUserMessageNotifications(userId));\n  }, [dispatch, userId]);\n  return content.messageNotifications;\n};\n\n_s2(useAllUserMessageNotifications, \"C7Gsg2cuNtyu1IT4jiHEh9hf2uY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport const useAllNewUserMessages = userId => {\n  _s3();\n\n  const content = useSelector(state => state.messages);\n  console.log(content);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(findNewUserMessages(userId));\n  }, [dispatch, userId]);\n  return content.newMessages;\n};\n\n_s3(useAllNewUserMessages, \"C7Gsg2cuNtyu1IT4jiHEh9hf2uY=\", false, function () {\n  return [useSelector, useDispatch];\n});","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/hooks/useMessages.js"],"names":["useEffect","useDispatch","useSelector","findMessagesFor121Chat","findNewUserMessages","findUserMessageNotifications","use121ChatMessages","senderId","recipientId","content","state","messages","dispatch","useAllUserMessageNotifications","userId","messageNotifications","useAllNewUserMessages","console","log","newMessages"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,sBAAT,EAAiCC,mBAAjC,EAAsDC,4BAAtD,QAA0F,2BAA1F;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWC,WAAX,KAA2B;AAAA;;AAC5D,QAAMC,OAAO,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA3B;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,QAAQ,CAACT,sBAAsB,CAACI,QAAD,EAAWC,WAAX,CAAvB,CAAR;AACA,GAFQ,EAEN,CAACI,QAAD,EAAWL,QAAX,EAAqBC,WAArB,CAFM,CAAT;AAGA,SAAOC,OAAO,CAACE,QAAf;AACA,CAPM;;GAAML,kB;UACIJ,W,EACCD,W;;;AAOlB,OAAO,MAAMY,8BAA8B,GAAIC,MAAD,IAAY;AAAA;;AACzD,QAAML,OAAO,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACK,oBAAlB,CAA3B;AACA,QAAMH,QAAQ,GAAGX,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,QAAQ,CAACP,4BAA4B,CAACS,MAAD,CAA7B,CAAR;AACA,GAFQ,EAEN,CAACF,QAAD,EAAWE,MAAX,CAFM,CAAT;AAGA,SAAOL,OAAO,CAACM,oBAAf;AACA,CAPM;;IAAMF,8B;UACIX,W,EACCD,W;;;AAOlB,OAAO,MAAMe,qBAAqB,GAAIF,MAAD,IAAY;AAAA;;AAChD,QAAML,OAAO,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA3B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACA,QAAMG,QAAQ,GAAGX,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,QAAQ,CAACR,mBAAmB,CAACU,MAAD,CAApB,CAAR;AACA,GAFQ,EAEN,CAACF,QAAD,EAAWE,MAAX,CAFM,CAAT;AAGA,SAAOL,OAAO,CAACU,WAAf;AACA,CARM;;IAAMH,qB;UACId,W,EAECD,W","sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findMessagesFor121Chat, findNewUserMessages, findUserMessageNotifications } from '../actions/messagesAction';\n\nexport const use121ChatMessages = (senderId, recipientId) => {\n\tconst content = useSelector((state) => state.messages);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(findMessagesFor121Chat(senderId, recipientId));\n\t}, [dispatch, senderId, recipientId]);\n\treturn content.messages;\n};\n\nexport const useAllUserMessageNotifications = (userId) => {\n\tconst content = useSelector((state) => state.messageNotifications);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(findUserMessageNotifications(userId));\n\t}, [dispatch, userId]);\n\treturn content.messageNotifications;\n};\n\nexport const useAllNewUserMessages = (userId) => {\n\tconst content = useSelector((state) => state.messages);\n\tconsole.log(content);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(findNewUserMessages(userId));\n\t}, [dispatch, userId]);\n\treturn content.newMessages;\n};\n"]},"metadata":{},"sourceType":"module"}