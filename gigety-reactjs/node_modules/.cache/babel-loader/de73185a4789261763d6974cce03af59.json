{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ChatMessenger/ChatMessenger.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { use121ChatMessages } from 'redux/hooks/useMessages';\nimport { List } from 'semantic-ui-react';\nimport ProfileUserImage from 'components/Profile/ProfileUserImage';\nimport ContactAvatar from '../ContactAvatar/ContactAvatar';\n\nconst ChatMessenger = ({\n  activeContact\n}) => {\n  _s();\n\n  const {\n    giguser\n  } = useSelector(state => state.giguser);\n  activeContact = activeContact ? activeContact : {};\n  const messages = use121ChatMessages(giguser.id, activeContact.contactId);\n  return /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n    className: \"messages\",\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: messages ? messages.map(msg => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(ContactAvatar, {\n          size: \"mini\",\n          contact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n          children: [/*#__PURE__*/_jsxDEV(List.Header, {\n            as: \"a\",\n            children: activeContact.contactName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 8\n      }, this)) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ChatMessenger, \"ATIPnGs+qLpBIM8eKvEunbGpsas=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChatMessenger;\nChatMessenger.propTypes = {\n  activeContact: {\n    contactId: PropTypes.string\n  }\n};\nChatMessenger.defaultProps = {\n  activeContact: {\n    contactId: '0'\n  }\n};\nexport default ChatMessenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessenger\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ChatMessenger/ChatMessenger.js"],"names":["React","PropTypes","useSelector","ScrollToBottom","use121ChatMessages","List","ProfileUserImage","ContactAvatar","ChatMessenger","activeContact","giguser","state","messages","id","contactId","map","msg","contactName","content","propTypes","string","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA;;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAcR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA/B;AACAD,EAAAA,aAAa,GAAGA,aAAa,GAAGA,aAAH,GAAmB,EAAhD;AACA,QAAMG,QAAQ,GAAGR,kBAAkB,CAACM,OAAO,CAACG,EAAT,EAAaJ,aAAa,CAACK,SAA3B,CAAnC;AACA,sBACC,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAA,2BACC,QAAC,IAAD;AAAA,gBACEF,QAAQ,GACNA,QAAQ,CAACG,GAAT,CAAcC,GAAD,iBACb,QAAC,IAAD,CAAM,IAAN;AAAA,gCACC,QAAC,aAAD;AAAe,UAAA,IAAI,EAAC,MAApB;AAA2B,UAAA,OAAO;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,IAAD,CAAM,OAAN;AAAA,kCACC,QAAC,IAAD,CAAM,MAAN;AAAa,YAAA,EAAE,EAAC,GAAhB;AAAA,sBAAqBP,aAAa,CAACQ;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC,QAAC,IAAD,CAAM,WAAN;AAAA,sBAAmBD,GAAG,CAACE;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CADM,GAUN;AAXJ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA,CArBD;;GAAMV,a;UACeN,W;;;KADfM,a;AAuBNA,aAAa,CAACW,SAAd,GAA0B;AACzBV,EAAAA,aAAa,EAAE;AACdK,IAAAA,SAAS,EAAEb,SAAS,CAACmB;AADP;AADU,CAA1B;AAKAZ,aAAa,CAACa,YAAd,GAA6B;AAC5BZ,EAAAA,aAAa,EAAE;AAAEK,IAAAA,SAAS,EAAE;AAAb;AADa,CAA7B;AAGA,eAAeN,aAAf","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { use121ChatMessages } from 'redux/hooks/useMessages';\nimport { List } from 'semantic-ui-react';\nimport ProfileUserImage from 'components/Profile/ProfileUserImage';\nimport ContactAvatar from '../ContactAvatar/ContactAvatar';\nconst ChatMessenger = ({ activeContact }) => {\n\tconst { giguser } = useSelector((state) => state.giguser);\n\tactiveContact = activeContact ? activeContact : {};\n\tconst messages = use121ChatMessages(giguser.id, activeContact.contactId);\n\treturn (\n\t\t<ScrollToBottom className=\"messages\">\n\t\t\t<List>\n\t\t\t\t{messages\n\t\t\t\t\t? messages.map((msg) => (\n\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t<ContactAvatar size=\"mini\" contact />\n\t\t\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t\t\t<List.Header as=\"a\">{activeContact.contactName}</List.Header>\n\t\t\t\t\t\t\t\t\t<List.Description>{msg.content}</List.Description>\n\t\t\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t  ))\n\t\t\t\t\t: ''}\n\t\t\t</List>\n\t\t</ScrollToBottom>\n\t);\n};\n\nChatMessenger.propTypes = {\n\tactiveContact: {\n\t\tcontactId: PropTypes.string,\n\t},\n};\nChatMessenger.defaultProps = {\n\tactiveContact: { contactId: '0' },\n};\nexport default ChatMessenger;\n"]},"metadata":{},"sourceType":"module"}