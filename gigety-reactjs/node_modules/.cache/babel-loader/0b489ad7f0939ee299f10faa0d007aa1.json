{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ChatModal/ChatModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Popup from 'reactjs-popup';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { Button, List } from 'semantic-ui-react';\nimport 'reactjs-popup/dist/index.css';\nimport UserLabel from '../../User/UserLabel';\nimport ProfileUserImage from '../../Profile/ProfileUserImage';\nimport './ChatModal.css';\nimport { use121ChatMessages } from 'redux/hooks/useMessages';\nimport { mapProfileToContact } from 'utils/objectMapper';\nimport { findMessagesFor121Chat, updateChatMessages } from 'redux/actions/messagesAction';\nimport MessageInput from '../MessageInput/MessageInput';\nimport { GIGETY_MESSENGER_URL } from '../../../constants/index';\n\nconst ChatModal = ({\n  profile\n}) => {\n  _s();\n\n  const {\n    giguser\n  } = useSelector(state => state.giguser);\n  const messages = use121ChatMessages(giguser.id, profile.userId);\n  const contact = mapProfileToContact(profile, giguser);\n  const sendChatMessage = useRef(null); //useMessenger(giguser, contact);\n  //const { stomp, SockJS } = useContext(StompClientContext);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let subId;\n\n    const stomp = require('stompjs');\n\n    let SockJS = require('sockjs-client');\n\n    SockJS = new SockJS(GIGETY_MESSENGER_URL + '/ws');\n\n    SockJS.onclose = () => {\n      stompClient.unsubscribe(subId);\n    };\n\n    const stompClient = stomp.over(SockJS);\n\n    stompClient.debug = f => f;\n\n    const onError = error => {\n      console.log('ERRRRRRRRRRRRRRR : ', error);\n    };\n\n    sendChatMessage.current = message => {\n      stompClient.send('/msg/chat', {}, JSON.stringify(message));\n      dispatch(updateChatMessages(message));\n    };\n\n    const onConnected = () => {\n      const onMessageRecieved = msg => {\n        const notification = JSON.parse(msg.body);\n\n        if (contact.contactId === notification.senderId) {\n          dispatch(findMessagesFor121Chat(giguser.id, notification.senderId));\n        }\n      };\n\n      const {\n        id\n      } = stompClient.subscribe(`/user/${giguser.id}/queue/messages`, onMessageRecieved);\n      subId = id;\n    };\n\n    stompClient.connect({}, onConnected, onError);\n  }, [giguser, contact, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    trigger: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(UserLabel, {\n        userImageUrl: profile.userImageUrl,\n        email: profile.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this),\n    modal: true,\n    nested: true,\n    children: close => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [\"Send Direct Message to \", profile.email, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(ScrollToBottom, {\n          className: \"messages\",\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: messages ? messages.map(msg => /*#__PURE__*/_jsxDEV(List.Item, {\n              children: [/*#__PURE__*/_jsxDEV(ProfileUserImage, {\n                size: \"mini\",\n                profile: profile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                children: [/*#__PURE__*/_jsxDEV(List.Header, {\n                  as: \"a\",\n                  children: profile.profileName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 14\n                }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n                  children: msg.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 14\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 12\n            }, this)) : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          activeContact: contact,\n          giguser: giguser,\n          sendChatMessage: sendChatMessage.current\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"button\",\n          children: \" Go to Messages \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button\",\n          onClick: () => {\n            console.log('modal closed ');\n            close();\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ChatModal, \"f79E7NNfKAFC0zGKFJK5edDpZvw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ChatModal;\nexport default ChatModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatModal\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ChatModal/ChatModal.js"],"names":["React","useContext","useEffect","useRef","useDispatch","useSelector","Popup","ScrollToBottom","Button","List","UserLabel","ProfileUserImage","use121ChatMessages","mapProfileToContact","findMessagesFor121Chat","updateChatMessages","MessageInput","GIGETY_MESSENGER_URL","ChatModal","profile","giguser","state","messages","id","userId","contact","sendChatMessage","dispatch","subId","stomp","require","SockJS","onclose","stompClient","unsubscribe","over","debug","f","onError","error","console","log","current","message","send","JSON","stringify","onConnected","onMessageRecieved","msg","notification","parse","body","contactId","senderId","subscribe","connect","userImageUrl","email","close","map","profileName","content"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Popup from 'reactjs-popup';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { Button, List } from 'semantic-ui-react';\nimport 'reactjs-popup/dist/index.css';\nimport UserLabel from '../../User/UserLabel';\nimport ProfileUserImage from '../../Profile/ProfileUserImage';\nimport './ChatModal.css';\nimport { use121ChatMessages } from 'redux/hooks/useMessages';\nimport { mapProfileToContact } from 'utils/objectMapper';\nimport { findMessagesFor121Chat, updateChatMessages } from 'redux/actions/messagesAction';\nimport MessageInput from '../MessageInput/MessageInput';\nimport { GIGETY_MESSENGER_URL } from '../../../constants/index';\n\nconst ChatModal = ({ profile }) => {\n\tconst { giguser } = useSelector((state) => state.giguser);\n\tconst messages = use121ChatMessages(giguser.id, profile.userId);\n\tconst contact = mapProfileToContact(profile, giguser);\n\tconst sendChatMessage = useRef(null);\n\t//useMessenger(giguser, contact);\n\t//const { stomp, SockJS } = useContext(StompClientContext);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tlet subId;\n\t\tconst stomp = require('stompjs');\n\t\tlet SockJS = require('sockjs-client');\n\t\tSockJS = new SockJS(GIGETY_MESSENGER_URL + '/ws');\n\t\tSockJS.onclose = () => {\n\t\t\tstompClient.unsubscribe(subId);\n\t\t};\n\t\tconst stompClient = stomp.over(SockJS);\n\t\tstompClient.debug = (f) => f;\n\t\tconst onError = (error) => {\n\t\t\tconsole.log('ERRRRRRRRRRRRRRR : ', error);\n\t\t};\n\t\tsendChatMessage.current = (message) => {\n\t\t\tstompClient.send('/msg/chat', {}, JSON.stringify(message));\n\t\t\tdispatch(updateChatMessages(message));\n\t\t};\n\t\tconst onConnected = () => {\n\t\t\tconst onMessageRecieved = (msg) => {\n\t\t\t\tconst notification = JSON.parse(msg.body);\n\t\t\t\tif (contact.contactId === notification.senderId) {\n\t\t\t\t\tdispatch(findMessagesFor121Chat(giguser.id, notification.senderId));\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst { id } = stompClient.subscribe(`/user/${giguser.id}/queue/messages`, onMessageRecieved);\n\t\t\tsubId = id;\n\t\t};\n\t\tstompClient.connect({}, onConnected, onError);\n\t}, [giguser, contact, dispatch]);\n\n\treturn (\n\t\t<Popup\n\t\t\ttrigger={\n\t\t\t\t<div>\n\t\t\t\t\t<UserLabel userImageUrl={profile.userImageUrl} email={profile.email} />\n\t\t\t\t</div>\n\t\t\t}\n\t\t\tmodal\n\t\t\tnested\n\t\t>\n\t\t\t{(close) => (\n\t\t\t\t<div className=\"modal\">\n\t\t\t\t\t<div className=\"header\">Send Direct Message to {profile.email} </div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<ScrollToBottom className=\"messages\">\n\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t{messages\n\t\t\t\t\t\t\t\t\t? messages.map((msg) => (\n\t\t\t\t\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<ProfileUserImage size=\"mini\" profile={profile} />\n\t\t\t\t\t\t\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<List.Header as=\"a\">{profile.profileName}</List.Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<List.Description>{msg.content}</List.Description>\n\t\t\t\t\t\t\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</ScrollToBottom>\n\t\t\t\t\t\t<MessageInput\n\t\t\t\t\t\t\tactiveContact={contact}\n\t\t\t\t\t\t\tgiguser={giguser}\n\t\t\t\t\t\t\tsendChatMessage={sendChatMessage.current}\n\t\t\t\t\t\t></MessageInput>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"actions\">\n\t\t\t\t\t\t<Button className=\"button\"> Go to Messages </Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tconsole.log('modal closed ');\n\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Popup>\n\t);\n};\n\nexport default ChatModal;\n"]},"metadata":{},"sourceType":"module"}