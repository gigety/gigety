{"ast":null,"code":"import gigety from 'apis/gigety';\nimport { GET_ERRORS, UPDATE_ACTIVE_CONTACT, UPDATE_CONTACT_LIST } from './types';\nexport const findUserContacts = userId => async dispatch => {\n  try {\n    const response = await gigety.get(`/contacts/${userId}`);\n    dispatch({\n      type: UPDATE_CONTACT_LIST,\n      payload: response.data\n    });\n  } catch (error) {\n    console.error('ERROR :: ', error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error\n    });\n  }\n};\nexport const updateActiveContact = contactId => async (dispatch, getState) => {\n  try {\n    const {\n      contacts\n    } = getState();\n    const activeContact = contacts.find(contact => contact.contactId === contactId);\n\n    if (!activeContact) {\n      activeContact = await gigety.post('/contacts', {});\n    }\n\n    dispatch({\n      type: UPDATE_ACTIVE_CONTACT,\n      payload: activeContact\n    });\n  } catch (error) {\n    console.error('ERROR :: ', error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/contactsAction.js"],"names":["gigety","GET_ERRORS","UPDATE_ACTIVE_CONTACT","UPDATE_CONTACT_LIST","findUserContacts","userId","dispatch","response","get","type","payload","data","error","console","updateActiveContact","contactId","getState","contacts","activeContact","find","contact","post"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,EAAqBC,qBAArB,EAA4CC,mBAA5C,QAAuE,SAAvE;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC/D,MAAI;AACH,UAAMC,QAAQ,GAAG,MAAMP,MAAM,CAACQ,GAAP,CAAY,aAAYH,MAAO,EAA/B,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEN,mBADE;AAERO,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFV,KAAD,CAAR;AAIA,GAND,CAME,OAAOC,KAAP,EAAc;AACfC,IAAAA,OAAO,CAACD,KAAR,CAAc,WAAd,EAA2BA,KAA3B;AACAN,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAER,UADE;AAERS,MAAAA,OAAO,EAAEE;AAFD,KAAD,CAAR;AAIA;AACD,CAdM;AAgBP,OAAO,MAAME,mBAAmB,GAAIC,SAAD,IAAe,OAAOT,QAAP,EAAiBU,QAAjB,KAA8B;AAC/E,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAeD,QAAQ,EAA7B;AACA,UAAME,aAAa,GAAGD,QAAQ,CAACE,IAAT,CAAeC,OAAD,IAAaA,OAAO,CAACL,SAAR,KAAsBA,SAAjD,CAAtB;;AACA,QAAI,CAACG,aAAL,EAAoB;AACnBA,MAAAA,aAAa,GAAG,MAAMlB,MAAM,CAACqB,IAAP,CAAY,WAAZ,EAAyB,EAAzB,CAAtB;AACA;;AACDf,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAEP,qBADE;AAERQ,MAAAA,OAAO,EAAEQ;AAFD,KAAD,CAAR;AAIA,GAVD,CAUE,OAAON,KAAP,EAAc;AACfC,IAAAA,OAAO,CAACD,KAAR,CAAc,WAAd,EAA2BA,KAA3B;AACAN,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAER,UADE;AAERS,MAAAA,OAAO,EAAEE;AAFD,KAAD,CAAR;AAIA;AACD,CAlBM","sourcesContent":["import gigety from 'apis/gigety';\nimport { GET_ERRORS, UPDATE_ACTIVE_CONTACT, UPDATE_CONTACT_LIST } from './types';\n\nexport const findUserContacts = (userId) => async (dispatch) => {\n\ttry {\n\t\tconst response = await gigety.get(`/contacts/${userId}`);\n\t\tdispatch({\n\t\t\ttype: UPDATE_CONTACT_LIST,\n\t\t\tpayload: response.data,\n\t\t});\n\t} catch (error) {\n\t\tconsole.error('ERROR :: ', error);\n\t\tdispatch({\n\t\t\ttype: GET_ERRORS,\n\t\t\tpayload: error,\n\t\t});\n\t}\n};\n\nexport const updateActiveContact = (contactId) => async (dispatch, getState) => {\n\ttry {\n\t\tconst { contacts } = getState();\n\t\tconst activeContact = contacts.find((contact) => contact.contactId === contactId);\n\t\tif (!activeContact) {\n\t\t\tactiveContact = await gigety.post('/contacts', {});\n\t\t}\n\t\tdispatch({\n\t\t\ttype: UPDATE_ACTIVE_CONTACT,\n\t\t\tpayload: activeContact,\n\t\t});\n\t} catch (error) {\n\t\tconsole.error('ERROR :: ', error);\n\t\tdispatch({\n\t\t\ttype: GET_ERRORS,\n\t\t\tpayload: error,\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}