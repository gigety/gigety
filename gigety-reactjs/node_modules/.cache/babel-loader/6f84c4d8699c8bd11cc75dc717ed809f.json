{"ast":null,"code":"import { GET_USER_PROFILE, FOUND_PROFILE_SEARCH_RESULTS } from '../types';\nimport gigety from 'apis/gigety';\nexport const addProfileToProfileList = userProfile => (dispatch, getState) => {\n  const {\n    profileList\n  } = getState().userAccount;\n};\nexport const getUserProfileForGuest = id => async (dispatch, getState) => {\n  try {\n    const response = await gigety.get(`/pnode/profiles/${id}`);\n    dispatch({\n      type: GET_USER_PROFILE,\n      payload: response.data\n    });\n  } catch (error) {\n    throw error;\n  }\n};\nexport const searchAllProfiles = searchTerm => async dispatch => {\n  try {\n    //TODO: Pagination currently hardcoded, should be handled correct instead\n    const response = await gigety.post(`/pnode/profiles/100/0`, {\n      searchTerm\n    });\n    dispatch({\n      type: FOUND_PROFILE_SEARCH_RESULTS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/guest/gigProfileAction.js"],"names":["GET_USER_PROFILE","FOUND_PROFILE_SEARCH_RESULTS","gigety","addProfileToProfileList","userProfile","dispatch","getState","profileList","userAccount","getUserProfileForGuest","id","response","get","type","payload","data","error","searchAllProfiles","searchTerm","post","console"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,4BAA3B,QAA+D,UAA/D;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,MAAMC,uBAAuB,GAAIC,WAAD,IAAiB,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/E,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,QAAQ,GAAGE,WAAnC;AACA,CAFM;AAIP,OAAO,MAAMC,sBAAsB,GAAIC,EAAD,IAAQ,OAAOL,QAAP,EAAiBC,QAAjB,KAA8B;AAC3E,MAAI;AACH,UAAMK,QAAQ,GAAG,MAAMT,MAAM,CAACU,GAAP,CAAY,mBAAkBF,EAAG,EAAjC,CAAvB;AACAL,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEb,gBAAR;AAA0Bc,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA5C,KAAD,CAAR;AACA,GAHD,CAGE,OAAOC,KAAP,EAAc;AACf,UAAMA,KAAN;AACA;AACD,CAPM;AASP,OAAO,MAAMC,iBAAiB,GAAIC,UAAD,IAAgB,MAAOb,QAAP,IAAoB;AACpE,MAAI;AACH;AACA,UAAMM,QAAQ,GAAG,MAAMT,MAAM,CAACiB,IAAP,CAAa,uBAAb,EAAqC;AAC3DD,MAAAA;AAD2D,KAArC,CAAvB;AAGAb,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEZ,4BAAR;AAAsCa,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxD,KAAD,CAAR;AACA,GAND,CAME,OAAOC,KAAP,EAAc;AACfI,IAAAA,OAAO,CAACJ,KAAR,CAAcA,KAAd;AACA,UAAMA,KAAN;AACA;AACD,CAXM","sourcesContent":["import { GET_USER_PROFILE, FOUND_PROFILE_SEARCH_RESULTS } from '../types';\nimport gigety from 'apis/gigety';\n\nexport const addProfileToProfileList = (userProfile) => (dispatch, getState) => {\n\tconst { profileList } = getState().userAccount;\n};\n\nexport const getUserProfileForGuest = (id) => async (dispatch, getState) => {\n\ttry {\n\t\tconst response = await gigety.get(`/pnode/profiles/${id}`);\n\t\tdispatch({ type: GET_USER_PROFILE, payload: response.data });\n\t} catch (error) {\n\t\tthrow error;\n\t}\n};\n\nexport const searchAllProfiles = (searchTerm) => async (dispatch) => {\n\ttry {\n\t\t//TODO: Pagination currently hardcoded, should be handled correct instead\n\t\tconst response = await gigety.post(`/pnode/profiles/100/0`, {\n\t\t\tsearchTerm,\n\t\t});\n\t\tdispatch({ type: FOUND_PROFILE_SEARCH_RESULTS, payload: response.data });\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\tthrow error;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}