{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/src/components/Images/FileDropzone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Icon, CardHeader, CardContent } from 'semantic-ui-react';\nimport '../Styles/ImageStyles.css';\nimport { useSelector } from 'react-redux';\n\nfunction FileDropzone({\n  disabled,\n  onFilesAdded\n}) {\n  _s();\n\n  const [highlight, setHighlight] = useState(true);\n  const fileInputRef = /*#__PURE__*/React.createRef();\n  const {\n    giguser\n  } = useSelector(state => state.giguser);\n\n  const onDragOver = e => {\n    e.preventDefault();\n\n    if (disabled) {\n      return;\n    }\n\n    setHighlight(true);\n  };\n\n  const openFileDialog = e => {\n    if (disabled) {\n      return;\n    }\n\n    fileInputRef.current.click();\n  };\n\n  const onDrop = e => {\n    e.preventDefault();\n\n    if (disabled) {\n      return;\n    }\n\n    const files = e.dataTransfer.files;\n\n    if (onFilesAdded) {\n      onFilesAdded(files);\n    }\n\n    updateImageRef(files);\n    setHighlight(false);\n  };\n\n  const addFiles = e => {\n    if (disabled) {\n      return;\n    }\n\n    const files = e.target.files;\n\n    if (onFilesAdded) {\n      onFilesAdded(files);\n    }\n\n    updateImageRef(files);\n  };\n\n  const updateImageRef = files => {\n    const reader = new FileReader();\n\n    reader.onload = function (event) {\n      document.querySelector('#imageRef').src = reader.result;\n    };\n\n    reader.readAsDataURL(files[0]);\n  };\n\n  const onDragLeave = e => {\n    e.preventDefault();\n\n    if (disabled) {\n      return;\n    }\n\n    setHighlight(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(CardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `Dropzone ${highlight ? 'Highlight' : ''}`,\n        onDragOver: onDragOver,\n        onDragLeave: onDragLeave,\n        onDrop: onDrop,\n        onClick: openFileDialog,\n        style: {\n          cursor: disabled ? 'default' : 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"imageRef\",\n          alt: \"Profile Avatar\",\n          src: giguser ? giguser.imageUrl : '/frog.png'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInputRef,\n          className: \"FileInput\",\n          type: \"file\",\n          multiple: true,\n          onChange: addFiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n}\n\n_s(FileDropzone, \"b3lKrBXVZd0t/pFxIzEyNlbNaOg=\", false, function () {\n  return [useSelector];\n});\n\n_c = FileDropzone;\nFileDropzone.propTypes = {\n  disabled: PropTypes.bool,\n  onFilesAdded: PropTypes.func\n};\nexport default FileDropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDropzone\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/src/components/Images/FileDropzone.js"],"names":["React","useState","PropTypes","Card","Icon","CardHeader","CardContent","useSelector","FileDropzone","disabled","onFilesAdded","highlight","setHighlight","fileInputRef","createRef","giguser","state","onDragOver","e","preventDefault","openFileDialog","current","click","onDrop","files","dataTransfer","updateImageRef","addFiles","target","reader","FileReader","onload","event","document","querySelector","src","result","readAsDataURL","onDragLeave","cursor","imageUrl","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Icon, CardHeader, CardContent } from 'semantic-ui-react';\nimport '../Styles/ImageStyles.css';\nimport { useSelector } from 'react-redux';\nfunction FileDropzone({ disabled, onFilesAdded }) {\n\tconst [highlight, setHighlight] = useState(true);\n\tconst fileInputRef = React.createRef();\n\tconst { giguser } = useSelector((state) => state.giguser);\n\n\tconst onDragOver = (e) => {\n\t\te.preventDefault();\n\t\tif (disabled) {\n\t\t\treturn;\n\t\t}\n\t\tsetHighlight(true);\n\t};\n\tconst openFileDialog = (e) => {\n\t\tif (disabled) {\n\t\t\treturn;\n\t\t}\n\t\tfileInputRef.current.click();\n\t};\n\tconst onDrop = (e) => {\n\t\te.preventDefault();\n\t\tif (disabled) {\n\t\t\treturn;\n\t\t}\n\t\tconst files = e.dataTransfer.files;\n\t\tif (onFilesAdded) {\n\t\t\tonFilesAdded(files);\n\t\t}\n\t\tupdateImageRef(files);\n\t\tsetHighlight(false);\n\t};\n\n\tconst addFiles = (e) => {\n\t\tif (disabled) {\n\t\t\treturn;\n\t\t}\n\t\tconst files = e.target.files;\n\n\t\tif (onFilesAdded) {\n\t\t\tonFilesAdded(files);\n\t\t}\n\t\tupdateImageRef(files);\n\t};\n\n\tconst updateImageRef = (files) => {\n\t\tconst reader = new FileReader();\n\t\treader.onload = function (event) {\n\t\t\tdocument.querySelector('#imageRef').src = reader.result;\n\t\t};\n\t\treader.readAsDataURL(files[0]);\n\t};\n\n\tconst onDragLeave = (e) => {\n\t\te.preventDefault();\n\t\tif (disabled) {\n\t\t\treturn;\n\t\t}\n\t\tsetHighlight(false);\n\t};\n\n\treturn (\n\t\t<Card centered>\n\t\t\t<CardContent>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<Icon name=\"upload\" />\n\t\t\t\t\t<span>Upload Image</span>\n\t\t\t\t</CardHeader>\n\t\t\t</CardContent>\n\t\t\t<CardContent>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`Dropzone ${highlight ? 'Highlight' : ''}`}\n\t\t\t\t\tonDragOver={onDragOver}\n\t\t\t\t\tonDragLeave={onDragLeave}\n\t\t\t\t\tonDrop={onDrop}\n\t\t\t\t\tonClick={openFileDialog}\n\t\t\t\t\tstyle={{ cursor: disabled ? 'default' : 'pointer' }}\n\t\t\t\t>\n\t\t\t\t\t<img id=\"imageRef\" alt=\"Profile Avatar\" src={giguser ? giguser.imageUrl : '/frog.png'} />\n\t\t\t\t\t<input ref={fileInputRef} className=\"FileInput\" type=\"file\" multiple onChange={addFiles} />\n\t\t\t\t</div>\n\t\t\t</CardContent>\n\t\t</Card>\n\t);\n}\n\nFileDropzone.propTypes = {\n\tdisabled: PropTypes.bool,\n\tonFilesAdded: PropTypes.func,\n};\n\nexport default FileDropzone;\n"]},"metadata":{},"sourceType":"module"}