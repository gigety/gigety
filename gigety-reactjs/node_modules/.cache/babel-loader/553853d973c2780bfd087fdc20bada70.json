{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/CreateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Segment, Header, Icon, Button, Form, TextArea, Grid, Input, GridColumn } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport LocationMap from '../Maps/LocationMap';\nimport { postGigProfile } from '../../redux/actions/gigProfileAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LocationList from './LocationList';\nimport { useHistory } from 'react-router-dom';\nimport '../Styles/ImageStyles.css';\nimport FileDropzone from '../Images/FileDropzone';\n\nconst CreateProfile = () => {\n  _s();\n\n  const [includeLocation, setIncludeLocation] = useState(false);\n  const [userProfile, setUserProfile] = useState({});\n  const [locations, setLocations] = useState([]);\n  const [markers, setMarkers] = useState([]);\n  const [circles, setCircles] = useState([]);\n  const [images, setImages] = useState([]);\n  const reduxDispatch = useDispatch();\n  const history = useHistory();\n  const {\n    giguser\n  } = useSelector(state => state.giguser);\n  useEffect(() => {\n    setUserProfile(userProfile => ({ ...userProfile,\n      userImageUrl: giguser.imageUrl\n    }));\n  }, [giguser.imageUrl]);\n\n  const showMap = includeLocation => {\n    setIncludeLocation(!includeLocation);\n  };\n\n  const onSubmit = (e, userProfile, images) => {\n    reduxDispatch(postGigProfile(JSON.stringify(userProfile), images, history));\n  };\n\n  const onAddLocation = (location, miles) => {\n    if (location) {\n      const loc = {\n        ref_id: _.random(11, 12, true),\n        address: location.formatted_address,\n        location: {\n          lat: location.geometry.location.lat(),\n          lng: location.geometry.location.lng()\n        },\n        radius: miles\n      };\n      setLocations([...locations, loc]);\n      setUserProfile({ ...userProfile,\n        profileLocations: [...locations, loc]\n      });\n      return loc;\n    }\n  };\n\n  const onRemoveLocation = (locations, markers, circles) => ref_id => {\n    const locs = locations.filter(location => {\n      return location.ref_id !== ref_id;\n    });\n    setLocations(locs);\n    setUserProfile({ ...userProfile,\n      profileLocations: locs\n    });\n    markers.map(marker => {\n      if (marker.ref_id === ref_id) {\n        marker.setMap(null);\n      }\n\n      return marker;\n    });\n    circles.map(circle => {\n      if (circle.ref_id === ref_id) {\n        circle.setMap(null);\n      }\n\n      return circle;\n    });\n  };\n\n  const onFilesAdded = files => {\n    setImages(files);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      encType: \"multipart/form-data\",\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n              children: /*#__PURE__*/_jsxDEV(Header, {\n                as: \"h2\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n                  children: \"Create a Gigety Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: \"10\",\n              children: [/*#__PURE__*/_jsxDEV(Segment, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    placeholder: \"Enter title for your new profile...\",\n                    onBlur: e => {\n                      setUserProfile({ ...userProfile,\n                        title: e.target.value\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n                    placeholder: \"A brief description of this profile...\",\n                    onBlur: e => {\n                      setUserProfile({ ...userProfile,\n                        description: e.target.value\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Profile Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  placeholder: \"Enter title for your new profile...\",\n                  onBlur: e => {\n                    setUserProfile({ ...userProfile,\n                      userName: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Locations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(LocationList, {\n                  locations: locations,\n                  onRemove: onRemoveLocation(locations, markers, circles)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              width: \"6\",\n              children: /*#__PURE__*/_jsxDEV(FileDropzone, {\n                onFilesAdded: onFilesAdded\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: \"10\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                primary: true,\n                circular: true,\n                fluid: true,\n                animated: \"fade\",\n                onClick: e => {\n                  showMap(includeLocation);\n                },\n                children: includeLocation ? 'Close Map' : 'Add Location(s)'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: \"6\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                primary: true,\n                fluid: true,\n                onClick: e => {\n                  onSubmit(e, userProfile, images);\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n              children: includeLocation ? /*#__PURE__*/_jsxDEV(LocationMap, {\n                addSearch: true,\n                addLocator: true,\n                onAddLocation: onAddLocation,\n                markers: markers,\n                setMarkers: setMarkers,\n                circles: circles,\n                setCircles: setCircles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 10\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CreateProfile, \"P5DxI+bENOpO/izsaqs06XVgcwE=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = CreateProfile;\nexport default CreateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProfile\");","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/CreateProfile.js"],"names":["React","useState","useEffect","Container","Segment","Header","Icon","Button","Form","TextArea","Grid","Input","GridColumn","_","LocationMap","postGigProfile","useDispatch","useSelector","LocationList","useHistory","FileDropzone","CreateProfile","includeLocation","setIncludeLocation","userProfile","setUserProfile","locations","setLocations","markers","setMarkers","circles","setCircles","images","setImages","reduxDispatch","history","giguser","state","userImageUrl","imageUrl","showMap","onSubmit","e","JSON","stringify","onAddLocation","location","miles","loc","ref_id","random","address","formatted_address","lat","geometry","lng","radius","profileLocations","onRemoveLocation","locs","filter","map","marker","setMap","circle","onFilesAdded","files","title","target","value","description","userName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Segment, Header, Icon, Button, Form, TextArea, Grid, Input, GridColumn } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport LocationMap from '../Maps/LocationMap';\nimport { postGigProfile } from '../../redux/actions/gigProfileAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LocationList from './LocationList';\nimport { useHistory } from 'react-router-dom';\nimport '../Styles/ImageStyles.css';\nimport FileDropzone from '../Images/FileDropzone';\n\nconst CreateProfile = () => {\n\tconst [includeLocation, setIncludeLocation] = useState(false);\n\tconst [userProfile, setUserProfile] = useState({});\n\tconst [locations, setLocations] = useState([]);\n\tconst [markers, setMarkers] = useState([]);\n\tconst [circles, setCircles] = useState([]);\n\tconst [images, setImages] = useState([]);\n\tconst reduxDispatch = useDispatch();\n\tconst history = useHistory();\n\tconst { giguser } = useSelector((state) => state.giguser);\n\tuseEffect(() => {\n\t\tsetUserProfile((userProfile) => ({ ...userProfile, userImageUrl: giguser.imageUrl }));\n\t}, [giguser.imageUrl]);\n\tconst showMap = (includeLocation) => {\n\t\tsetIncludeLocation(!includeLocation);\n\t};\n\tconst onSubmit = (e, userProfile, images) => {\n\t\treduxDispatch(postGigProfile(JSON.stringify(userProfile), images, history));\n\t};\n\tconst onAddLocation = (location, miles) => {\n\t\tif (location) {\n\t\t\tconst loc = {\n\t\t\t\tref_id: _.random(11, 12, true),\n\t\t\t\taddress: location.formatted_address,\n\t\t\t\tlocation: { lat: location.geometry.location.lat(), lng: location.geometry.location.lng() },\n\t\t\t\tradius: miles,\n\t\t\t};\n\t\t\tsetLocations([...locations, loc]);\n\t\t\tsetUserProfile({\n\t\t\t\t...userProfile,\n\t\t\t\tprofileLocations: [...locations, loc],\n\t\t\t});\n\t\t\treturn loc;\n\t\t}\n\t};\n\tconst onRemoveLocation = (locations, markers, circles) => (ref_id) => {\n\t\tconst locs = locations.filter((location) => {\n\t\t\treturn location.ref_id !== ref_id;\n\t\t});\n\t\tsetLocations(locs);\n\t\tsetUserProfile({ ...userProfile, profileLocations: locs });\n\t\tmarkers.map((marker) => {\n\t\t\tif (marker.ref_id === ref_id) {\n\t\t\t\tmarker.setMap(null);\n\t\t\t}\n\t\t\treturn marker;\n\t\t});\n\t\tcircles.map((circle) => {\n\t\t\tif (circle.ref_id === ref_id) {\n\t\t\t\tcircle.setMap(null);\n\t\t\t}\n\t\t\treturn circle;\n\t\t});\n\t};\n\tconst onFilesAdded = (files) => {\n\t\tsetImages(files);\n\t};\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Form encType=\"multipart/form-data\">\n\t\t\t\t<Segment>\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t\t<Header as=\"h2\">\n\t\t\t\t\t\t\t\t\t<Icon name=\"edit\" />\n\t\t\t\t\t\t\t\t\t<Header.Content>Create a Gigety Profile</Header.Content>\n\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t<Grid.Column width=\"10\">\n\t\t\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter title for your new profile...\"\n\t\t\t\t\t\t\t\t\t\t\tonBlur={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetUserProfile({ ...userProfile, title: e.target.value });\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"A brief description of this profile...\"\n\t\t\t\t\t\t\t\t\t\t\tonBlur={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetUserProfile({\n\t\t\t\t\t\t\t\t\t\t\t\t\t...userProfile,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdescription: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t<label>Profile Name</label>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter title for your new profile...\"\n\t\t\t\t\t\t\t\t\t\tonBlur={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tsetUserProfile({ ...userProfile, userName: e.target.value });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t<label>Locations</label>\n\t\t\t\t\t\t\t\t\t<LocationList\n\t\t\t\t\t\t\t\t\t\tlocations={locations}\n\t\t\t\t\t\t\t\t\t\tonRemove={onRemoveLocation(locations, markers, circles)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t<GridColumn width=\"6\">\n\t\t\t\t\t\t\t\t<FileDropzone onFilesAdded={onFilesAdded} />\n\t\t\t\t\t\t\t</GridColumn>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t<Grid.Column width=\"10\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\t\t\tcircular\n\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\tanimated=\"fade\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\tshowMap(includeLocation);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{includeLocation ? 'Close Map' : 'Add Location(s)'}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t<Grid.Column width=\"6\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\tonSubmit(e, userProfile, images);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t\t{includeLocation ? (\n\t\t\t\t\t\t\t\t\t<LocationMap\n\t\t\t\t\t\t\t\t\t\taddSearch\n\t\t\t\t\t\t\t\t\t\taddLocator\n\t\t\t\t\t\t\t\t\t\tonAddLocation={onAddLocation}\n\t\t\t\t\t\t\t\t\t\tmarkers={markers}\n\t\t\t\t\t\t\t\t\t\tsetMarkers={setMarkers}\n\t\t\t\t\t\t\t\t\t\tcircles={circles}\n\t\t\t\t\t\t\t\t\t\tsetCircles={setCircles}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Segment>\n\t\t\t</Form>\n\t\t</Container>\n\t);\n};\n\nexport default CreateProfile;\n"]},"metadata":{},"sourceType":"module"}