{"ast":null,"code":"import { UPDATE_CHAT_MESSAGES } from './types';\nimport gigety from 'apis/gigety';\nexport function updateChatMessages(messages) {\n  return {\n    type: UPDATE_CHAT_MESSAGES,\n    payload: messages\n  };\n}\nexport function sendMessage(msg_id, msg) {\n  //use stompclient to send message\n  return {};\n}\nexport const findMessagesFor121Chat = (currentUserId, profileId) => async dispatch => {\n  try {\n    const response = await gigety.get(`/messenger/messages/${currentUserId}/${profileId}`);\n    dispatch({\n      type: GET_CURRENT_USR_ACCOUNT,\n      payload: response.data\n    });\n  } catch (error) {\n    console.error('ERROR :: ', error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/messagesAction.js"],"names":["UPDATE_CHAT_MESSAGES","gigety","updateChatMessages","messages","type","payload","sendMessage","msg_id","msg","findMessagesFor121Chat","currentUserId","profileId","dispatch","response","get","GET_CURRENT_USR_ACCOUNT","data","error","console","GET_ERRORS"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,SAArC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAC5C,SAAO;AACNC,IAAAA,IAAI,EAAEJ,oBADA;AAENK,IAAAA,OAAO,EAAEF;AAFH,GAAP;AAIA;AAED,OAAO,SAASG,WAAT,CAAqBC,MAArB,EAA6BC,GAA7B,EAAkC;AACxC;AACA,SAAO,EAAP;AACA;AAED,OAAO,MAAMC,sBAAsB,GAAG,CAACC,aAAD,EAAgBC,SAAhB,KAA8B,MAAOC,QAAP,IAAoB;AACvF,MAAI;AACH,UAAMC,QAAQ,GAAG,MAAMZ,MAAM,CAACa,GAAP,CAAY,uBAAsBJ,aAAc,IAAGC,SAAU,EAA7D,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AACRR,MAAAA,IAAI,EAAEW,uBADE;AAERV,MAAAA,OAAO,EAAEQ,QAAQ,CAACG;AAFV,KAAD,CAAR;AAIA,GAND,CAME,OAAOC,KAAP,EAAc;AACfC,IAAAA,OAAO,CAACD,KAAR,CAAc,WAAd,EAA2BA,KAA3B;AACAL,IAAAA,QAAQ,CAAC;AACRR,MAAAA,IAAI,EAAEe,UADE;AAERd,MAAAA,OAAO,EAAEY;AAFD,KAAD,CAAR;AAIA;AACD,CAdM","sourcesContent":["import { UPDATE_CHAT_MESSAGES } from './types';\nimport gigety from 'apis/gigety';\n\nexport function updateChatMessages(messages) {\n\treturn {\n\t\ttype: UPDATE_CHAT_MESSAGES,\n\t\tpayload: messages,\n\t};\n}\n\nexport function sendMessage(msg_id, msg) {\n\t//use stompclient to send message\n\treturn {};\n}\n\nexport const findMessagesFor121Chat = (currentUserId, profileId) => async (dispatch) => {\n\ttry {\n\t\tconst response = await gigety.get(`/messenger/messages/${currentUserId}/${profileId}`);\n\t\tdispatch({\n\t\t\ttype: GET_CURRENT_USR_ACCOUNT,\n\t\t\tpayload: response.data,\n\t\t});\n\t} catch (error) {\n\t\tconsole.error('ERROR :: ', error);\n\t\tdispatch({\n\t\t\ttype: GET_ERRORS,\n\t\t\tpayload: error,\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}