[{"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/index.js":"1","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/serviceWorkerRegistration.js":"2","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/reportWebVitals.js":"3","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Layout/App.js":"4","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Layout/Landing.js":"5","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Layout/Header.js":"6","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Auth/AuthProvider.js":"7","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/utils/SecuredRoute.js":"8","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfilesPage.js":"9","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/User/Account.js":"10","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfilePageSecure.js":"11","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfilePage.js":"12","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/CreateGig.js":"13","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/GigPage.js":"14","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/DisplayProfile.js":"15","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/CreateProfile.js":"16","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/GigPageSecure.js":"17","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/User/Settings/UserSettings.js":"18","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/DisplayGig.js":"19","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/About/AboutGigety.js":"20","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/contexts/StompClientContext.js":"21","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Auth/Login.js":"22","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Auth/LoginDropdown.js":"23","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Auth/ProfileDropdown.js":"24","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/User/UserCard.js":"25","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/Search/SearchProfiles.js":"26","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/EditProfile.js":"27","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfileList.js":"28","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfileCard.js":"29","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/LocationList.js":"30","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/GigCard.js":"31","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/User/UserLabel.js":"32","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/hooks/useModal.js":"33","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/ProfileMap.js":"34","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/GigMap.js":"35","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/LocationMap.js":"36","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/Search/SearchGigs.js":"37","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Images/FileDropzone.js":"38","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/hooks/useGigGig.js":"39","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/gigAction.js":"40","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/hooks/useGigUser.js":"41","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/gigProfileAction.js":"42","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/messagesAction.js":"43","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ChatModal/ChatModal.js":"44","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/utils/jwtUtil.js":"45","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/constants/index.js":"46","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/auth.js":"47","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/types.js":"48","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/store.js":"49","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/ProfilesMap.js":"50","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfileLabel.js":"51","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/Search/SearchProfilesInput.js":"52","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/User/UserImage.js":"53","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfileImage.js":"54","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/hooks/useCurrentLocation.js":"55","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/BaseMap.js":"56","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/Search/SearchGigsInput.js":"57","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/GigList.js":"58","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/AddressRadiusSelector.js":"59","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/Locate.js":"60","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Styles/mapStyles.js":"61","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Logos/Logo.js":"62","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/guest/gigAction.js":"63","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/gigUserAction.js":"64","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/guest/gigProfileAction.js":"65","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/apis/gigety.js":"66","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/GigLabel.js":"67","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/Search/PlaceAutoComplete.js":"68","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/index.js":"69","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/hooks/useCurrentAddress.js":"70","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/locationReducer.js":"71","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/gigReducer.js":"72","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/gigProfileReducer.js":"73","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/gigUserAccountReducer.js":"74","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/gigUserReducer.js":"75","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/authenticationReducer.js":"76","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/locationAction.js":"77","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/models/ProfileLocation.js":"78","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/models/base.js":"79","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/hooks/useMessages.js":"80","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/messegesReducer.js":"81","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/apis/gigetyMessenger.js":"82","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfileUserImage.js":"83","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/MessengerPage/MessengerPage.js":"84","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ContactList/ContactList.js":"85","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ChatMessenger/ChatMessenger.js":"86","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/contactsReducer.js":"87","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/NotificationsScrollable/NotificationsScrollable.js":"88","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/MessageInput/MessageInput.js":"89","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/hooks/useContacts.js":"90","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/contactsAction.js":"91","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ContactAvatar/ContactAvatar.js":"92","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/utils/objectMapper.js":"93"},{"size":353,"mtime":1611008548431,"results":"94","hashOfConfig":"95"},{"size":5064,"mtime":1611008431597,"results":"96","hashOfConfig":"95"},{"size":364,"mtime":1611008605731,"results":"97","hashOfConfig":"95"},{"size":2436,"mtime":1612729112003,"results":"98","hashOfConfig":"95"},{"size":673,"mtime":1603472427211,"results":"99","hashOfConfig":"95"},{"size":1353,"mtime":1603472420881,"results":"100","hashOfConfig":"95"},{"size":1146,"mtime":1615505957155,"results":"101","hashOfConfig":"95"},{"size":592,"mtime":1602277167224,"results":"102","hashOfConfig":"95"},{"size":226,"mtime":1602880451568,"results":"103","hashOfConfig":"95"},{"size":1263,"mtime":1612729048825,"results":"104","hashOfConfig":"95"},{"size":2253,"mtime":1603488540967,"results":"105","hashOfConfig":"95"},{"size":456,"mtime":1602880576162,"results":"106","hashOfConfig":"95"},{"size":4315,"mtime":1603483526882,"results":"107","hashOfConfig":"95"},{"size":432,"mtime":1603472222924,"results":"108","hashOfConfig":"95"},{"size":1138,"mtime":1615499223720,"results":"109","hashOfConfig":"95"},{"size":4800,"mtime":1611120956132,"results":"110","hashOfConfig":"95"},{"size":1175,"mtime":1602865222029,"results":"111","hashOfConfig":"95"},{"size":147,"mtime":1593556793004,"results":"112","hashOfConfig":"95"},{"size":1344,"mtime":1602877711836,"results":"113","hashOfConfig":"95"},{"size":233,"mtime":1602789903456,"results":"114","hashOfConfig":"95"},{"size":1969,"mtime":1615494281716,"results":"115","hashOfConfig":"95"},{"size":127,"mtime":1593974826620,"results":"116","hashOfConfig":"95"},{"size":612,"mtime":1592377447513,"results":"117","hashOfConfig":"95"},{"size":1157,"mtime":1601837913797,"results":"118","hashOfConfig":"95"},{"size":571,"mtime":1593572563879,"results":"119","hashOfConfig":"95"},{"size":926,"mtime":1602808863863,"results":"120","hashOfConfig":"95"},{"size":4874,"mtime":1603483926351,"results":"121","hashOfConfig":"95"},{"size":783,"mtime":1602810229028,"results":"122","hashOfConfig":"95"},{"size":458,"mtime":1601863771513,"results":"123","hashOfConfig":"95"},{"size":732,"mtime":1595184137237,"results":"124","hashOfConfig":"95"},{"size":379,"mtime":1602877795271,"results":"125","hashOfConfig":"95"},{"size":415,"mtime":1607454499119,"results":"126","hashOfConfig":"95"},{"size":250,"mtime":1603484674376,"results":"127","hashOfConfig":"95"},{"size":1254,"mtime":1602645174293,"results":"128","hashOfConfig":"95"},{"size":1190,"mtime":1602868204847,"results":"129","hashOfConfig":"95"},{"size":5056,"mtime":1603733452701,"results":"130","hashOfConfig":"95"},{"size":689,"mtime":1603472245477,"results":"131","hashOfConfig":"95"},{"size":2140,"mtime":1603483942346,"results":"132","hashOfConfig":"95"},{"size":363,"mtime":1603472844063,"results":"133","hashOfConfig":"95"},{"size":874,"mtime":1615413292587,"results":"134","hashOfConfig":"95"},{"size":938,"mtime":1603485594542,"results":"135","hashOfConfig":"95"},{"size":1983,"mtime":1615506131732,"results":"136","hashOfConfig":"95"},{"size":1916,"mtime":1615507057092,"results":"137","hashOfConfig":"95"},{"size":2708,"mtime":1615505986931,"results":"138","hashOfConfig":"95"},{"size":517,"mtime":1603472887063,"results":"139","hashOfConfig":"95"},{"size":756,"mtime":1611017086282,"results":"140","hashOfConfig":"95"},{"size":834,"mtime":1603472690207,"results":"141","hashOfConfig":"95"},{"size":1790,"mtime":1615408290396,"results":"142","hashOfConfig":"95"},{"size":377,"mtime":1592377447523,"results":"143","hashOfConfig":"95"},{"size":1094,"mtime":1602646919611,"results":"144","hashOfConfig":"95"},{"size":586,"mtime":1602880184332,"results":"145","hashOfConfig":"95"},{"size":568,"mtime":1602808740499,"results":"146","hashOfConfig":"95"},{"size":407,"mtime":1601754420181,"results":"147","hashOfConfig":"95"},{"size":702,"mtime":1601863492265,"results":"148","hashOfConfig":"95"},{"size":1435,"mtime":1603472915930,"results":"149","hashOfConfig":"95"},{"size":1570,"mtime":1603483777857,"results":"150","hashOfConfig":"95"},{"size":537,"mtime":1602808661538,"results":"151","hashOfConfig":"95"},{"size":673,"mtime":1602867662177,"results":"152","hashOfConfig":"95"},{"size":1180,"mtime":1603483448936,"results":"153","hashOfConfig":"95"},{"size":482,"mtime":1594333756280,"results":"154","hashOfConfig":"95"},{"size":1441,"mtime":1594352233392,"results":"155","hashOfConfig":"95"},{"size":396,"mtime":1594352350447,"results":"156","hashOfConfig":"95"},{"size":759,"mtime":1603472819829,"results":"157","hashOfConfig":"95"},{"size":890,"mtime":1603472705191,"results":"158","hashOfConfig":"95"},{"size":876,"mtime":1603472829763,"results":"159","hashOfConfig":"95"},{"size":137,"mtime":1592377447501,"results":"160","hashOfConfig":"95"},{"size":494,"mtime":1602810184307,"results":"161","hashOfConfig":"95"},{"size":2165,"mtime":1603472584288,"results":"162","hashOfConfig":"95"},{"size":632,"mtime":1612730532429,"results":"163","hashOfConfig":"95"},{"size":639,"mtime":1601919680359,"results":"164","hashOfConfig":"95"},{"size":426,"mtime":1612737873061,"results":"165","hashOfConfig":"95"},{"size":476,"mtime":1612737742286,"results":"166","hashOfConfig":"95"},{"size":657,"mtime":1612739325396,"results":"167","hashOfConfig":"95"},{"size":388,"mtime":1612737733029,"results":"168","hashOfConfig":"95"},{"size":373,"mtime":1615310441066,"results":"169","hashOfConfig":"95"},{"size":378,"mtime":1612730299888,"results":"170","hashOfConfig":"95"},{"size":1223,"mtime":1603472807363,"results":"171","hashOfConfig":"95"},{"size":312,"mtime":1595035245571,"results":"172","hashOfConfig":"95"},{"size":281,"mtime":1595186593397,"results":"173","hashOfConfig":"95"},{"size":1990,"mtime":1615499100035,"results":"174","hashOfConfig":"95"},{"size":562,"mtime":1615304212906,"results":"175","hashOfConfig":"95"},{"size":149,"mtime":1611017112692,"results":"176","hashOfConfig":"95"},{"size":686,"mtime":1611099136203,"results":"177","hashOfConfig":"95"},{"size":2042,"mtime":1615493255161,"results":"178","hashOfConfig":"95"},{"size":648,"mtime":1615505994851,"results":"179","hashOfConfig":"95"},{"size":1349,"mtime":1615506256421,"results":"180","hashOfConfig":"95"},{"size":471,"mtime":1615422081480,"results":"181","hashOfConfig":"95"},{"size":1847,"mtime":1615483623394,"results":"182","hashOfConfig":"95"},{"size":1078,"mtime":1615494614283,"results":"183","hashOfConfig":"95"},{"size":689,"mtime":1615406830315,"results":"184","hashOfConfig":"95"},{"size":1292,"mtime":1615523904992,"results":"185","hashOfConfig":"95"},{"size":646,"mtime":1615502939454,"results":"186","hashOfConfig":"95"},{"size":224,"mtime":1615502392066,"results":"187","hashOfConfig":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"ui7e8e",{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"190"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"190"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"190"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"190"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"190"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"190"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"190"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"190"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"190"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"190"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"190"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"190"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"190"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"190"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"190"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"190"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"190"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"190"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"190"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"190"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"190"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"190"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"370"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"190"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"190"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"190"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"190"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/index.js",[],["403","404"],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/serviceWorkerRegistration.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/reportWebVitals.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Layout/App.js",["405"],"import React from 'react';\nimport { BrowserRouter, Route, Switch, withRouter } from 'react-router-dom';\nimport AuthProvider from '../Auth/AuthProvider';\nimport Header from './Header';\nimport Landing from './Landing';\nimport Login from 'components/Auth/Login';\nimport Account from '../User/Account';\nimport SecuredRoute from '../../utils/SecuredRoute';\nimport UserSettings from '../User/Settings/UserSettings';\nimport CreateProfile from '../Profile/CreateProfile';\nimport DisplayProfile from '../Profile/DisplayProfile';\nimport CreateGig from '../Gig/CreateGig';\nimport GigPage from '../Gig/GigPage';\nimport GigPageSecure from '../Gig/GigPageSecure';\nimport ProfilesPage from '../Profile/ProfilesPage';\nimport ProfilePage from '../Profile/ProfilePage';\nimport AboutGigety from '../About/AboutGigety';\nimport DisplayGig from '../Gig/DisplayGig';\nimport ProfilePageSecure from '../Profile/ProfilePageSecure';\nimport StompClientContext from '../../contexts/StompClientContext';\nimport MessengerPage from 'components/Messenger/MessengerPage/MessengerPage';\nconst app = () => {\n\treturn (\n\t\t<div className=\"ui container\">\n\t\t\t<AuthProvider>\n\t\t\t\t<StompClientContext>\n\t\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={Landing} />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t\t\t\t<Route exact path=\"/profiles\" component={ProfilesPage} />\n\t\t\t\t\t\t\t<Route exact path=\"/guest/profile/detail/:id\" component={ProfilePage} />\n\t\t\t\t\t\t\t<Route exact path=\"/gigs\" component={GigPage} />\n\t\t\t\t\t\t\t<Route exact path=\"/guest/gig/detail/:id\" component={DisplayGig} />\n\t\t\t\t\t\t\t<Route exact path=\"/about/gigety\" component={AboutGigety} />\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<SecuredRoute path=\"/user/account\" component={withRouter(Account)} />\n\t\t\t\t\t\t\t\t<SecuredRoute path=\"/user/settings/userSettings\" component={UserSettings} />\n\t\t\t\t\t\t\t\t<SecuredRoute path=\"/user/profile/create\" component={CreateProfile} />\n\t\t\t\t\t\t\t\t<SecuredRoute path=\"/user/profile/detail/:id\" component={ProfilePageSecure} />\n\t\t\t\t\t\t\t\t<SecuredRoute path=\"/user/gig/create\" component={CreateGig} />\n\t\t\t\t\t\t\t\t<SecuredRoute path=\"/user/gig/detail/:id\" component={GigPageSecure} />\n\t\t\t\t\t\t\t\t<SecuredRoute path=\"/user/gigs\" component={GigPageSecure} />\n\t\t\t\t\t\t\t\t<SecuredRoute path=\"/user/messenger/page\" component={MessengerPage} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</BrowserRouter>\n\t\t\t\t</StompClientContext>\n\t\t\t</AuthProvider>\n\t\t</div>\n\t);\n};\nexport default app;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Layout/Landing.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Layout/Header.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Auth/AuthProvider.js",["406"],"import React from 'react';\nimport { Provider } from 'react-redux';\nimport jwt_decode from 'jwt-decode';\nimport { SET_CURRENT_USR } from 'redux/actions/types';\nimport { setJwtTokenHeader, getUrlParameter } from 'utils/jwtUtil';\nimport { logout, loginAction } from 'redux/actions/auth';\nimport { store } from 'redux/store';\n\nconst jwtToken = localStorage.getItem('jwtToken');\nif (jwtToken) {\n\ttry {\n\t\tsetJwtTokenHeader(jwtToken);\n\t\tconst decodedToken = jwt_decode(jwtToken);\n\t\tstore.dispatch({\n\t\t\ttype: SET_CURRENT_USR,\n\t\t\tpayload: decodedToken,\n\t\t});\n\t\tconst now = Date.now() / 1000;\n\t\tif (decodedToken.exp < now) {\n\t\t\tstore.dispatch(logout());\n\t\t\twindow.location.href = '/';\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('ERROR decode / setting  JWT to local storage :: ');\n\t\tconsole.error(error);\n\t}\n} else {\n\tconst uri = window.location.search;\n\n\tconst token = getUrlParameter('gigatoke', uri);\n\n\tif (token) {\n\t\tstore.dispatch(loginAction(token));\n\t\twindow.location.href = '/';\n\t}\n\tconst error = getUrlParameter('error', uri);\n\tif (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nexport default ({ children }) => <Provider store={store}>{children}</Provider>;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/utils/SecuredRoute.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfilesPage.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/User/Account.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfilePageSecure.js",["407"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DisplayProfile from './DisplayProfile';\nimport { Button, MenuItem, Modal, Menu } from 'semantic-ui-react';\nimport { useGigUserProfile } from '../../redux/hooks/useGigUser';\nimport EditProfile from './EditProfile';\nimport useModal from '../../hooks/useModal';\nimport { useDispatch } from 'react-redux';\nimport { removeGigProfile } from '../../redux/actions/gigProfileAction';\nimport { useHistory } from 'react-router-dom';\nconst ProfilePageSecure = (props) => {\n\tconst { id } = props.match.params;\n\tconst profile = useGigUserProfile(id);\n\tconst [activePage, setActivePage] = useState('profile');\n\tconst dispatch = useDispatch();\n\tconst profilePage =\n\t\tactivePage === 'profile' ? <DisplayProfile profile={profile} /> : <EditProfile profile={profile} />;\n\tconst handleItemClick = (item) => setActivePage(item);\n\tconst [modalState, toggleModalState] = useModal();\n\tconst removeProfile = (id) => {\n\t\tdispatch(removeGigProfile(id, history));\n\t};\n\tconst history = useHistory();\n\treturn (\n\t\t<>\n\t\t\t<Menu tabular>\n\t\t\t\t<MenuItem\n\t\t\t\t\tname=\"Profile\"\n\t\t\t\t\tactive={activePage === 'profile'}\n\t\t\t\t\tonClick={() => handleItemClick('profile')}\n\t\t\t\t\ticon=\"user\"\n\t\t\t\t></MenuItem>\n\t\t\t\t<MenuItem\n\t\t\t\t\tname=\"Edit\"\n\t\t\t\t\tactive={activePage === 'edit'}\n\t\t\t\t\tonClick={() => handleItemClick('edit')}\n\t\t\t\t\ticon=\"edit\"\n\t\t\t\t></MenuItem>\n\t\t\t\t<MenuItem>\n\t\t\t\t\t<Button color=\"red\" onClick={toggleModalState}>\n\t\t\t\t\t\tRemove\n\t\t\t\t\t</Button>\n\t\t\t\t</MenuItem>\n\t\t\t</Menu>\n\t\t\t{profilePage}\n\t\t\t<Modal dimmer={'blurring'} open={modalState} onClose={null}>\n\t\t\t\t<Modal.Header>Remove Profile {profile ? profile.title : ''}</Modal.Header>\n\t\t\t\t<Modal.Content>\n\t\t\t\t\tThis will permamently remove this profile from your account. This action is irrecoverable. Consider\n\t\t\t\t\tdeactivating if you do not wish to lose this profile.\n\t\t\t\t</Modal.Content>\n\t\t\t\t<Modal.Actions>\n\t\t\t\t\t<Button negative onClick={toggleModalState}>\n\t\t\t\t\t\tKeep Profile\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tpositive\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\ttoggleModalState();\n\t\t\t\t\t\t\tremoveProfile(id);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tRemove Profile\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Actions>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nProfilePageSecure.propTypes = {};\n\nexport default ProfilePageSecure;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfilePage.js",["408","409"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport DisplayProfile from './DisplayProfile';\nimport { Button } from 'semantic-ui-react';\nimport { useGigUserProfile } from '../../redux/hooks/useGigUser';\n\nconst ProfilePage = (props) => {\n\tconst { id } = props.match.params;\n\tconst profile = useGigUserProfile(id);\n\treturn (\n\t\t<>\n\t\t\t<DisplayProfile profile={profile} />\n\t\t</>\n\t);\n};\n\nProfilePage.propTypes = {};\n\nexport default ProfilePage;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/CreateGig.js",["410"],"import React, { useState, useEffect } from 'react';\nimport { Container, Segment, Header, Icon, Button, Form, TextArea, Grid, Input, GridColumn } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport LocationMap from '../Maps/LocationMap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useHistory } from 'react-router-dom';\nimport { postGig } from '../../redux/actions/gigAction';\nimport LocationList from '../Profile/LocationList';\nconst CreateGig = () => {\n\tconst [includeLocation, setIncludeLocation] = useState(false);\n\tconst [gig, setGig] = useState({});\n\tconst [locations, setLocations] = useState([]);\n\tconst [markers, setMarkers] = useState([]);\n\tconst [circles, setCircles] = useState([]);\n\tconst reduxDispatch = useDispatch();\n\tconst history = useHistory();\n\tconst { giguser } = useSelector((state) => state.giguser);\n\n\tuseEffect(() => {\n\t\tsetGig((gig) => ({ ...gig, userImageUrl: giguser.imageUrl }));\n\t}, [giguser.imageUrl]);\n\n\tconst showMap = (includeLocation) => {\n\t\tsetIncludeLocation(!includeLocation);\n\t};\n\n\tconst onSubmit = (e, gig) => {\n\t\treduxDispatch(postGig(JSON.stringify(gig), history));\n\t};\n\n\tconst onAddLocation = (location, miles) => {\n\t\tif (location) {\n\t\t\tconst loc = {\n\t\t\t\tref_id: _.random(11, 12, true),\n\t\t\t\taddress: location.formatted_address,\n\t\t\t\tlocation: { lat: location.geometry.location.lat(), lng: location.geometry.location.lng() },\n\t\t\t\tradius: miles,\n\t\t\t};\n\t\t\tsetLocations([...locations, loc]);\n\t\t\tsetGig({\n\t\t\t\t...gig,\n\t\t\t\tgigLocations: [...locations, loc],\n\t\t\t});\n\t\t\treturn loc;\n\t\t}\n\t};\n\n\tconst onRemoveLocation = (locations, markers, circles) => (ref_id) => {\n\t\tconst locs = locations.filter((location) => {\n\t\t\treturn location.ref_id !== ref_id;\n\t\t});\n\t\tsetLocations(locs);\n\t\tsetGig({ ...gig, gigLocations: locs });\n\t\tmarkers.map((marker) => {\n\t\t\tif (marker.ref_id === ref_id) {\n\t\t\t\tmarker.setMap(null);\n\t\t\t}\n\t\t\treturn marker;\n\t\t});\n\t\tcircles.map((circle) => {\n\t\t\tif (circle.ref_id === ref_id) {\n\t\t\t\tcircle.setMap(null);\n\t\t\t}\n\t\t\treturn circle;\n\t\t});\n\t};\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Form encType=\"multipart/form-data\">\n\t\t\t\t<Segment>\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t\t<Header as=\"h2\">\n\t\t\t\t\t\t\t\t\t<Icon name=\"edit\" />\n\t\t\t\t\t\t\t\t\t<Header.Content>Create a Gig</Header.Content>\n\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t<Grid.Column width=\"10\">\n\t\t\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter title for your new profile...\"\n\t\t\t\t\t\t\t\t\t\t\tonBlur={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetGig({ ...gig, title: e.target.value });\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"A brief description of this profile...\"\n\t\t\t\t\t\t\t\t\t\t\tonBlur={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetGig({\n\t\t\t\t\t\t\t\t\t\t\t\t\t...gig,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdescription: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t<label>Locations</label>\n\t\t\t\t\t\t\t\t\t<LocationList\n\t\t\t\t\t\t\t\t\t\tlocations={locations}\n\t\t\t\t\t\t\t\t\t\tonRemove={onRemoveLocation(locations, markers, circles)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t<Grid.Column width=\"10\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\t\t\tcircular\n\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\tanimated=\"fade\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\tshowMap(includeLocation);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{includeLocation ? 'Close Map' : 'Add Location(s)'}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t<Grid.Column width=\"6\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\tonSubmit(e, gig);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t\t{includeLocation ? (\n\t\t\t\t\t\t\t\t\t<LocationMap\n\t\t\t\t\t\t\t\t\t\taddSearch\n\t\t\t\t\t\t\t\t\t\taddLocator\n\t\t\t\t\t\t\t\t\t\tonAddLocation={onAddLocation}\n\t\t\t\t\t\t\t\t\t\tmarkers={markers}\n\t\t\t\t\t\t\t\t\t\tsetMarkers={setMarkers}\n\t\t\t\t\t\t\t\t\t\tcircles={circles}\n\t\t\t\t\t\t\t\t\t\tsetCircles={setCircles}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Segment>\n\t\t\t</Form>\n\t\t</Container>\n\t);\n};\n\nexport default CreateGig;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/GigPage.js",["411"],"import React from 'react';\nimport { Container, Grid, GridColumn } from 'semantic-ui-react';\nimport SearchGigs from './Search/SearchGigs';\n\nconst GigPage = (props) => {\n\tconst onClickMyGigs = (e) => {};\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Grid celled>\n\t\t\t\t<Grid.Row>\n\t\t\t\t\t<GridColumn width=\"13\">\n\t\t\t\t\t\t<SearchGigs />\n\t\t\t\t\t</GridColumn>\n\t\t\t\t</Grid.Row>\n\t\t\t</Grid>\n\t\t</Container>\n\t);\n};\n\nGigPage.propTypes = {};\n\nexport default GigPage;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/DisplayProfile.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/CreateProfile.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/GigPageSecure.js",["412"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Container, Divider, Grid, GridColumn, GridRow } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport SearchGigs from './Search/SearchGigs';\n\nconst GigPage = (props) => {\n\tconst onClickMyGigs = (e) => {\n\t\tconsole.log('Search for gigs created by logged in user from mongo');\n\t};\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Grid celled>\n\t\t\t\t<Grid.Row>\n\t\t\t\t\t<GridColumn width=\"3\">\n\t\t\t\t\t\t<Button as={Link} to=\"/user/gig/create\" primary fluid>\n\t\t\t\t\t\t\tCreate a Gig\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Divider hidden />\n\t\t\t\t\t\t<GridRow>\n\t\t\t\t\t\t\t<GridColumn width=\"3\">\n\t\t\t\t\t\t\t\t<Button onClick={onClickMyGigs} primary fluid>\n\t\t\t\t\t\t\t\t\tGigs Created by me\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</GridColumn>\n\t\t\t\t\t\t</GridRow>\n\t\t\t\t\t\t<Divider hidden />\n\t\t\t\t\t\t<GridRow>\n\t\t\t\t\t\t\t<GridColumn width=\"3\">\n\t\t\t\t\t\t\t\t<Button onClick={onClickMyGigs} primary fluid>\n\t\t\t\t\t\t\t\t\tGigs I am assigned to\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</GridColumn>\n\t\t\t\t\t\t</GridRow>\n\t\t\t\t\t</GridColumn>\n\t\t\t\t\t<GridColumn width=\"13\">\n\t\t\t\t\t\t<SearchGigs />\n\t\t\t\t\t</GridColumn>\n\t\t\t\t</Grid.Row>\n\t\t\t</Grid>\n\t\t</Container>\n\t);\n};\n\nGigPage.propTypes = {};\n\nexport default GigPage;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/User/Settings/UserSettings.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/DisplayGig.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/About/AboutGigety.js",["413"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GigExplained = (props) => {\n\treturn <>About Gigety - Here we will explain the concept of Gigety</>;\n};\n\nGigExplained.propTypes = {};\n\nexport default GigExplained;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/contexts/StompClientContext.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Auth/Login.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Auth/LoginDropdown.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Auth/ProfileDropdown.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/User/UserCard.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/Search/SearchProfiles.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/EditProfile.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfileList.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfileCard.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/LocationList.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/GigCard.js",["414"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'semantic-ui-react';\n\nconst GigCard = ({ gig }) => {\n\treturn (\n\t\t<>\n\t\t\t<Card>\n\t\t\t\t<Card.Content>\n\t\t\t\t\t<Card.Header>{gig.title}</Card.Header>\n\t\t\t\t\t<Card.Description>{gig.description}</Card.Description>\n\t\t\t\t</Card.Content>\n\t\t\t</Card>\n\t\t</>\n\t);\n};\n\nGigCard.propTypes = {};\n\nexport default GigCard;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/User/UserLabel.js",["415","416"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Image, Card, CardHeader } from 'semantic-ui-react';\nfunction UserLabel({ email, userImageUrl }) {\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Content>\n\t\t\t\t<Label as=\"button\" image>\n\t\t\t\t\t<Image src={userImageUrl} size=\"medium\" rounded />\n\t\t\t\t\t{email}\n\t\t\t\t</Label>\n\t\t\t</Card.Content>\n\t\t</Card>\n\t);\n}\n\nUserLabel.propTypes = {};\n\nexport default UserLabel;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/hooks/useModal.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/ProfileMap.js",["417","418"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Circle, Marker } from '@react-google-maps/api';\nimport { useCurrentLocation } from '../../hooks/useCurrentLocation';\nimport BaseMap from './BaseMap';\nimport { METERS_PER_MILE } from '../../constants';\nfunction ProfileMap({ profileLocations }) {\n\tconst { currentLocation, error } = useCurrentLocation(null);\n\tconst zoomTo = profileLocations\n\t\t? { lat: profileLocations[0].location.lat, lng: profileLocations[0].location.lng }\n\t\t: currentLocation;\n\treturn (\n\t\t<BaseMap center={zoomTo}>\n\t\t\t{profileLocations\n\t\t\t\t? profileLocations.map((profileLocation) => {\n\t\t\t\t\t\tconst center = { lat: profileLocation.location.lat, lng: profileLocation.location.lng };\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Marker position={center} />\n\t\t\t\t\t\t\t\t<Circle\n\t\t\t\t\t\t\t\t\toptions={{ ...options, center, radius: METERS_PER_MILE * profileLocation.radius }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t  })\n\t\t\t\t: null}\n\t\t</BaseMap>\n\t);\n}\nconst options = {\n\tstrokeColor: '#FF0000',\n\tstrokeOpacity: 0.8,\n\tstrokeWeight: 2,\n\tfillColor: '#FF0000',\n\tfillOpacity: 0.35,\n};\nProfileMap.defaultProps = {\n\tprofileLocations: null,\n};\nProfileMap.propTypes = {\n\tprofileLocations: PropTypes.array,\n};\n\nexport default ProfileMap;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/GigMap.js",["419","420"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Circle, Marker } from '@react-google-maps/api';\nimport { useCurrentLocation } from '../../hooks/useCurrentLocation';\nimport BaseMap from './BaseMap';\nimport { METERS_PER_MILE } from '../../constants';\nfunction GigMap({ gigLocations }) {\n\tconst { currentLocation, error } = useCurrentLocation(null);\n\tconst zoomTo = gigLocations\n\t\t? { lat: gigLocations[0].location.lat, lng: gigLocations[0].location.lng }\n\t\t: currentLocation;\n\treturn (\n\t\t<BaseMap center={zoomTo}>\n\t\t\t{gigLocations\n\t\t\t\t? gigLocations.map((gigLocation) => {\n\t\t\t\t\t\tconst center = { lat: gigLocation.location.lat, lng: gigLocation.location.lng };\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Marker position={center} />\n\t\t\t\t\t\t\t\t<Circle\n\t\t\t\t\t\t\t\t\toptions={{ ...options, center, radius: METERS_PER_MILE * gigLocation.radius }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t  })\n\t\t\t\t: null}\n\t\t</BaseMap>\n\t);\n}\nconst options = {\n\tstrokeColor: '#FF0000',\n\tstrokeOpacity: 0.8,\n\tstrokeWeight: 2,\n\tfillColor: '#FF0000',\n\tfillOpacity: 0.35,\n};\nGigMap.defaultProps = {\n\tgigLocations: null,\n};\nGigMap.propTypes = {\n\tgigLocations: PropTypes.array,\n};\n\nexport default GigMap;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/LocationMap.js",["421"],"import React, { useRef, memo, useState, useCallback } from 'react';\nimport { GoogleMap, LoadScript, DrawingManager } from '@react-google-maps/api';\nimport PropTypes from 'prop-types';\nimport Locate from './Locate';\nimport mapStyles from '../Styles/mapStyles';\nimport '../Styles/MapHeaderStyle.css';\nimport Logo from '../Logos/Logo';\nimport { GOOGLE_GEOCODE_API_KEY, GOOGLE_MAP_LIBRARIES, METERS_PER_MILE } from '../../constants';\nimport { Segment, Loader, Dimmer } from 'semantic-ui-react';\nimport { useCurrentLocation } from '../../hooks/useCurrentLocation';\nimport AddressRadiusSelector from './AddressRadiusSelector';\n/**\n * Location Map - A Map with options for configuration an extra features\n * @param {children} components to include in the map such as markers or\n * controllers.\n * @param {addSearch} -boolean to include a search component or not\n * @param {addLocator} - boolean to include a locator\n * @param {logo} - A logo to include in top left corner of map\n * @param {options} - google map api options\n * @param {containerStyle} - style for maps container\n * @param {googleAPIKey} - google maps api key\n * @param {zoom} - zoom level\n */\nfunction LocationMap({\n\tchildren,\n\taddSearch,\n\taddLocator,\n\tlogo,\n\toptions,\n\tcontainerStyle,\n\tgoogleAPIKey,\n\tzoom,\n\tcustomComponents,\n\tonAddLocation,\n\tmarkers,\n\tsetMarkers,\n\tcircles,\n\tsetCircles,\n}) {\n\tconst mapRef = useRef();\n\n\tconst { location, error } = useCurrentLocation(null);\n\tconst [selectedLocation, setSelectedLocation] = useState(location);\n\n\tconst onSearchLocationSelected = useCallback(\n\t\t(location) => {\n\t\t\tsetSelectedLocation(location);\n\t\t},\n\t\t[location]\n\t);\n\tconst addMarker = (circles, markers) => (loc, miles, ref_id) => {\n\t\tconst coords = { lat: loc.geometry.location.lat(), lng: loc.geometry.location.lng() };\n\t\tconst marker = new window.google.maps.Marker({\n\t\t\tref_id,\n\t\t\tposition: coords,\n\t\t\tmap: mapRef.current,\n\t\t});\n\t\tconst infoWindow = new window.google.maps.InfoWindow({\n\t\t\tcontent: '<div><Input type=\"button\"/></div>',\n\t\t});\n\n\t\twindow.google.maps.event.addListener(marker, 'click', function () {\n\t\t\tinfoWindow.open(mapRef.current, marker);\n\t\t});\n\t\tconst milesRadius = new window.google.maps.Circle({\n\t\t\tref_id,\n\t\t\tstrokeColor: '#FF0000',\n\t\t\tstrokeOpacity: 0.8,\n\t\t\tstrokeWeight: 2,\n\t\t\tfillColor: '#FF0000',\n\t\t\tfillOpacity: 0.35,\n\t\t\tmap: mapRef.current,\n\t\t\tcenter: coords,\n\t\t\tradius: METERS_PER_MILE * miles,\n\t\t});\n\t\tsetCircles([...circles, milesRadius]);\n\t\tsetMarkers([...markers, marker]);\n\t\treturn marker;\n\t};\n\tconst onMapLoad = (map) => {\n\t\tmapRef.current = map;\n\t};\n\n\tconst panTo = ({ lat, lng }) => {\n\t\tmapRef.current.panTo({ lat, lng });\n\t};\n\tif (error) {\n\t\treturn <div>Error Finding Current Location: {error}</div>;\n\t}\n\treturn location ? (\n\t\t<Segment.Group>\n\t\t\t<LoadScript googleMapsApiKey={googleAPIKey} libraries={GOOGLE_MAP_LIBRARIES}>\n\t\t\t\t{addSearch || addLocator ? (\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{addSearch ? (\n\t\t\t\t\t\t\t\t<AddressRadiusSelector\n\t\t\t\t\t\t\t\t\tpanTo={panTo}\n\t\t\t\t\t\t\t\t\tlocation={location}\n\t\t\t\t\t\t\t\t\tonSearchLocationSelected={onSearchLocationSelected}\n\t\t\t\t\t\t\t\t\tonAddLocation={(location, miles) => {\n\t\t\t\t\t\t\t\t\t\tconst loc = onAddLocation(selectedLocation, miles);\n\t\t\t\t\t\t\t\t\t\tif (loc) {\n\t\t\t\t\t\t\t\t\t\t\taddMarker(circles, markers)(selectedLocation, miles, loc.ref_id);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{addLocator ? <Locate panTo={panTo} /> : ''}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Segment>\n\t\t\t\t) : (\n\t\t\t\t\t<div></div>\n\t\t\t\t)}\n\t\t\t\t<Segment>\n\t\t\t\t\t{logo}\n\n\t\t\t\t\t{customComponents.map((component) => component)}\n\n\t\t\t\t\t<GoogleMap\n\t\t\t\t\t\tclassName=\"MapHeadStyle\"\n\t\t\t\t\t\tmapContainerStyle={containerStyle}\n\t\t\t\t\t\tcenter={location}\n\t\t\t\t\t\tzoom={zoom}\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tonLoad={onMapLoad}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* Child components, such as markers, info windows, etc. */}\n\t\t\t\t\t\t<DrawingManager />\n\t\t\t\t\t</GoogleMap>\n\t\t\t\t</Segment>\n\t\t\t</LoadScript>\n\t\t</Segment.Group>\n\t) : (\n\t\t<div style={defaultContainerStyle}>\n\t\t\t<Dimmer active>\n\t\t\t\t<Loader size=\"large\" inline=\"centered\">\n\t\t\t\t\tLoading\n\t\t\t\t</Loader>\n\t\t\t</Dimmer>\n\t\t</div>\n\t);\n}\n\nconst defaultContainerStyle = {\n\tposition: 'relative',\n\twidth: '100%',\n\theight: '400px',\n};\nconst defaultOptions = {\n\tstyles: mapStyles,\n\tdisableDefaultUI: true, //disable the controls\n\tzoomControl: true, //ad only controls we wanbt\n};\nconst center = {\n\tlat: 28,\n\tlng: -81,\n};\n\nLocationMap.defaultProps = {\n\tzoom: 10,\n\toptions: defaultOptions,\n\tcenter: center,\n\tcontainerStyle: defaultContainerStyle,\n\tgoogleAPIKey: GOOGLE_GEOCODE_API_KEY,\n\tlogo: <></>,\n\tcustomComponents: [],\n\tcustomMarker: 'BasicMarker',\n\tinfoWindowContent: `\n\t\t<div>\n\t\t\t<div>Default InfoWindow</div>\n\t\t</div>\n\t`,\n\tlibraries: ['places', 'drawing'],\n};\n\nLocationMap.propTypes = {\n\taddSearch: PropTypes.bool,\n\taddLocator: PropTypes.bool,\n\tlogo: PropTypes.objectOf(Logo),\n\toptions: PropTypes.object,\n\tcontainerStyle: PropTypes.object,\n\tgoogleAPIKey: PropTypes.string,\n\tzoom: PropTypes.number,\n\tcenter: PropTypes.object,\n\tcustomComponents: PropTypes.any,\n\tcustomMarker: PropTypes.string,\n\tlibraries: PropTypes.array,\n};\nexport default memo(LocationMap);\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/Search/SearchGigs.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Images/FileDropzone.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/hooks/useGigGig.js",["422"],"import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getGigForGuest } from '../actions/guest/gigAction';\n\nexport const useGig = (id) => {\n\tconst content = useSelector((state) => state.gig);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(getGigForGuest(id));\n\t}, [dispatch]);\n\n\treturn content.gig;\n};\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/gigAction.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/hooks/useGigUser.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/gigProfileAction.js",["423"],"import {\n\tSET_PROFILE_CREATED_SUCCESS,\n\tSET_PROFILE_CREATED_ERROR,\n\tSET_PROFILE_CREATED_WAITING,\n\tGET_USER_PROFILE,\n\tREMOVE_PROFILE_SUCCESS,\n} from './types';\nimport gigety from 'apis/gigety';\n\nexport const postGigProfile = (userProfile, images, history) => async (dispatch) => {\n\tconst data = new FormData();\n\tdata.append('userProfile', userProfile);\n\tlet uri = '/profiles/createProfileNoImage';\n\n\tif (images.length > 0) {\n\t\tdata.append('file', images[0]);\n\t\turi = '/profiles/createProfile';\n\t}\n\n\ttry {\n\t\tconst postedProfile = await gigety.post(uri, data, {\n\t\t\theaders: { 'content-type': 'multipart/form-data' },\n\t\t});\n\t\t//TODO: Still needs to handle slow posts. I am thinking maybe have a spinner in a\n\t\t//newly allocated profileLable on account page\n\t\tdispatch({ type: SET_PROFILE_CREATED_WAITING, payload: false });\n\t\tdispatch({ type: SET_PROFILE_CREATED_SUCCESS, payload: postedProfile });\n\t} catch (error) {\n\t\tconsole.error('Error creating user profile : ', error);\n\t\t//TODO: THis needs to be handled on UI\n\t\tdispatch({ type: SET_PROFILE_CREATED_ERROR, payload: error });\n\t\tthrow error;\n\t}\n\tdispatch({ type: SET_PROFILE_CREATED_WAITING, payload: true });\n\thistory.push('/user/account');\n};\n\nexport const addProfileToProfileList = (userProfile) => (dispatch, getState) => {\n\tconst { profileList } = getState().userAccount;\n};\n\nexport const getUserProfile = (id) => async (dispatch, getState) => {\n\ttry {\n\t\tconst response = await gigety.get(`/pnode/profiles/${id}`);\n\t\tdispatch({ type: GET_USER_PROFILE, payload: response.data });\n\t} catch (error) {\n\t\tconsole.error(`Error getting user profile for id ${id}`, error);\n\t\tthrow error;\n\t}\n};\n\nexport const removeGigProfile = (id, history) => async (dispatch) => {\n\ttry {\n\t\tconst response = await gigety.delete(`/profiles/${id}`);\n\t\tdispatch({ type: REMOVE_PROFILE_SUCCESS, payload: response.data });\n\t\thistory.push('/user/account');\n\t} catch (error) {\n\t\tconsole.error(`Error  user profile for id ${id}`, error);\n\t\tthrow error;\n\t}\n};\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/messagesAction.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ChatModal/ChatModal.js",["424","425"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Popup from 'reactjs-popup';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { Button, Input, List } from 'semantic-ui-react';\nimport 'reactjs-popup/dist/index.css';\nimport UserLabel from '../../User/UserLabel';\nimport ProfileUserImage from '../../Profile/ProfileUserImage';\nimport './ChatModal.css';\nimport { StompClientContext } from 'contexts/StompClientContext';\nimport { use121ChatMessages, useMessenger } from 'redux/hooks/useMessages';\nimport { mapProfileToContact } from 'utils/objectMapper';\n\nconst ChatModal = ({ profile }) => {\n\tconst { giguser } = useSelector((state) => state.giguser);\n\tconst messages = use121ChatMessages(giguser.id, profile.userId);\n\tconst [text, setText] = useState('');\n\tconst { sendChatMessage } = useContext(StompClientContext);\n\tconst contact = mapProfileToContact(profile, giguser);\n\tuseMessenger(giguser, contact);\n\tconst sendTheMessage = (msg) => {\n\t\tif (msg.trim() !== '') {\n\t\t\tconst message = {\n\t\t\t\tsenderId: giguser.id,\n\t\t\t\trecipientId: profile.userId,\n\t\t\t\tsenderName: giguser.name,\n\t\t\t\trecipientName: profile.email,\n\t\t\t\tcontent: msg,\n\t\t\t\ttimestamp: new Date(),\n\t\t\t};\n\t\t\tsendChatMessage(message);\n\t\t}\n\t};\n\treturn (\n\t\t<Popup\n\t\t\ttrigger={\n\t\t\t\t<div>\n\t\t\t\t\t<UserLabel userImageUrl={profile.userImageUrl} email={profile.email} />\n\t\t\t\t</div>\n\t\t\t}\n\t\t\tmodal\n\t\t\tnested\n\t\t>\n\t\t\t{(close) => (\n\t\t\t\t<div className=\"modal\">\n\t\t\t\t\t<div className=\"header\">Send Direct Message to {profile.email} </div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<ScrollToBottom className=\"messages\">\n\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t{messages\n\t\t\t\t\t\t\t\t\t? messages.map((msg) => (\n\t\t\t\t\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<ProfileUserImage size=\"mini\" profile={profile} />\n\t\t\t\t\t\t\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<List.Header as=\"a\">{profile.profileName}</List.Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<List.Description>{msg.content}</List.Description>\n\t\t\t\t\t\t\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</ScrollToBottom>\n\n\t\t\t\t\t\t<Input placeholder=\"Enter Message\" action fluid>\n\t\t\t\t\t\t\t<input value={text} onChange={(e) => setText(e.target.value)} />\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsendTheMessage(text);\n\t\t\t\t\t\t\t\t\tsetText('');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSend Message\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Input>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"actions\">\n\t\t\t\t\t\t<Button className=\"button\"> Go to Messages </Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tconsole.log('modal closed ');\n\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Popup>\n\t);\n};\n\nexport default ChatModal;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/utils/jwtUtil.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/constants/index.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/auth.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/types.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/store.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/ProfilesMap.js",["426","427"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseMap from './BaseMap';\nimport { Circle, Marker } from '@react-google-maps/api';\nimport { METERS_PER_MILE } from '../../constants';\nimport _ from 'lodash';\nconst ProfilesMap = ({ profiles }) => {\n\treturn (\n\t\t<BaseMap>\n\t\t\t{profiles\n\t\t\t\t? profiles.map((profile) => {\n\t\t\t\t\t\treturn profile.profileLocations\n\t\t\t\t\t\t\t? profile.profileLocations.map((profileLocation) => {\n\t\t\t\t\t\t\t\t\tconst center = {\n\t\t\t\t\t\t\t\t\t\tlat: profileLocation.location.lat,\n\t\t\t\t\t\t\t\t\t\tlng: profileLocation.location.lng,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<Marker position={center} />\n\t\t\t\t\t\t\t\t\t\t\t<Circle\n\t\t\t\t\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcenter,\n\t\t\t\t\t\t\t\t\t\t\t\t\tradius: METERS_PER_MILE * profileLocation.radius,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t: null;\n\t\t\t\t  })\n\t\t\t\t: null}\n\t\t</BaseMap>\n\t);\n};\nconst options = {\n\tstrokeColor: '#FF0000',\n\tstrokeOpacity: 0.8,\n\tstrokeWeight: 2,\n\tfillColor: '#FF0000',\n\tfillOpacity: 0.35,\n};\nProfilesMap.propTypes = {};\n\nexport default ProfilesMap;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfileLabel.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/Search/SearchProfilesInput.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/User/UserImage.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfileImage.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/hooks/useCurrentLocation.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/BaseMap.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/Search/SearchGigsInput.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/GigList.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/AddressRadiusSelector.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/Locate.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Styles/mapStyles.js",["428"],"/**\n * https://snazzymaps.com/style/287690/architect\n * */\nexport default [\n\t{\n\t\tfeatureType: 'administrative.country',\n\t\telementType: 'labels',\n\t\tstylers: [\n\t\t\t{\n\t\t\t\tvisibility: 'off',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tfeatureType: 'landscape',\n\t\telementType: 'geometry.fill',\n\t\tstylers: [\n\t\t\t{\n\t\t\t\tcolor: '#b5ab94',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tfeatureType: 'poi',\n\t\telementType: 'all',\n\t\tstylers: [\n\t\t\t{\n\t\t\t\tvisibility: 'on',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tfeatureType: 'poi.attraction',\n\t\telementType: 'all',\n\t\tstylers: [\n\t\t\t{\n\t\t\t\tvisibility: 'on',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tfeatureType: 'poi.business',\n\t\telementType: 'all',\n\t\tstylers: [\n\t\t\t{\n\t\t\t\tvisibility: 'on',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tfeatureType: 'poi.government',\n\t\telementType: 'all',\n\t\tstylers: [\n\t\t\t{\n\t\t\t\tvisibility: 'on',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tfeatureType: 'poi.school',\n\t\telementType: 'all',\n\t\tstylers: [\n\t\t\t{\n\t\t\t\tvisibility: 'on',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tfeatureType: 'road',\n\t\telementType: 'all',\n\t\tstylers: [\n\t\t\t{\n\t\t\t\tvisibility: 'on',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tfeatureType: 'road.highway',\n\t\telementType: 'all',\n\t\tstylers: [\n\t\t\t{\n\t\t\t\tvisibility: 'on',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tfeatureType: 'road.local',\n\t\telementType: 'all',\n\t\tstylers: [\n\t\t\t{\n\t\t\t\tvisibility: 'on',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tfeatureType: 'transit.line',\n\t\telementType: 'all',\n\t\tstylers: [\n\t\t\t{\n\t\t\t\tvisibility: 'on',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tfeatureType: 'water',\n\t\telementType: 'all',\n\t\tstylers: [\n\t\t\t{\n\t\t\t\tcolor: '#b0e4f7',\n\t\t\t},\n\t\t\t{\n\t\t\t\tvisibility: 'on',\n\t\t\t},\n\t\t],\n\t},\n];\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Logos/Logo.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/guest/gigAction.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/gigUserAction.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/guest/gigProfileAction.js",["429"],"import { GET_USER_PROFILE, FOUND_PROFILE_SEARCH_RESULTS } from '../types';\nimport gigety from 'apis/gigety';\n\nexport const addProfileToProfileList = (userProfile) => (dispatch, getState) => {\n\tconst { profileList } = getState().userAccount;\n};\n\nexport const getUserProfileForGuest = (id) => async (dispatch, getState) => {\n\ttry {\n\t\tconst response = await gigety.get(`/pnode/profiles/${id}`);\n\t\tdispatch({ type: GET_USER_PROFILE, payload: response.data });\n\t} catch (error) {\n\t\tthrow error;\n\t}\n};\n\nexport const searchAllProfiles = (searchTerm) => async (dispatch) => {\n\ttry {\n\t\t//TODO: Pagination currently hardcoded, should be handled correct instead\n\t\tconst response = await gigety.post(`/pnode/profiles/100/0`, {\n\t\t\tsearchTerm,\n\t\t});\n\t\tdispatch({ type: FOUND_PROFILE_SEARCH_RESULTS, payload: response.data });\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\tthrow error;\n\t}\n};\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/apis/gigety.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Gig/GigLabel.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Maps/Search/PlaceAutoComplete.js",["430"],"import React, { useEffect } from 'react';\nimport { Search } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport PropTypes from 'prop-types';\nimport '../../Styles/MapHeaderStyle.css';\nimport { useCurrentAddress } from '../../../redux/hooks/useCurrentAddress';\n\nfunction PlaceAutoComplete({ panTo, location, onSearchLocationSelected }) {\n\tconst currentAddress = useCurrentAddress();\n\tuseEffect(() => {\n\t\tif (currentAddress) {\n\t\t\tonSearchLocationSelected(currentAddress);\n\t\t}\n\t}, [onSearchLocationSelected, currentAddress]);\n\tconst {\n\t\tready,\n\t\tvalue,\n\t\tsuggestions: { status, data },\n\t\tsetValue,\n\t\tclearSuggestions,\n\t} = usePlacesAutocomplete({\n\t\trequestOptions: {\n\t\t\tlocation: { lat: () => location.lat, lng: () => location.lng },\n\t\t\tradius: 200,\n\t\t},\n\t});\n\tdata.map((d) => {\n\t\t//adding required title property for search and key for list to avoid\n\t\t//console error logs\n\t\t//TODO: use a better suited id. using random defeats ther purpose\n\t\td.key = _.random(98, 99, true);\n\t\td.title = d.description;\n\t\treturn d;\n\t});\n\treturn ready && data ? (\n\t\t<Search\n\t\t\tclassName=\"input segment-ctl\"\n\t\t\tonResultSelect={async (e, { result }) => {\n\t\t\t\tconst { description } = result;\n\t\t\t\tconst address = description;\n\t\t\t\tsetValue(address, false);\n\t\t\t\tclearSuggestions();\n\t\t\t\ttry {\n\t\t\t\t\tconst results = await getGeocode({ address });\n\t\t\t\t\tconst { lat, lng } = await getLatLng(results[0]);\n\t\t\t\t\tpanTo({ lat, lng });\n\t\t\t\t\tonSearchLocationSelected(results[0]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('error searching places for autocomplete: ', error);\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonSearchChange={(e) => {\n\t\t\t\tsetValue(e.target.value);\n\t\t\t}}\n\t\t\tresults={data ? data : {}}\n\t\t\tvalue={value}\n\t\t\tplaceholder={currentAddress ? currentAddress.formatted_address : 'Search a location ...'}\n\t\t/>\n\t) : (\n\t\t<div></div>\n\t);\n}\nPlaceAutoComplete.propTypes = {\n\tlocation: PropTypes.shape({\n\t\tlat: PropTypes.number.isRequired,\n\t\tlng: PropTypes.number.isRequired,\n\t}),\n\tpanTo: PropTypes.func,\n};\nPlaceAutoComplete.defaultProps = {\n\tlocation: {\n\t\tlat: 47.60621,\n\t\tlng: -122.33207,\n\t},\n};\nexport default PlaceAutoComplete;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/index.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/hooks/useCurrentAddress.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/locationReducer.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/gigReducer.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/gigProfileReducer.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/gigUserAccountReducer.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/gigUserReducer.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/authenticationReducer.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/locationAction.js",["431"],"import { GET_CURRENT_ADDRESS } from './types';\nimport { ProfileLocation } from '../../models/ProfileLocation';\n\nexport const getCurrentAddress = () => async (dispatch) => {\n\tconst location = await getCurrentPosition();\n\tconst { latitude, longitude } = location.coords;\n\ttry {\n\t\tconst geocoder = new window.google.maps.Geocoder();\n\t\tgeocoder.geocode({ location: { lat: latitude, lng: longitude } }, (results, status) => {\n\t\t\tconst address = results[0];\n\t\t\tif (address) {\n\t\t\t\t//const { formatted_address } = address;\n\t\t\t\t//TODO: revisit and maybe finish what you started with profileLocation\n\t\t\t\tconst profileLocation = new ProfileLocation({\n\t\t\t\t\taddress: address.formatted_address,\n\t\t\t\t\tlocation: { lat: address.geometry.location.lat(), lng: address.geometry.location.lng() },\n\t\t\t\t});\n\t\t\t\tlocalStorage.setItem('currentAddress', address);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: GET_CURRENT_ADDRESS,\n\t\t\t\t\tpayload: address,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\tthrow error;\n\t}\n};\nexport const getCurrentLocation = () => async (dispatch) => {};\n\nconst getCurrentPosition = (options = {}) => {\n\treturn new Promise((resolve, reject) => {\n\t\tnavigator.geolocation.getCurrentPosition(resolve, reject, options);\n\t});\n};\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/models/ProfileLocation.js",["432"],"import { Model, List } from './base';\n/* @flow */\nexport class ProfileLocation extends Model {\n\tgetDefaults() {\n\t\treturn {\n\t\t\tlocation: {\n\t\t\t\tlat: 0,\n\t\t\t\tlng: 0,\n\t\t\t},\n\t\t\taddress: '',\n\t\t\tradius: 0,\n\t\t};\n\t}\n}\nexport class ProfileLocationList extends List {\n\tgetProfileLocations() {\n\t\treturn ProfileLocation;\n\t}\n}\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/models/base.js",["433"],"import defaultsDeep from 'lodash/defaultsDeep';\n\n/* @flow */\n\nexport class Model {\n\tconstructor(attributes = {}) {\n\t\tdefaultsDeep(this, attributes, this.defaults);\n\t}\n}\n\nexport class List {\n\tconstructor(items = []) {\n\t\tthis.models = items.map((item) => new this.model(item));\n\t}\n}\n",["434","435"],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/hooks/useMessages.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/messegesReducer.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/apis/gigetyMessenger.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Profile/ProfileUserImage.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/MessengerPage/MessengerPage.js",["436","437","438","439","440","441","442","443"],"import React, { useState, useContext, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useGigUser } from 'redux/hooks/useGigUser';\nimport { useAllNewUserMessages } from 'redux/hooks/useMessages';\nimport { Container, Divider, Grid, GridColumn } from 'semantic-ui-react';\nimport ChatMessenger from '../ChatMessenger/ChatMessenger';\nimport ContactList from '../ContactList/ContactList';\nimport MessageInput from '../MessageInput/MessageInput';\nimport NotificationsScrollable from '../NotificationsScrollable/NotificationsScrollable';\nimport { StompClientContext } from 'contexts/StompClientContext';\nimport { useActiveContact, useContacts } from 'redux/hooks/useContacts';\nconst MessengerPage = () => {\n\t//const { giguser } = useSelector((state) => state.giguser);\n\tconst giguser = useGigUser();\n\tconsole.log(giguser);\n\n\tconst contacts = useContacts(giguser.id);\n\tconst activeContact = useActiveContact();\n\tconst { stompClient, sendChatMessage } = useContext(StompClientContext);\n\n\tconst sendTheMessage = (msg) => {\n\t\tif (msg.trim() !== '') {\n\t\t\tconst message = {\n\t\t\t\tsenderId: giguser.id,\n\t\t\t\trecipientId: activeContact.userId,\n\t\t\t\tsenderName: giguser.name,\n\t\t\t\trecipientName: activeContact.userName,\n\t\t\t\tcontent: msg,\n\t\t\t\ttimestamp: new Date(),\n\t\t\t};\n\t\t\tconsole.log('sending msg: ', msg);\n\t\t\tsendChatMessage(message);\n\t\t\tconsole.log('msg sent', message);\n\t\t}\n\t};\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Grid celled>\n\t\t\t\t<Grid.Row>\n\t\t\t\t\t<GridColumn width={4}>\n\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t<NotificationsScrollable giguser={giguser} />\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t<ContactList contacts={contacts}></ContactList>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t</GridColumn>\n\t\t\t\t\t<GridColumn width={6}>\n\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t<ChatMessenger activeContact={activeContact}></ChatMessenger>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t<Grid.Row></Grid.Row>\n\t\t\t\t\t</GridColumn>\n\t\t\t\t</Grid.Row>\n\t\t\t\t<Grid.Row>\n\t\t\t\t\t<Grid.Column width={4}></Grid.Column>\n\t\t\t\t</Grid.Row>\n\t\t\t</Grid>\n\t\t</Container>\n\t);\n};\n\nexport default MessengerPage;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ContactList/ContactList.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ChatMessenger/ChatMessenger.js",["444"],"import React, { useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { use121ChatMessages, useMessenger } from 'redux/hooks/useMessages';\nimport { List } from 'semantic-ui-react';\nimport ContactAvatar from '../ContactAvatar/ContactAvatar';\nimport MessageInput from '../MessageInput/MessageInput';\nconst ChatMessenger = ({ activeContact }) => {\n\tconst { giguser } = useSelector((state) => state.giguser);\n\tactiveContact = activeContact ? activeContact : {};\n\tconst messages = use121ChatMessages(giguser.id, activeContact.contactId);\n\tuseMessenger(giguser, activeContact);\n\n\treturn (\n\t\t<>\n\t\t\t<ScrollToBottom className=\"messages\">\n\t\t\t\t<List>\n\t\t\t\t\t{messages\n\t\t\t\t\t\t? messages.map((msg) => (\n\t\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t\t<ContactAvatar size=\"med\" contact={activeContact} />\n\t\t\t\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t\t\t\t<List.Description>{msg.content}</List.Description>\n\t\t\t\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t  ))\n\t\t\t\t\t\t: ''}\n\t\t\t\t</List>\n\t\t\t</ScrollToBottom>\n\t\t\t<MessageInput activeContact={activeContact} giguser={giguser}></MessageInput>\n\t\t</>\n\t);\n};\n\nChatMessenger.propTypes = {\n\tactiveContact: {\n\t\tcontactId: PropTypes.string,\n\t},\n};\nChatMessenger.defaultProps = {\n\tactiveContact: { contactId: '0' },\n};\nexport default ChatMessenger;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/reducers/contactsReducer.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/NotificationsScrollable/NotificationsScrollable.js",["445"],"import React from 'react';\nimport { useGigUser } from 'redux/hooks/useGigUser';\nimport _ from 'lodash';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { List, ListItem } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { findMessagesFor121Chat } from 'redux/actions/messagesAction';\nimport { updateActiveContact } from 'redux/actions/contactsAction';\nimport { useAllNewUserMessages } from 'redux/hooks/useMessages';\nconst NotificationsScrollable = ({ giguser }) => {\n\tconst allNewUserMessages = useAllNewUserMessages(giguser.id);\n\t//const messages = useAllNewUserMessages(giguser.id);\n\tconsole.log('ALL Messages ', allNewUserMessages);\n\tconst messageNotifications = _.uniqBy(allNewUserMessages, (message) => 'senderName');\n\tconsole.log(' Message Notifications ', messageNotifications);\n\tconst dispatch = useDispatch();\n\tconst getConversationMessages = ({ senderName, senderId }, event) => {\n\t\tevent.preventDefault();\n\t\t//TODO: refactor Message to have a contact rather than senderId, senderName\n\n\t\tdispatch(findMessagesFor121Chat(giguser.id, senderId));\n\t\tconst contact = { userId: giguser.id.toString(), contactId: senderId, contactName: senderName };\n\t\tdispatch(updateActiveContact(JSON.stringify(contact)));\n\t};\n\treturn (\n\t\t<>\n\t\t\t<ScrollToBottom>\n\t\t\t\t<List>\n\t\t\t\t\t{messageNotifications\n\t\t\t\t\t\t? messageNotifications.map((message) => (\n\t\t\t\t\t\t\t\t<Link>\n\t\t\t\t\t\t\t\t\t<ListItem as={Link} to={'/'} onClick={(e) => getConversationMessages(message, e)}>\n\t\t\t\t\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t\t\t\t\t<List.Header>{message.senderName}</List.Header>\n\t\t\t\t\t\t\t\t\t\t\t<List.Description>{message.content}</List.Description>\n\t\t\t\t\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t  ))\n\t\t\t\t\t\t: ''}\n\t\t\t\t</List>\n\t\t\t</ScrollToBottom>\n\t\t</>\n\t);\n};\n\nexport default NotificationsScrollable;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/MessageInput/MessageInput.js",["446"],"import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Input } from 'semantic-ui-react';\nimport { StompClientContext } from 'contexts/StompClientContext';\n\nconst MessageInput = ({ activeContact, giguser }) => {\n\tconst [text, setText] = useState('');\n\tconst { sendChatMessage } = useContext(StompClientContext);\n\tconst sendTheMessage = (msg) => {\n\t\tif (msg.trim() !== '') {\n\t\t\tconst message = {\n\t\t\t\tsenderId: giguser.id,\n\t\t\t\trecipientId: activeContact.contactId,\n\t\t\t\tsenderName: giguser.name,\n\t\t\t\trecipientName: activeContact.contactName,\n\t\t\t\tcontent: msg,\n\t\t\t\ttimestamp: new Date(),\n\t\t\t};\n\t\t\tconsole.log('sending msg: ', msg);\n\t\t\tsendChatMessage(message);\n\t\t\tconsole.log('msg sent', message);\n\t\t}\n\t};\n\treturn (\n\t\t<Input placeholder=\"Enter Message\" action fluid>\n\t\t\t<input value={text} onChange={(e) => setText(e.target.value)} />\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsendTheMessage(text);\n\t\t\t\t\tsetText('');\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tSend Message\n\t\t\t</Button>\n\t\t</Input>\n\t);\n};\n\nMessageInput.propTypes = {};\n\nexport default MessageInput;\n","/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/hooks/useContacts.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/redux/actions/contactsAction.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/components/Messenger/ContactAvatar/ContactAvatar.js",[],"/Users/samuelsegal/git/gigety/gigety-reactjs/react-gigety/src/utils/objectMapper.js",[],{"ruleId":"447","replacedBy":"448"},{"ruleId":"449","replacedBy":"450"},{"ruleId":"451","severity":1,"message":"452","line":11,"column":8,"nodeType":"453","messageId":"454","endLine":11,"endColumn":22},{"ruleId":"455","severity":1,"message":"456","line":42,"column":1,"nodeType":"457","endLine":42,"endColumn":80},{"ruleId":"451","severity":1,"message":"458","line":2,"column":8,"nodeType":"453","messageId":"454","endLine":2,"endColumn":17},{"ruleId":"451","severity":1,"message":"458","line":2,"column":8,"nodeType":"453","messageId":"454","endLine":2,"endColumn":17},{"ruleId":"451","severity":1,"message":"459","line":4,"column":10,"nodeType":"453","messageId":"454","endLine":4,"endColumn":16},{"ruleId":"451","severity":1,"message":"460","line":2,"column":81,"nodeType":"453","messageId":"454","endLine":2,"endColumn":91},{"ruleId":"451","severity":1,"message":"461","line":6,"column":8,"nodeType":"453","messageId":"454","endLine":6,"endColumn":21},{"ruleId":"451","severity":1,"message":"458","line":2,"column":8,"nodeType":"453","messageId":"454","endLine":2,"endColumn":17},{"ruleId":"451","severity":1,"message":"458","line":2,"column":8,"nodeType":"453","messageId":"454","endLine":2,"endColumn":17},{"ruleId":"451","severity":1,"message":"458","line":2,"column":8,"nodeType":"453","messageId":"454","endLine":2,"endColumn":17},{"ruleId":"451","severity":1,"message":"458","line":2,"column":8,"nodeType":"453","messageId":"454","endLine":2,"endColumn":17},{"ruleId":"451","severity":1,"message":"462","line":3,"column":30,"nodeType":"453","messageId":"454","endLine":3,"endColumn":40},{"ruleId":"451","severity":1,"message":"463","line":1,"column":17,"nodeType":"453","messageId":"454","endLine":1,"endColumn":26},{"ruleId":"451","severity":1,"message":"464","line":8,"column":27,"nodeType":"453","messageId":"454","endLine":8,"endColumn":32},{"ruleId":"451","severity":1,"message":"463","line":1,"column":17,"nodeType":"453","messageId":"454","endLine":1,"endColumn":26},{"ruleId":"451","severity":1,"message":"464","line":8,"column":27,"nodeType":"453","messageId":"454","endLine":8,"endColumn":32},{"ruleId":"465","severity":1,"message":"466","line":49,"column":3,"nodeType":"467","endLine":49,"endColumn":13,"suggestions":"468"},{"ruleId":"465","severity":1,"message":"469","line":10,"column":5,"nodeType":"467","endLine":10,"endColumn":15,"suggestions":"470"},{"ruleId":"451","severity":1,"message":"471","line":39,"column":10,"nodeType":"453","messageId":"454","endLine":39,"endColumn":21},{"ruleId":"451","severity":1,"message":"463","line":1,"column":29,"nodeType":"453","messageId":"454","endLine":1,"endColumn":38},{"ruleId":"451","severity":1,"message":"472","line":2,"column":10,"nodeType":"453","messageId":"454","endLine":2,"endColumn":21},{"ruleId":"451","severity":1,"message":"458","line":2,"column":8,"nodeType":"453","messageId":"454","endLine":2,"endColumn":17},{"ruleId":"451","severity":1,"message":"473","line":6,"column":8,"nodeType":"453","messageId":"454","endLine":6,"endColumn":9},{"ruleId":"455","severity":1,"message":"474","line":4,"column":1,"nodeType":"457","endLine":116,"endColumn":3},{"ruleId":"451","severity":1,"message":"471","line":5,"column":10,"nodeType":"453","messageId":"454","endLine":5,"endColumn":21},{"ruleId":"451","severity":1,"message":"475","line":19,"column":18,"nodeType":"453","messageId":"454","endLine":19,"endColumn":24},{"ruleId":"451","severity":1,"message":"476","line":14,"column":11,"nodeType":"453","messageId":"454","endLine":14,"endColumn":26},{"ruleId":"477","severity":1,"message":"478","line":2,"column":1,"nodeType":"479","endLine":2,"endColumn":12},{"ruleId":"477","severity":1,"message":"478","line":3,"column":1,"nodeType":"479","endLine":3,"endColumn":12},{"ruleId":"447","replacedBy":"480"},{"ruleId":"449","replacedBy":"481"},{"ruleId":"451","severity":1,"message":"482","line":1,"column":17,"nodeType":"453","messageId":"454","endLine":1,"endColumn":25},{"ruleId":"451","severity":1,"message":"463","line":1,"column":39,"nodeType":"453","messageId":"454","endLine":1,"endColumn":48},{"ruleId":"451","severity":1,"message":"472","line":2,"column":10,"nodeType":"453","messageId":"454","endLine":2,"endColumn":21},{"ruleId":"451","severity":1,"message":"483","line":2,"column":23,"nodeType":"453","messageId":"454","endLine":2,"endColumn":34},{"ruleId":"451","severity":1,"message":"484","line":4,"column":10,"nodeType":"453","messageId":"454","endLine":4,"endColumn":31},{"ruleId":"451","severity":1,"message":"485","line":8,"column":8,"nodeType":"453","messageId":"454","endLine":8,"endColumn":20},{"ruleId":"451","severity":1,"message":"486","line":19,"column":10,"nodeType":"453","messageId":"454","endLine":19,"endColumn":21},{"ruleId":"451","severity":1,"message":"487","line":21,"column":8,"nodeType":"453","messageId":"454","endLine":21,"endColumn":22},{"ruleId":"451","severity":1,"message":"482","line":1,"column":17,"nodeType":"453","messageId":"454","endLine":1,"endColumn":25},{"ruleId":"451","severity":1,"message":"488","line":2,"column":10,"nodeType":"453","messageId":"454","endLine":2,"endColumn":20},{"ruleId":"451","severity":1,"message":"458","line":2,"column":8,"nodeType":"453","messageId":"454","endLine":2,"endColumn":17},"no-native-reassign",["489"],"no-negated-in-lhs",["490"],"no-unused-vars","'DisplayProfile' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'PropTypes' is defined but never used.","'Button' is defined but never used.","'GridColumn' is defined but never used.","'onClickMyGigs' is assigned a value but never used.","'CardHeader' is defined but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'location'. Either exclude it or remove the dependency array.","ArrayExpression",["491"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["492"],"'profileList' is assigned a value but never used.","'useDispatch' is defined but never used.","'_' is defined but never used.","Assign array to a variable before exporting as module default","'status' is assigned a value but never used.","'profileLocation' is assigned a value but never used.","flowtype/require-valid-file-annotation","Flow file annotation not at the top of the file.","Block",["489"],["490"],"'useState' is defined but never used.","'useSelector' is defined but never used.","'useAllNewUserMessages' is defined but never used.","'MessageInput' is defined but never used.","'stompClient' is assigned a value but never used.","'sendTheMessage' is assigned a value but never used.","'useGigUser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},"Update the dependencies array to be: []",{"range":"497","text":"498"},"Update the dependencies array to be: [dispatch, id]",{"range":"499","text":"500"},[1611,1621],"[]",[325,335],"[dispatch, id]"]