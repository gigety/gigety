networks:
  gigety:
    attachable: true
    driver: overlay
    external: true
    name: gigety
  gigety-ur-mysql:
    attachable: true
    driver: overlay
  gigety-web-api-mysql:
    attachable: true
    driver: overlay
secrets:
  DEV_GIGETY_PW:
    file: /Users/samuelsegal/git/gigety/secrets/DEV_GIGETY_PW.txt
  DEV_GIGETY_USR:
    file: /Users/samuelsegal/git/gigety/secrets/DEV_GIGETY_USR.txt
  SPRING_OAUTH_FACEBOOK_APP_ID:
    file: /Users/samuelsegal/git/gigety/secrets/SPRING_OAUTH_FACEBOOK_APP_ID.txt
  SPRING_OAUTH_FACEBOOK_APP_SECRET:
    file: /Users/samuelsegal/git/gigety/secrets/SPRING_OAUTH_FACEBOOK_APP_SECRET.txt
  SPRING_OAUTH_GOOGLE_CLIENT_ID:
    file: /Users/samuelsegal/git/gigety/secrets/SPRING_OAUTH_GOOGLE_CLIENT_ID.txt
  SPRING_OAUTH_GOOGLE_CLIENT_SECRET:
    file: /Users/samuelsegal/git/gigety/secrets/SPRING_OAUTH_GOOGLE_CLIENT_SECRET.txt
services:
  gigety:
    command:
    - --providers.docker=true
    - --providers.docker.endpoint=unix:///var/run/docker.sock
    - --providers.docker.swarmMode=true
    - --providers.docker.exposedByDefault=false
    - --providers.docker.network=gigety
    - --entrypoints.web.address=:80
    - --entrypoints.websecure.address=:443
    - --certificatesresolvers.letsencryptresolver.acme.httpchallenge=true
    - --certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web
    - --certificatesresolvers.letsencryptresolver.acme.email=samuelmosessegal@gmail.com
    - --certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.json
    deploy:
      labels:
        APP: gigety
        traefik.enable: "true"
        traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
        traefik.http.routers.http-catchall.entrypoints: web
        traefik.http.routers.http-catchall.middlewares: redirect-to-https@docker
        traefik.http.routers.http-catchall.rule: hostregexp(`{host:.+}`)
      mode: global
      placement:
        constraints:
        - node.role==manager
    image: traefik:v2.2
    networks:
      gigety: {}
    ports:
    - mode: host
      published: 80
      target: 80
    - mode: host
      published: 443
      target: 443
    - mode: host
      published: 8080
      target: 8080
    volumes:
    - traefik-certificates:/letsencrypt:rw
    - /var/run/docker.sock:/var/run/docker.sock:rw
  gigety-reactjs:
    container_name: gigety-reactjs
    deploy:
      labels:
        APP: gigety-reactjs
        traefik.docker.network: gigety
        traefik.enable: "true"
        traefik.http.routers.gigety-reactjs.entrypoints: websecure
        traefik.http.routers.gigety-reactjs.rule: Host(`gigety.com`)
        traefik.http.routers.gigety-reactjs.tls.certresolver: letsencryptresolve
        traefik.http.services.gigety-reactjs.loadbalancer.server.port: '3000'
      mode: replicated
      replicas: 1
    environment:
      REACT_APP_GIGETY_URL: https://gigety.com
    image: samuelsegal/gigety-reactjs
    networks:
      gigety: {}
  gigety-redis:
    command: redis-server --requirepass giggidy
    container_name: gigety-redis
    deploy:
      labels:
        APP: gigety-redis
      mode: replicated
      replicas: 1
    image: redis:alpine3.11
    networks:
      gigety: {}
    secrets:
    - source: DEV_GIGETY_PW
  gigety-ur-mysql:
    container_name: gigety-ur-mysql
    deploy:
      labels:
        APP: gigety-ur-mysql
      mode: replicated
      replicas: 1
    environment:
      MYSQL_DATABASE: gigety_um
      MYSQL_PASSWORD_FILE: /run/secrets/DEV_GIGETY_PW
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/DEV_GIGETY_PW
      MYSQL_USER_FILE: /run/secrets/DEV_GIGETY_USR
    image: mysql
    networks:
      gigety-ur-mysql: {}
    secrets:
    - source: DEV_GIGETY_PW
    - source: DEV_GIGETY_USR
    volumes:
    - ur-mysql:/var/lib/mysql:rw
  gigety-user-registration:
    container_name: gigety-user-registration
    depends_on:
    - gigety-ur-mysql
    deploy:
      labels:
        APP: gigety-user-registration
        traefik.docker.network: gigety
        traefik.enable: "true"
        traefik.http.routers.gigety-user-registration.entrypoints: websecure
        traefik.http.routers.gigety-user-registration.rule: (Host(`gigety.com`) &&
          PathPrefix(`/ur`))
        traefik.http.routers.gigety-user-registration.tls.certresolver: letsencryptresolver
        traefik.http.services.gigety-user-registration.loadbalancer.server.port: '8084'
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
    environment:
      DEV_GIGETY_PW_FILE: /run/secrets/DEV_GIGETY_PW
      DEV_GIGETY_USR_FILE: /run/secrets/DEV_GIGETY_USR
      SMS_GMAIL_NAME_FILE: /run/secrets/SMS_GMAIL_NAME
      SMS_GMAIL_PW_FILE: /run/secrets/SMS_GMAIL_PW
    image: samuelsegal/gigety-user-registration
    networks:
      gigety: {}
      gigety-ur-mysql: {}
    restart: always
    secrets:
    - source: DEV_GIGETY_PW
    - source: DEV_GIGETY_USR
  gigety-web-api:
    container_name: gigety-web-api
    depends_on:
    - gigety-web-api-mysql
    deploy:
      labels:
        APP: gigety-web-api
        traefik.docker.network: gigety
        traefik.enable: "true"
        traefik.http.routers.gigety-web-api.entrypoints: websecure
        traefik.http.routers.gigety-web-api.rule: (Host(`gigety.com`) && PathPrefix(`/api`))
        traefik.http.routers.gigety-web-api.tls.certresolver: letsencryptresolve
        traefik.http.services.gigety-web-api.loadbalancer.server.port: '8080'
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
    environment:
      DEV_GIGETY_PW_FILE: /run/secrets/DEV_GIGETY_PW
      DEV_GIGETY_USR_FILE: /run/secrets/DEV_GIGETY_USR
      SPRING_OAUTH_FACEBOOK_APP_ID_FILE: /run/secrets/SPRING_OAUTH_FACEBOOK_APP_ID
      SPRING_OAUTH_FACEBOOK_APP_SECRET_FILE: /run/secrets/SPRING_OAUTH_FACEBOOK_APP_SECRET
      SPRING_OAUTH_GOOGLE_CLIENT_ID_FILE: /run/secrets/SPRING_OAUTH_GOOGLE_CLIENT_ID
      SPRING_OAUTH_GOOGLE_CLIENT_SECRET_FILE: /run/secrets/SPRING_OAUTH_GOOGLE_CLIENT_SECRET
    image: samuelsegal/gigety-web-api
    networks:
      gigety: {}
      gigety-web-api-mysql: {}
    restart: always
    secrets:
    - source: DEV_GIGETY_PW
    - source: DEV_GIGETY_USR
  gigety-web-api-mysql:
    container_name: gigety-web-api-mysql
    deploy:
      labels:
        APP: gigety-web-api-mysql
      mode: replicated
      replicas: 1
    environment:
      MYSQL_DATABASE: gigety_users
      MYSQL_PASSWORD_FILE: /run/secrets/DEV_GIGETY_PW
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/DEV_GIGETY_PW
      MYSQL_USER_FILE: /run/secrets/DEV_GIGETY_USR
    image: mysql
    networks:
      gigety-web-api-mysql: {}
    secrets:
    - source: DEV_GIGETY_PW
    - source: DEV_GIGETY_USR
    volumes:
    - api-mysql:/var/lib/mysql:rw
version: '3.7'
volumes:
  api-mysql: {}
  gigety-user-registration: {}
  gigety-web-api: {}
  traefik-certificates: {}
  ur-mysql: {}

