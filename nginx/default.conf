upstream gigety-reactjs {
  server gigety-reactjs:3000;
}
upstream gigety-user-registration {
  server gigety-user-registration:8084;
}
upstream gigety-web-api {
  server gigety-web-api:8080;
}
server {
  listen 80;
  server_name gigety-nginx localhost;
  
  location /ur {

    if ($request_method ~* "(GET|POST)") {
      add_header "Access-Control-Allow-Origin"  $host;
      add_header "Access-Control-Allow-Credentials"  true;
    }

    # Preflighted requests
    if ($request_method = OPTIONS ) {
       add_header "Access-Control-Allow-Origin" $host;
       add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
       add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
       add_header "Access-Control-Allow-Credentials"  true;
       return 200;
    }

    proxy_pass http://gigety-user-registration;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass_header X-XSRF-TOKEN;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";    

  }


  location /api {

    if ($request_method ~* "(GET|POST)") {
      add_header "Access-Control-Allow-Origin"  $host;
      add_header "Access-Control-Allow-Credentials"  true;
    }

    # Preflighted requests
    if ($request_method = OPTIONS ) {
       add_header "Access-Control-Allow-Origin" $host;
       add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
       add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
       add_header "Access-Control-Allow-Credentials"  true;
       return 200;
    }        
    proxy_pass http://gigety-web-api;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass_header X-XSRF-TOKEN;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";    

  }
  location / {
    
    if ($request_method ~* "(GET|POST)") {
      add_header "Access-Control-Allow-Origin"  $host;
      add_header "Access-Control-Allow-Credentials"  true;
    }

    # Preflighted requests
    if ($request_method = OPTIONS ) {
       add_header "Access-Control-Allow-Origin" $host;
       add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
       add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
       add_header "Access-Control-Allow-Credentials"  true;
       return 200;
    }

    proxy_pass http://gigety-reactjs;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass_header X-XSRF-TOKEN;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";    

  }
}