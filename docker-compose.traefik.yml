version: '3.7'
services:
    gigety:
        image: traefik:v2.2
        ports:
            - target: 80
              published: 80
              mode: host
            - target: 443
              published: 443
              mode: host
            - target: 8080
              published: 8080
              mode: host
        command:
            - '--providers.docker=true'
            - '--providers.docker.endpoint=unix:///var/run/docker.sock'
            - '--providers.docker.swarmMode=true'
            - '--providers.docker.exposedByDefault=false'
            - '--providers.docker.network=gigety'
            - '--entrypoints.web.address=:80'
            - '--entrypoints.websecure.address=:443'
            - '--certificatesresolvers.letsencryptresolver.acme.httpchallenge=true'
            - '--certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web'
            - '--certificatesresolvers.letsencryptresolver.acme.email=samuelmosessegal@.com'
            - '--certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.json'

        networks:
            - gigety
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - traefik-certificates:/letsencrypt
        deploy:
            mode: global
            labels:
                - 'APP=gigety'
                - 'traefik.enable=true'
                - 'traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)'
                - 'traefik.http.routers.http-catchall.entrypoints=web'
                - 'traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker'
                - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'
            placement:
                constraints: [node.role==manager]
volumes:
    traefik-certificates:

#configs:
#    traefik_htpasswd:
#        file: ./htpasswd

networks:
    gigety:
        driver: overlay
        external: true
