# Docker Secrets used to set secret environment variables
docker-secret:
    bind-path: /run/secrets

# Allow Thymeleaf to hot reload
spring:
    thymeleaf:
        cache: false

    mail:
        default-encoding: UTF-8
        host: smtp.gmail.com
        port: 587
        protocol: smtp
        username: ${SMS_GMAIL_NAME}
        password: ${SMS_GMAIL_PW}
        properties:
            mail:
                smtp:
                    auth: true
                    starttls:
                        enable: true
        test-connection: false

    banner:
        image:
            height: 2

    jpa:
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5Dialect
        hibernate:
            ddl-auto: create
    datasource:
        # Set initialization-mode: always for schema.sql to execute on startup for databases other than
        # H2,DERBY,HSQL. These are only enabled databases by default for data initializing
        initialization-mode: always
        #url: jdbc:mysql://localhost:3306/gigety_um?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        #username: root
        #password:
        url: jdbc:mysql://gigety-ur-mysql:3306/gigety_um?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: ${DEV_GIGETY_USR}
        password: ${DEV_GIGETY_PW}
        # driver-class-name:
        # driver-class-name: com.mysql.jdbc.Driver
    redis:
        #host: localhost
        host: gigety-redis
        port: 6379
        password: ${DEV_GIGETY_PW}
        #password:
        jedis:
            pool:
                max-active: 7
                max-idle: 7
                min-idle: 2
                max-wait: -1ms
    cache:
        redis:
            cache-null-values: false
            time-to-live: 600000
            use-key-prefix: true
        type: redis
        cache-names:
            - lockedUserCache
            - allLockedUserCache
    #security:
    #oauth2:
    #resourceserver:
    #jwt:
    #jwk-set-uri:  http://localhost:8084/endpoint/jwks.json
server:
    tomcat:
        accesslog:
            enabled: true
        basedir: target/tomcat

    port: 8084
    servlet:
        context-path: /ur
    forward-headers-strategy: framework
logging:
    level:
        com.gigety.ur: debug
        org.springframework.security: debug

gigety:
    root-url: http://localhost:8083
    email:
        support: samuelmosessegal@gmail.com
    redirect-uris:
        - 'http://localhost:8080/login/oauth2/code/samo'
        - 'http://localhost/login/oauth2/code/samo'
        - 'http://localhost/api/oauth2/code/samo'
        - 'http://localhost/api/oauth2/callback/samo'
        - 'http://localhost/api'
        - 'http://localhost:8080/api/oauth2/code/samo'
        - 'http://localhost:8080/api/oauth2/callback/samo'
        - 'http://localhost:8080/api'
        - 'http://localhost/oauth2/code/samo'
        - 'http://localhost/oauth2/callback/samo'
        - 'http://localhost'
        - 'http://localhost:8080/oauth2/code/samo'
        - 'http://localhost:8080/oauth2/callback/samo'
        - 'http://localhost:8080'
        - 'http://localhost:8080/api/login/oauth2/code/samo'
        - 'http://gigety-web-api/api/oauth2/code/samo'
        - 'http://gigety-web-api/api/oauth2/callback/samo'
        - 'http://gigety-web-api/api'
        - 'http://gigety-web-api/api/login/oauth2/code/samo'
        - 'http://gigety-nginx/api/oauth2/code/samo'
        - 'http://gigety-nginx/api/oauth2/callback/samo'
        - 'http://gigety-nginx/api'
        - 'http://gigety-nginx/api/login/oauth2/code/samo'
        - 'http://gigety/api/oauth2/code/samo'
        - 'http://gigety/api/oauth2/callback/samo'
        - 'http://gigety/api'
        - 'http://gigety/api/login/oauth2/code/samo'
        - 'https://gigety.com/api/oauth2/code/samo'
        - 'https://gigety.com/api/oauth2/callback/samo'
        - 'https://gigety.com/api'
        - 'https://gigety.com/api/login/oauth2/code/samo'
